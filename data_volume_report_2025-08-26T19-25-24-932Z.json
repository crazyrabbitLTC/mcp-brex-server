{
  "timestamp": "2025-08-26T19:25:13.196Z",
  "environment": {
    "hasBrexApiKey": false,
    "apiKeyLength": 0
  },
  "dataVolumeTests": [
    {
      "tool": "get_all_card_expenses",
      "scenario": 1,
      "description": "Standard test",
      "arguments": {
        "page_size": 1,
        "max_items": 1,
        "summary_only": true
      },
      "expected": "TINY",
      "status": "success",
      "responseSize": 236,
      "sizeCategory": "TINY",
      "executionTime": 340,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 2,
      "description": "Standard test",
      "arguments": {
        "page_size": 5,
        "max_items": 5,
        "summary_only": true
      },
      "expected": "SMALL",
      "status": "success",
      "responseSize": 236,
      "sizeCategory": "TINY",
      "executionTime": 97,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 3,
      "description": "Standard test",
      "arguments": {
        "page_size": 10,
        "max_items": 10,
        "summary_only": true
      },
      "expected": "SMALL",
      "status": "success",
      "responseSize": 238,
      "sizeCategory": "TINY",
      "executionTime": 86,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 4,
      "description": "Standard test",
      "arguments": {
        "page_size": 50,
        "max_items": 50,
        "summary_only": true
      },
      "expected": "MEDIUM",
      "status": "success",
      "responseSize": 238,
      "sizeCategory": "TINY",
      "executionTime": 82,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 5,
      "description": "Standard test",
      "arguments": {
        "page_size": 50,
        "max_items": 50,
        "summary_only": false
      },
      "expected": "LARGE",
      "status": "success",
      "responseSize": 238,
      "sizeCategory": "TINY",
      "executionTime": 91,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 6,
      "description": "Standard test",
      "arguments": {
        "page_size": 100,
        "max_items": 100,
        "summary_only": false
      },
      "expected": "EXCESSIVE",
      "status": "success",
      "responseSize": 240,
      "sizeCategory": "TINY",
      "executionTime": 78,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_expenses",
      "scenario": 1,
      "description": "Standard test",
      "arguments": {
        "page_size": 1,
        "max_items": 1,
        "summary_only": true
      },
      "expected": "TINY",
      "status": "error",
      "responseSize": 0,
      "sizeCategory": "TINY",
      "executionTime": 80,
      "error": "MCP error -32603: Failed to get expenses: Request failed with status code 403",
      "hasData": false,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_expenses",
      "scenario": 2,
      "description": "Standard test",
      "arguments": {
        "page_size": 10,
        "max_items": 10,
        "summary_only": true
      },
      "expected": "SMALL",
      "status": "error",
      "responseSize": 0,
      "sizeCategory": "TINY",
      "executionTime": 170,
      "error": "MCP error -32603: Failed to get expenses: Request failed with status code 403",
      "hasData": false,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_expenses",
      "scenario": 3,
      "description": "Standard test",
      "arguments": {
        "page_size": 50,
        "max_items": 50,
        "summary_only": false
      },
      "expected": "LARGE",
      "status": "error",
      "responseSize": 0,
      "sizeCategory": "TINY",
      "executionTime": 97,
      "error": "MCP error -32603: Failed to get expenses: Request failed with status code 403",
      "hasData": false,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_card_transactions",
      "scenario": 1,
      "description": "Standard test",
      "arguments": {
        "limit": 5,
        "posted_at_start": "2025-08-25T00:00:00Z",
        "summary_only": true,
        "fields": [
          "id",
          "posted_at",
          "amount.amount"
        ]
      },
      "expected": "SMALL",
      "status": "error",
      "responseSize": 0,
      "sizeCategory": "TINY",
      "executionTime": 84,
      "error": "MCP error -32603: Request failed with status code 403",
      "hasData": false,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_card_transactions",
      "scenario": 2,
      "description": "Standard test",
      "arguments": {
        "limit": 50,
        "posted_at_start": "2025-08-20T00:00:00Z",
        "summary_only": false
      },
      "expected": "LARGE",
      "status": "error",
      "responseSize": 0,
      "sizeCategory": "TINY",
      "executionTime": 77,
      "error": "MCP error -32603: Request failed with status code 403",
      "hasData": false,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_budgets",
      "scenario": 1,
      "description": "Standard test",
      "arguments": {
        "limit": 5,
        "summary_only": true
      },
      "expected": "SMALL",
      "status": "error",
      "responseSize": 0,
      "sizeCategory": "TINY",
      "executionTime": 120,
      "error": "MCP error -32603: Request failed with status code 403",
      "hasData": false,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_budgets",
      "scenario": 2,
      "description": "Standard test",
      "arguments": {
        "limit": 20,
        "summary_only": false
      },
      "expected": "MEDIUM",
      "status": "error",
      "responseSize": 0,
      "sizeCategory": "TINY",
      "executionTime": 130,
      "error": "MCP error -32603: Request failed with status code 403",
      "hasData": false,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 1,
      "description": "Minimal fields",
      "arguments": {
        "page_size": 10,
        "max_items": 10,
        "summary_only": true,
        "fields": [
          "id"
        ]
      },
      "expected": "TINY",
      "status": "success",
      "responseSize": 238,
      "sizeCategory": "TINY",
      "executionTime": 152,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 2,
      "description": "Key fields only",
      "arguments": {
        "page_size": 10,
        "max_items": 10,
        "summary_only": true,
        "fields": [
          "id",
          "status",
          "purchased_amount.amount",
          "merchant.raw_descriptor"
        ]
      },
      "expected": "SMALL",
      "status": "success",
      "responseSize": 238,
      "sizeCategory": "TINY",
      "executionTime": 94,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 3,
      "description": "All fields",
      "arguments": {
        "page_size": 10,
        "max_items": 10,
        "summary_only": false
      },
      "expected": "LARGE",
      "status": "success",
      "responseSize": 238,
      "sizeCategory": "TINY",
      "executionTime": 82,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 1,
      "description": "1 day range",
      "arguments": {
        "page_size": 50,
        "max_items": 50,
        "start_date": "2025-08-26T00:00:00Z",
        "end_date": "2025-08-26T23:59:59Z",
        "summary_only": true
      },
      "expected": "SMALL",
      "status": "success",
      "responseSize": 342,
      "sizeCategory": "TINY",
      "executionTime": 80,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 2,
      "description": "7 day range",
      "arguments": {
        "page_size": 50,
        "max_items": 50,
        "start_date": "2025-08-20T00:00:00Z",
        "end_date": "2025-08-26T23:59:59Z",
        "summary_only": true
      },
      "expected": "MEDIUM",
      "status": "success",
      "responseSize": 342,
      "sizeCategory": "TINY",
      "executionTime": 80,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    },
    {
      "tool": "get_all_card_expenses",
      "scenario": 3,
      "description": "2 month range",
      "arguments": {
        "page_size": 50,
        "max_items": 50,
        "start_date": "2025-07-01T00:00:00Z",
        "end_date": "2025-08-26T23:59:59Z",
        "summary_only": true
      },
      "expected": "LARGE",
      "status": "success",
      "responseSize": 342,
      "sizeCategory": "TINY",
      "executionTime": 82,
      "error": null,
      "hasData": true,
      "dataMetrics": {
        "itemCount": 0,
        "avgItemSize": 0
      }
    }
  ],
  "summary": {
    "totalTests": 19,
    "avgResponseSize": 264,
    "largestResponse": 342,
    "largestTool": "get_all_card_expenses (scenario 1)",
    "excessiveDataTools": [],
    "sizeCategoryCounts": {
      "TINY": 19,
      "SMALL": 0,
      "MEDIUM": 0,
      "LARGE": 0,
      "EXCESSIVE": 0
    }
  }
}