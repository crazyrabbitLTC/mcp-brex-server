[
  {
    "markdown": "# Budgets API(1.0)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/6847c596-e624-4f91-a172-9aeffca72c25)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nThe budgets API lets you manage your Brex Budgets and Spend Limits.\n\n# [tag/Spend-Limits-(v1)](https://developer.brex.com/openapi/budgets_api/\\#tag/Spend-Limits-(v1)) Spend Limits (v1)\n\nEndpoints for Spend Limits data. Please note that /v1/budgets targets spend limits, and will soon be deprecated in favor of /v2/spend\\_limits.\n\n## [operation/listBudgets](https://developer.brex.com/openapi/budgets_api/\\#operation/listBudgets) List Spend Limits\n\nLists Spend Limits belonging to this account\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nA page with a list of Spend Limits\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v1/budgets\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/budgets \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"budget_id\": \"string\",\\\n\"account_id\": \"string\",\\\n\"creator_user_id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"member_user_ids\": [\\\n\"string\"],\\\n\"period_type\": \"WEEKLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"budget_status\": \"APPROVED\",\\\n\"limit_type\": \"HARD\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\\\n\"current_period_balance\": {\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"balance\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"}},\\\n\"limit_visibility\": \"SHARED\",\\\n\"templateId\": \"string\",\\\n\"budget_type\": \"BUDGET\"}]}`\n\n## [operation/createBudget](https://developer.brex.com/openapi/budgets_api/\\#operation/createBudget) Create Spend Limit\n\nCreates a Spend Limit\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name<br>required | string<br>Name for the Spend Limit. |\n| description<br>required | string<br>Description of what the Spend Limit is used for. |\n| parent\\_budget\\_id<br>required | string<br>ID of parent Budget. |\n| owner\\_user\\_ids | Array of strings or null<br>User IDs of the owners of the Spend Limit. |\n| member\\_user\\_ids | Array of strings or null<br>User IDs of the members of the Spend Limit. |\n| period\\_type<br>required | string (PeriodType) <br>Period type of the Spend Limit e.g. MONTHLY.<br>Enum:\"WEEKLY\"\"MONTHLY\"\"QUARTERLY\"\"YEARLY\"\"ONE\\_TIME\" |\n| limit<br>required | object (Money) <br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| limit\\_type<br>required | string (LimitType) <br>Whether the Spend Limit's limit blocks spend.<br>Enum:\"HARD\"\"SOFT\" |\n| spend\\_type<br>required | string (SpendType) <br>Whether this Spend Limit only can be spent from by cards provisioned by this Spend Limit. <br>Enum:\"BUDGET\\_PROVISIONED\\_CARDS\\_ONLY\"\"NON\\_BUDGET\\_PROVISIONED\\_CARDS\\_ALLOWED\" |\n| start\\_date | string or null<date><br>The UTC date when the Spend Limit should start counting. |\n| end\\_date | string or null<date><br>The UTC date when the Spend Limit should stop counting. |\n| limit\\_visibility<br>required | string (BudgetLimitVisibilityType) <br>Determines if Spend Limit members are allowed to view the Spend Limit's limit.<br>Enum:\"SHARED\"\"PRIVATE\" |\n| policy\\_id | string or null |\n| entity\\_id | string or null |\n\nResponses\n\n200\nThe Spend Limit that was created\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\npost/v1/budgets\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"period_type\": \"WEEKLY\",\n\"limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_type\": \"HARD\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"limit_visibility\": \"SHARED\",\n\"policy_id\": \"string\",\n\"entity_id\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"budget_id\": \"string\",\n\"account_id\": \"string\",\n\"creator_user_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"period_type\": \"WEEKLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"budget_status\": \"APPROVED\",\n\"limit_type\": \"HARD\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"current_period_balance\": {\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"balance\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"limit_visibility\": \"SHARED\",\n\"templateId\": \"string\",\n\"budget_type\": \"BUDGET\"}`\n\n## [operation/getBudgetById](https://developer.brex.com/openapi/budgets_api/\\#operation/getBudgetById) Get Spend Limit\n\nRetrieves a Spend Limit by ID\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Spend Limit that was retrieved\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v1/budgets/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/budgets/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"budget_id\": \"string\",\n\"account_id\": \"string\",\n\"creator_user_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"period_type\": \"WEEKLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"budget_status\": \"APPROVED\",\n\"limit_type\": \"HARD\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"current_period_balance\": {\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"balance\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"limit_visibility\": \"SHARED\",\n\"templateId\": \"string\",\n\"budget_type\": \"BUDGET\"}`\n\n## [operation/updateBudget](https://developer.brex.com/openapi/budgets_api/\\#operation/updateBudget) Update Spend Limit\n\nUpdates a Spend Limit\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name | string or null<br>Name for the Spend Limit. |\n| description | string or null<br>Description of what the Spend Limit is used for. |\n| owner\\_user\\_ids | Array of strings or null<br>User IDs of the owners of the Spend Limit. |\n| member\\_user\\_ids | Array of strings or null<br>User IDs of the members of the Spend Limit. |\n| limit | object or null<br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| limit\\_type | string or null<br>Whether the Spend Limit's limit blocks spend.<br>Enum:\"HARD\"\"SOFT\" |\n| spend\\_type | string or null<br>Whether this Spend Limit only can be spent from by cards provisioned by this Spend Limit. <br>Enum:\"BUDGET\\_PROVISIONED\\_CARDS\\_ONLY\"\"NON\\_BUDGET\\_PROVISIONED\\_CARDS\\_ALLOWED\" |\n| start\\_date | string or null<date><br>The UTC date when the Spend Limit should start counting. |\n| end\\_date | string or null<date><br>The UTC date when the Spend Limit should stop counting. |\n| limit\\_visibility | string or null<br>Determines if Spend Limit members are allowed to view the Spend Limit's limit.<br>Enum:\"SHARED\"\"PRIVATE\" |\n| period\\_type | string or null<br>Period type of the Spend Limit e.g. MONTHLY.<br>Enum:\"WEEKLY\"\"MONTHLY\"\"QUARTERLY\"\"YEARLY\"\"ONE\\_TIME\" |\n\nResponses\n\n200\nThe Spend Limit that was updated\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nput/v1/budgets/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"name\": \"string\",\n\"description\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_type\": \"HARD\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"limit_visibility\": \"SHARED\",\n\"period_type\": \"WEEKLY\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"budget_id\": \"string\",\n\"account_id\": \"string\",\n\"creator_user_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"period_type\": \"WEEKLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"budget_status\": \"APPROVED\",\n\"limit_type\": \"HARD\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"current_period_balance\": {\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"balance\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"limit_visibility\": \"SHARED\",\n\"templateId\": \"string\",\n\"budget_type\": \"BUDGET\"}`\n\n## [operation/archiveBudget](https://developer.brex.com/openapi/budgets_api/\\#operation/archiveBudget) Archive a Spend Limit\n\nArchives a Spend Limit, making it unusable for future expenses and removing it from the UI\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Spend Limit that was archived\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\npost/v1/budgets/{id}/archive\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X POST \\\n  'https://platform.brexapis.com/v1/budgets/{id}/archive' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\n# [tag/Budget-Programs](https://developer.brex.com/openapi/budgets_api/\\#tag/Budget-Programs) Budget Programs\n\nEndpoints for Budget Programs data.\n\n## [operation/listBudgetPrograms](https://developer.brex.com/openapi/budgets_api/\\#operation/listBudgetPrograms) List Budget Programs\n\nLists Budget Programs belonging to this account\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nA page with a list of Budget Programs\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v1/budget\\_programs\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/budget_programs \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"budget_blueprints\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"period_type\": \"WEEKLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_type\": \"HARD\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\\\n\"limit_visibility\": \"SHARED\"}],\\\n\"existing_budget_ids\": [\\\n\"string\"],\\\n\"employee_filter\": {\\\n\"employment_status\": \"EMPLOYMENT_STATUS_ACTIVE\",\\\n\"employment_type\": \"EMPLOYMENT_TYPE_FULL_TIME\"},\\\n\"budget_program_status\": \"BUDGET_PROGRAM_STATUS_ACTIVE\",\\\n\"creator_user_id\": \"string\",\\\n\"created_at\": \"2019-08-24\",\\\n\"updated_at\": \"2019-08-24\"}]}`\n\n## [operation/createBudgetProgram](https://developer.brex.com/openapi/budgets_api/\\#operation/createBudgetProgram) Create Budget Program\n\nCreates a Budget Program\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| existing\\_budget\\_ids | Array of strings or null<br>IDs for existing Spend Limits associated with this Budget Program. |\n| budget\\_blueprints<br>required | Array of objects (CreateBudgetBlueprintRequest) |\n| employee\\_filter | object or null<br>A filter used to determine if a user adheres to a Budget Program. |\n| name<br>required | string |\n| description | string or null |\n\nResponses\n\n200\nThe Budget Program that was created\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\npost/v1/budget\\_programs\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"existing_budget_ids\": [\\\n\"string\"],\n\"budget_blueprints\": [\\\n{\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"period_type\": \"WEEKLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_type\": \"HARD\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\\\n\"limit_visibility\": \"SHARED\"}],\n\"employee_filter\": {\n\"employment_status\": \"EMPLOYMENT_STATUS_ACTIVE\",\n\"employment_type\": \"EMPLOYMENT_TYPE_FULL_TIME\"},\n\"name\": \"string\",\n\"description\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"budget_blueprints\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"period_type\": \"WEEKLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_type\": \"HARD\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\\\n\"limit_visibility\": \"SHARED\"}],\n\"existing_budget_ids\": [\\\n\"string\"],\n\"employee_filter\": {\n\"employment_status\": \"EMPLOYMENT_STATUS_ACTIVE\",\n\"employment_type\": \"EMPLOYMENT_TYPE_FULL_TIME\"},\n\"budget_program_status\": \"BUDGET_PROGRAM_STATUS_ACTIVE\",\n\"creator_user_id\": \"string\",\n\"created_at\": \"2019-08-24\",\n\"updated_at\": \"2019-08-24\"}`\n\n## [operation/getBudgetProgramById](https://developer.brex.com/openapi/budgets_api/\\#operation/getBudgetProgramById) Get Budget Program\n\nRetrieves a Budget Program by ID\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Budget Program that was retrieved\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v1/budget\\_programs/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/budget_programs/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"budget_blueprints\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"period_type\": \"WEEKLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_type\": \"HARD\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\\\n\"limit_visibility\": \"SHARED\"}],\n\"existing_budget_ids\": [\\\n\"string\"],\n\"employee_filter\": {\n\"employment_status\": \"EMPLOYMENT_STATUS_ACTIVE\",\n\"employment_type\": \"EMPLOYMENT_TYPE_FULL_TIME\"},\n\"budget_program_status\": \"BUDGET_PROGRAM_STATUS_ACTIVE\",\n\"creator_user_id\": \"string\",\n\"created_at\": \"2019-08-24\",\n\"updated_at\": \"2019-08-24\"}`\n\n## [operation/updateBudgetProgram](https://developer.brex.com/openapi/budgets_api/\\#operation/updateBudgetProgram) Update Budget Program\n\nUpdates a Budget Program\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| existing\\_budget\\_ids | Array of strings or null<br>IDs for existing Spend Limits associated with this Budget Program. |\n| budget\\_blueprints | Array of objects or null (UpdateBudgetBlueprintRequest) <br>The Blueprints to update the budget program with. Blueprints without an ID are treated as new blueprints to be created.<br>Blueprints that exist currently on the Budget Program, but are missing from the input, will be deleted. |\n| employee\\_filter | object or null<br>A filter used to determine if a user adheres to a Budget Program. |\n| name | string or null |\n| description | string or null |\n\nResponses\n\n200\nThe Budget Program that was updated\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nput/v1/budget\\_programs/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"existing_budget_ids\": [\\\n\"string\"],\n\"budget_blueprints\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"period_type\": \"WEEKLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_type\": \"HARD\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\"}],\n\"employee_filter\": {\n\"employment_status\": \"EMPLOYMENT_STATUS_ACTIVE\",\n\"employment_type\": \"EMPLOYMENT_TYPE_FULL_TIME\"},\n\"name\": \"string\",\n\"description\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"budget_blueprints\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"period_type\": \"WEEKLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_type\": \"HARD\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\\\n\"limit_visibility\": \"SHARED\"}],\n\"existing_budget_ids\": [\\\n\"string\"],\n\"employee_filter\": {\n\"employment_status\": \"EMPLOYMENT_STATUS_ACTIVE\",\n\"employment_type\": \"EMPLOYMENT_TYPE_FULL_TIME\"},\n\"budget_program_status\": \"BUDGET_PROGRAM_STATUS_ACTIVE\",\n\"creator_user_id\": \"string\",\n\"created_at\": \"2019-08-24\",\n\"updated_at\": \"2019-08-24\"}`\n\n## [operation/deleteBudgetProgram](https://developer.brex.com/openapi/budgets_api/\\#operation/deleteBudgetProgram) Delete Budget Program\n\nDelete a Budget Program by ID\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Budget Program that was deleted\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\ndelete/v1/budget\\_programs/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X DELETE \\\n  'https://platform.brexapis.com/v1/budget_programs/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\n# [tag/Budgets](https://developer.brex.com/openapi/budgets_api/\\#tag/Budgets) Budgets\n\nEndpoints for Budgets data.\n\n## [operation/listSpendBudgets](https://developer.brex.com/openapi/budgets_api/\\#operation/listSpendBudgets) List Budgets\n\nRetrieves a list of Budgets\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nA page with a list of Budgets\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v2/budgets\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/budgets \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"budget_id\": \"string\",\\\n\"account_id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"period_recurrence_type\": \"MONTHLY\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"spend_budget_status\": \"ACTIVE\",\\\n\"limit_type\": \"HARD\"}]}`\n\n## [operation/createSpendBudget](https://developer.brex.com/openapi/budgets_api/\\#operation/createSpendBudget) Create Budget\n\nCreates a Budget\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name<br>required | string<br>Name for the Budget. |\n| description<br>required | string<br>Description of what the Budget is used for. |\n| parent\\_budget\\_id<br>required | string<br>ID of parent Budget. |\n| owner\\_user\\_ids | Array of strings or null<br>User IDs of the owners of the Budget. |\n| period\\_recurrence\\_type<br>required | string<br>Period type of the Budget e.g. MONTHLY.<br>Enum:\"MONTHLY\"\"QUARTERLY\"\"YEARLY\"\"ONE\\_TIME\" |\n| amount<br>required | object (Money) <br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| limit\\_type | string or null<br>Whether the Budget amount blocks spend.<br>Enum:\"HARD\"\"SOFT\" |\n| start\\_date | string or null<date><br>The date when the Budget should start counting. |\n| end\\_date | string or null<date><br>The date when the Budget should stop counting. |\n\nResponses\n\n200\nThe Budget that was created\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\npost/v2/budgets\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"period_recurrence_type\": \"MONTHLY\",\n\"amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_type\": \"HARD\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"budget_id\": \"string\",\n\"account_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"period_recurrence_type\": \"MONTHLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"spend_budget_status\": \"ACTIVE\",\n\"limit_type\": \"HARD\"}`\n\n## [operation/getSpendBudgetById](https://developer.brex.com/openapi/budgets_api/\\#operation/getSpendBudgetById) Get Budget\n\nRetrieves a Budget by ID\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Budget that was retrieved\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v2/budgets/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/budgets/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"budget_id\": \"string\",\n\"account_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"period_recurrence_type\": \"MONTHLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"spend_budget_status\": \"ACTIVE\",\n\"limit_type\": \"HARD\"}`\n\n## [operation/updateSpendBudget](https://developer.brex.com/openapi/budgets_api/\\#operation/updateSpendBudget) Update Budget\n\nUpdates a Budget\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name | string or null<br>Name for the Budget. |\n| description | string or null<br>Description of what the Budget is used for. |\n| parent\\_budget\\_id | string or null<br>ID of parent Budget. |\n| owner\\_user\\_ids | Array of strings or null<br>User IDs of the owners of the Budget. |\n| period\\_recurrence\\_type | string or null<br>Period type of the Budget e.g. MONTHLY.<br>Enum:\"MONTHLY\"\"QUARTERLY\"\"YEARLY\"\"ONE\\_TIME\" |\n| amount | object or null<br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| limit\\_type | string or null<br>Whether the Budget amount blocks spend.<br>Enum:\"HARD\"\"SOFT\" |\n| start\\_date | string or null<date><br>The date when the Budget should start counting. |\n| end\\_date | string or null<date><br>The date when the Budget should stop counting. |\n\nResponses\n\n200\nThe Budget that was updated\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nput/v2/budgets/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"period_recurrence_type\": \"MONTHLY\",\n\"amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_type\": \"HARD\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"budget_id\": \"string\",\n\"account_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"period_recurrence_type\": \"MONTHLY\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"spend_budget_status\": \"ACTIVE\",\n\"limit_type\": \"HARD\"}`\n\n## [operation/archiveSpendBudget](https://developer.brex.com/openapi/budgets_api/\\#operation/archiveSpendBudget) Archive a Budget\n\nArchives a Budget, making any Spend Limits beneath it unusable for future expenses and removing it from the UI\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Budget that was archived\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\npost/v2/budgets/{id}/archive\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X POST \\\n  'https://platform.brexapis.com/v2/budgets/{id}/archive' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\n# [tag/Spend-Limits-(v2)](https://developer.brex.com/openapi/budgets_api/\\#tag/Spend-Limits-(v2)) Spend Limits (v2)\n\nEndpoints for spend limits data.\n\n## [operation/listSpendLimits](https://developer.brex.com/openapi/budgets_api/\\#operation/listSpendLimits) List Spend Limits\n\nRetrieves a list of Spend Limits\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| member\\_user\\_id\\[\\] | Array of strings or null<br>Filter for spend limits these user ids are members of. |\n\nResponses\n\n200\nA page with a list of Spend Limits\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v2/spend\\_limits\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/spend_limits \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"account_id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\",\\\n\"parent_budget_id\": \"string\",\\\n\"status\": \"ACTIVE\",\\\n\"period_recurrence_type\": \"PER_WEEK\",\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"start_time_utc\": \"2019-08-24T14:15:22Z\",\\\n\"end_time_utc\": \"2019-08-24T14:15:22Z\",\\\n\"authorization_settings\": {\\\n\"base_limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_buffer_percentage\": 0,\\\n\"authorization_type\": \"HARD\",\\\n\"rollover_refresh_rate\": \"OFF\",\\\n\"limit_with_increases\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"}},\\\n\"expense_visibility\": \"SHARED\",\\\n\"authorization_visibility\": \"PUBLIC\",\\\n\"merchant_category_controls\": {\\\n\"allowed_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"],\\\n\"blocked_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"]},\\\n\"transaction_limit\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"limit_increase_setting\": \"ENABLED\",\\\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\\\n\"auto_transfer_cards_setting\": \"DISABLED\",\\\n\"auto_create_limit_cards_setting\": \"DISABLED\",\\\n\"owner_user_ids\": [\\\n\"string\"],\\\n\"member_user_ids\": [\\\n\"string\"],\\\n\"expense_policy_id\": \"string\",\\\n\"limit_increase_request_policy_id\": \"string\",\\\n\"limit_approval_policy_id\": \"string\",\\\n\"current_period_balance\": {\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\",\\\n\"start_time\": \"2019-08-24T14:15:22Z\",\\\n\"end_time\": \"2019-08-24T14:15:22Z\",\\\n\"amount_spent\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"rollover_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"}},\\\n\"legal_entity_id\": \"string\",\\\n\"department_id\": \"string\"}]}`\n\n## [operation/createSpendLimit](https://developer.brex.com/openapi/budgets_api/\\#operation/createSpendLimit) Create Spend Limit\n\nCreates a Spend Limit\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name<br>required | string<br>Name for the Spend Limit. |\n| description | string or null<br>Description of what the Spend Limit is used for. |\n| parent\\_budget\\_id | string or null<br>ID of parent Budget. |\n| period\\_recurrence\\_type<br>required | string<br>Period type of the Spend Limit e.g. MONTHLY.<br>Enum:\"PER\\_WEEK\"\"PER\\_MONTH\"\"PER\\_QUARTER\"\"PER\\_YEAR\"\"ONE\\_TIME\" |\n| start\\_date | string or null<date><br>The date when the Spend Limit should start counting. |\n| end\\_date | string or null<date><br>The date when the Spend Limit should expire. |\n| authorization\\_settings<br>required | object<br>Spend authorization settings. |\n| expense\\_visibility<br>required | string<br>Whether or not expense related to this Spend Limit should be viewable to all members.<br>Enum:\"SHARED\"\"PRIVATE\" |\n| authorization\\_visibility<br>required | string<br>Describes if the limit of the Spend Limit is visible to all members, or just controllers, bookkeepers, and owners (direct or ancestral).<br>Enum:\"PUBLIC\"\"PRIVATE\" |\n| transaction\\_limit | object or null<br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| limit\\_increase\\_setting<br>required | string<br>Whether or not members can request limit increases.<br>Enum:\"ENABLED\"\"DISABLED\" |\n| spend\\_type<br>required | string<br>Whether this Spend Limit only can be spent from by cards provisioned by this Spend Limit. <br>Enum:\"BUDGET\\_PROVISIONED\\_CARDS\\_ONLY\"\"NON\\_BUDGET\\_PROVISIONED\\_CARDS\\_ALLOWED\" |\n| auto\\_transfer\\_cards\\_setting<br>required | string<br>Setting for how auto transfer works for virtual cards.<br>Enum:\"DISABLED\"\"ENABLED\" |\n| auto\\_create\\_limit\\_cards\\_setting<br>required | string<br>Setting for how auto limit card creation works for members.<br>Enum:\"DISABLED\"\"ALL\\_MEMBERS\" |\n| owner\\_user\\_ids | Array of strings or null<br>User IDs of the owners of the Spend Limit. |\n| member\\_user\\_ids | Array of strings or null<br>User IDs of the members of the Spend Limit. |\n| expense\\_policy\\_id<br>required | string<br>The ID of the expense policy corresponding to this Spend Limit. |\n| limit\\_increase\\_request\\_policy\\_id | string or null<br>The ID of the policy for limit increase requests for this Spend Limit. |\n| limit\\_approval\\_policy\\_id | string or null<br>The ID of the policy for limit increase approval requests. Meant to replace limit\\_increase\\_request\\_policy\\_id. |\n| legal\\_entity\\_id | string or null<br>The legal entity ID to which Spend Limit expenses will be attributed. If not set, expenses will be attributed to the spending user's entity. |\n| department\\_id | string or null<br>The department ID to which Spend Limit expenses will be attributed. |\n\nResponses\n\n200\nThe Spend Limit that was created\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\npost/v2/spend\\_limits\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"period_recurrence_type\": \"PER_WEEK\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"authorization_settings\": {\n\"base_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_buffer_percentage\": 0,\n\"authorization_type\": \"HARD\",\n\"rollover_refresh_rate\": \"OFF\"},\n\"expense_visibility\": \"SHARED\",\n\"authorization_visibility\": \"PUBLIC\",\n\"transaction_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_increase_setting\": \"ENABLED\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"auto_transfer_cards_setting\": \"DISABLED\",\n\"auto_create_limit_cards_setting\": \"DISABLED\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"expense_policy_id\": \"string\",\n\"limit_increase_request_policy_id\": \"string\",\n\"limit_approval_policy_id\": \"string\",\n\"legal_entity_id\": \"string\",\n\"department_id\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"account_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"status\": \"ACTIVE\",\n\"period_recurrence_type\": \"PER_WEEK\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"start_time_utc\": \"2019-08-24T14:15:22Z\",\n\"end_time_utc\": \"2019-08-24T14:15:22Z\",\n\"authorization_settings\": {\n\"base_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_buffer_percentage\": 0,\n\"authorization_type\": \"HARD\",\n\"rollover_refresh_rate\": \"OFF\",\n\"limit_with_increases\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"expense_visibility\": \"SHARED\",\n\"authorization_visibility\": \"PUBLIC\",\n\"merchant_category_controls\": {\n\"allowed_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"],\n\"blocked_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"]},\n\"transaction_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_increase_setting\": \"ENABLED\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"auto_transfer_cards_setting\": \"DISABLED\",\n\"auto_create_limit_cards_setting\": \"DISABLED\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"expense_policy_id\": \"string\",\n\"limit_increase_request_policy_id\": \"string\",\n\"limit_approval_policy_id\": \"string\",\n\"current_period_balance\": {\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"start_time\": \"2019-08-24T14:15:22Z\",\n\"end_time\": \"2019-08-24T14:15:22Z\",\n\"amount_spent\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"rollover_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"legal_entity_id\": \"string\",\n\"department_id\": \"string\"}`\n\n## [operation/getSpendLimitById](https://developer.brex.com/openapi/budgets_api/\\#operation/getSpendLimitById) Get Spend Limit\n\nRetrieves a Spend Limit by ID\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Spend Limit that was retrieved\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v2/spend\\_limits/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/spend_limits/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"account_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"status\": \"ACTIVE\",\n\"period_recurrence_type\": \"PER_WEEK\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"start_time_utc\": \"2019-08-24T14:15:22Z\",\n\"end_time_utc\": \"2019-08-24T14:15:22Z\",\n\"authorization_settings\": {\n\"base_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_buffer_percentage\": 0,\n\"authorization_type\": \"HARD\",\n\"rollover_refresh_rate\": \"OFF\",\n\"limit_with_increases\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"expense_visibility\": \"SHARED\",\n\"authorization_visibility\": \"PUBLIC\",\n\"merchant_category_controls\": {\n\"allowed_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"],\n\"blocked_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"]},\n\"transaction_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_increase_setting\": \"ENABLED\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"auto_transfer_cards_setting\": \"DISABLED\",\n\"auto_create_limit_cards_setting\": \"DISABLED\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"expense_policy_id\": \"string\",\n\"limit_increase_request_policy_id\": \"string\",\n\"limit_approval_policy_id\": \"string\",\n\"current_period_balance\": {\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"start_time\": \"2019-08-24T14:15:22Z\",\n\"end_time\": \"2019-08-24T14:15:22Z\",\n\"amount_spent\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"rollover_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"legal_entity_id\": \"string\",\n\"department_id\": \"string\"}`\n\n## [operation/updateSpendLimit](https://developer.brex.com/openapi/budgets_api/\\#operation/updateSpendLimit) Update Spend Limit\n\nUpdates a Spend Limit\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name | string or null<br>Name for the Spend Limit. |\n| description | string or null<br>Description of what the Spend Limit is used for. |\n| status | string or null<br>Status of the Spend Limit e.g. ACTIVE.<br>Enum:\"ACTIVE\"\"EXPIRED\"\"ARCHIVED\"\"DELETED\" |\n| period\\_recurrence\\_type | string or null<br>Period type of the Spend Limit e.g. MONTHLY.<br>Enum:\"PER\\_WEEK\"\"PER\\_MONTH\"\"PER\\_QUARTER\"\"PER\\_YEAR\"\"ONE\\_TIME\" |\n| start\\_date | string or null<date><br>The date when the Spend Limit should start counting. |\n| end\\_date | string or null<date><br>The date when the Spend Limit should expire. |\n| authorization\\_settings | object or null<br>Spend authorization settings. |\n| expense\\_visibility | string or null<br>Whether or not expense related to this Spend Limit should be viewable to all members.<br>Enum:\"SHARED\"\"PRIVATE\" |\n| authorization\\_visibility | string or null<br>Describes if the limit of the Spend Limit is visible to all members, or just controllers, bookkeepers, and owners (direct or ancestral).<br>Enum:\"PUBLIC\"\"PRIVATE\" |\n| merchant\\_category\\_controls | object or null<br>The Spend Limit's merchant category controls. |\n| transaction\\_limit | object or null<br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| limit\\_increase\\_setting | string or null<br>Whether or not members can request limit increases.<br>Enum:\"ENABLED\"\"DISABLED\" |\n| spend\\_type | string or null<br>Whether this Spend Limit only can be spent from by cards provisioned by this Spend Limit. <br>Enum:\"BUDGET\\_PROVISIONED\\_CARDS\\_ONLY\"\"NON\\_BUDGET\\_PROVISIONED\\_CARDS\\_ALLOWED\" |\n| auto\\_transfer\\_cards\\_setting | string or null<br>Setting for how auto transfer works for virtual cards.<br>Enum:\"DISABLED\"\"ENABLED\" |\n| auto\\_create\\_limit\\_cards\\_setting | string or null<br>Setting for how auto limit card creation works for members.<br>Enum:\"DISABLED\"\"ALL\\_MEMBERS\" |\n| owner\\_user\\_ids | Array of strings or null<br>User IDs of the owners of the Spend Limit. |\n| member\\_user\\_ids | Array of strings or null<br>User IDs of the members of the Spend Limit. |\n| expense\\_policy\\_id | string or null<br>The ID of the expense policy corresponding to this Spend Limit. |\n| limit\\_increase\\_request\\_policy\\_id | string or null<br>The ID of the policy for limit increase requests for this Spend Limit. |\n| limit\\_approval\\_policy\\_id | string or null<br>The ID of the policy for limit increase approval requests. Meant to replace limit\\_increase\\_request\\_policy\\_id. |\n| legal\\_entity\\_id | string or null<br>The legal entity ID to which Spend Limit expenses will be attributed. If not set, expenses will be attributed to the spending user's entity. |\n| department\\_id | string or null<br>The department ID to which Spend Limit expenses will be attributed. |\n\nResponses\n\n200\nThe Spend Limit that was updated\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nput/v2/spend\\_limits/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"name\": \"string\",\n\"description\": \"string\",\n\"status\": \"ACTIVE\",\n\"period_recurrence_type\": \"PER_WEEK\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"authorization_settings\": {\n\"base_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_buffer_percentage\": 0,\n\"authorization_type\": \"HARD\",\n\"rollover_refresh_rate\": \"OFF\"},\n\"expense_visibility\": \"SHARED\",\n\"authorization_visibility\": \"PUBLIC\",\n\"merchant_category_controls\": {\n\"allowed_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"],\n\"blocked_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"]},\n\"transaction_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_increase_setting\": \"ENABLED\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"auto_transfer_cards_setting\": \"DISABLED\",\n\"auto_create_limit_cards_setting\": \"DISABLED\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"expense_policy_id\": \"string\",\n\"limit_increase_request_policy_id\": \"string\",\n\"limit_approval_policy_id\": \"string\",\n\"legal_entity_id\": \"string\",\n\"department_id\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"account_id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\",\n\"parent_budget_id\": \"string\",\n\"status\": \"ACTIVE\",\n\"period_recurrence_type\": \"PER_WEEK\",\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"start_time_utc\": \"2019-08-24T14:15:22Z\",\n\"end_time_utc\": \"2019-08-24T14:15:22Z\",\n\"authorization_settings\": {\n\"base_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_buffer_percentage\": 0,\n\"authorization_type\": \"HARD\",\n\"rollover_refresh_rate\": \"OFF\",\n\"limit_with_increases\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"expense_visibility\": \"SHARED\",\n\"authorization_visibility\": \"PUBLIC\",\n\"merchant_category_controls\": {\n\"allowed_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"],\n\"blocked_merchant_categories\": [\\\n\"ADVERTISING_MARKETING\"]},\n\"transaction_limit\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"limit_increase_setting\": \"ENABLED\",\n\"spend_type\": \"BUDGET_PROVISIONED_CARDS_ONLY\",\n\"auto_transfer_cards_setting\": \"DISABLED\",\n\"auto_create_limit_cards_setting\": \"DISABLED\",\n\"owner_user_ids\": [\\\n\"string\"],\n\"member_user_ids\": [\\\n\"string\"],\n\"expense_policy_id\": \"string\",\n\"limit_increase_request_policy_id\": \"string\",\n\"limit_approval_policy_id\": \"string\",\n\"current_period_balance\": {\n\"start_date\": \"2019-08-24\",\n\"end_date\": \"2019-08-24\",\n\"start_time\": \"2019-08-24T14:15:22Z\",\n\"end_time\": \"2019-08-24T14:15:22Z\",\n\"amount_spent\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"rollover_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"}},\n\"legal_entity_id\": \"string\",\n\"department_id\": \"string\"}`\n\n## [operation/archiveSpendLimit](https://developer.brex.com/openapi/budgets_api/\\#operation/archiveSpendLimit) Archive a Spend Limit\n\nArchives a Spend Limit, making it unusable for future expenses and removing it from the UI\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nThe Spend Limit that was archived\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\npost/v2/spend\\_limits/{id}/archive\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X POST \\\n  'https://platform.brexapis.com/v2/spend_limits/{id}/archive' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\n[Next to **Travel API**](https://developer.brex.com/openapi/travel_api/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/budgets_api/",
      "title": "Budgets API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Budgets API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Budgets API",
      "scrapeId": "83922516-7f8d-4a85-a3ab-ae64ce18801c",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/budgets_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Budgets API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [zapier permalink](https://developer.brex.com/docs/zapier/\\#zapier)     Zapier\n\n### [customer app permalink](https://developer.brex.com/docs/zapier/\\#customer-app)     Customer app\n\nA [Brex app](https://zapier.com/apps/brex/integrations) is provided in Zapier as a no-code solution for Brex clients to access the Brex API. When you first connect the Brex app on Zapier, you'll need to use your Brex dashboard credentials to sign in. For more information on Zapier, visit the [website](https://help.zapier.com/hc/en-us) to find product demos, documentation, and examples.\n\n### [partner app permalink](https://developer.brex.com/docs/zapier/\\#partner-app)     Partner app\n\nA [Brex partner referrals integration](https://zapier.com/apps/brex-partner-referrals/integrations) is provided in Zapier as a no-code solution for using the onboarding API. Zapier will allow you to create customized, prefilled Brex applications for your clients.\n\nTo use the Brex partner referrals integration, follow the instructions on the [Getting Started](https://developer.brex.com/) page to get access to the Brex API. Your client ID and secret will be used for authentication in Zapier. Apply for our partner program [here](https://www.brex.com/partners/). A partner manager will qualify the partnership opportunity and create a personalized referral code and landing page for your business. The referral code will be sent in the `referral_code` field of the create referral endpoint and is used for attribution.\n\nThis integration has actions to create a referral and upload a document, which use the [create referral](https://developer.brex.com/openapi/onboarding_api/#operation/createReferralRequest) and [create document upload](https://developer.brex.com/openapi/onboarding_api/#operation/createDocument) endpoints respectively. It also has triggers for when a new referral is created and when a referral status changes, which use the [list referrals](https://developer.brex.com/openapi/onboarding_api/#operation/listReferrals) endpoint. Refer to the onboarding API documentation for descriptions of these endpoints and explanations of each field.\n\n### [triggers permalink](https://developer.brex.com/docs/zapier/\\#triggers)     Triggers\n\nA Zapier trigger is an event that starts a Zap. Using Zapier triggers, you can create a workflow to listen for transfer events in Brex and then take actions in Zapier.\n\n[Next to **Zapier examples**](https://developer.brex.com/docs/zapier_examples/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/zapier/",
      "title": "Zapier",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Zapier",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Zapier",
      "scrapeId": "4a8cc5c1-5d3b-484c-843f-00b91995ff99",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/zapier/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "No-code solution for using the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "No-code solution for using the Brex API",
      "twitter:title": "Zapier",
      "og:description": "No-code solution for using the Brex API",
      "twitter:description": "No-code solution for using the Brex API"
    }
  },
  {
    "markdown": "# [welcome permalink](https://developer.brex.com/\\#welcome)     Welcome!\n\n[Brex](https://www.brex.com/) is the first fully unified spend platform — with global corporate cards, expense management, reimbursements, travel, and bill pay. Brex makes it easy for finance teams to control all of their spend, all in one place. Using the Brex API, you can power your internal tools and create custom workflows.\n\nBrex APIs use the [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) architecture, are defined using the [OpenAPI specification](https://swagger.io/specification/) and use standard HTTP response codes and verbs. All APIs accept and return JSON and require HTTPS.\n\nExplore our guides and review our API documentation to see how you can integrate with Brex.\n\n- [Onboarding API](https://developer.brex.com/openapi/onboarding_api/)\n: Refer your customers and personal contacts to Brex and prefill signup information\n\n- [Team API](https://developer.brex.com/openapi/team_api/)\n: Manage users, locations, departments, and cards\n\n- [Payments API](https://developer.brex.com/openapi/payments_api/)\n: Manage vendors and send ACH, domestic wires, and checks\n\n- [Transactions API](https://developer.brex.com/openapi/transactions_api/)\n: View your transactions, accounts, and statements\n\n- [Expenses API](https://developer.brex.com/openapi/expenses_api/)\n: View and manage card expenses data, receipt match and receipt uploads\n\n- [Webhooks API](https://developer.brex.com/openapi/webhooks_api/)\n: Send real-time notifications based on events\n\n- [Budgets API](https://developer.brex.com/openapi/budgets_api/)\n: Manage budgets and budget programs\n\n- [Travel API](https://developer.brex.com/openapi/travel_api/)\n: View trips made in Brex Travel\n\n\n## [quickstart permalink](https://developer.brex.com/\\#quickstart)     Quickstart\n\nCheck out our [quickstart guide](https://developer.brex.com/docs/quickstart) to get up and running making your first Brex API call in just a few minutes. The rest of the guides and documentation provide more in-depth context.\n\n## [api status permalink](https://developer.brex.com/\\#api-status)     API Status\n\nGo to [https://status.brex.com](https://status.brex.com/) to see API and Brex system status.\n\n## [join us on slack permalink](https://developer.brex.com/\\#join-us-on-slack)     Join us on Slack\n\nHave feedback, questions, or ideas? [**Join our Slack community**](https://join.slack.com/t/brexdev/shared_invite/zt-vgwh6rja-CjydrUA4uJSB90ZO~gnI8Q) to discuss your API integrations with Brex employees and other developers.\n\n[Next to **Quickstart**](https://developer.brex.com/docs/quickstart/)",
    "metadata": {
      "url": "https://developer.brex.com/",
      "title": "Brex API Overview",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Brex API Overview",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Brex API Overview",
      "scrapeId": "2c0892f4-3cca-4c51-ab8d-ab09814b7fc9",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Brex API Overview",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "# [zapier example workflows permalink](https://developer.brex.com/docs/zapier_examples/\\#zapier-example-workflows)     Zapier example workflows\n\nThese example Zaps have already been created. To use them, follow the video or steps below that will lead you to copy the Zap and execute it from your own Zapier account. These Zaps provide a good starting point for many common workflows, but they are easily customizable to your own use cases as well.\n\n### [monthly export of brex card transactions to csv in google drive permalink](https://developer.brex.com/docs/zapier_examples/\\#monthly-export-of-brex-card-transactions-to-csv-in-google-drive)     Monthly Export of Brex Card Transactions to CSV in Google Drive\n\n[Link to Zap](https://zapier.com/shared/c6daa0418527942348e81db6e5cc58f291f1b061)\n\nLoom \\| Free Screen & Video Recording Software\n\nSorryDue to the privacy settings for this video, it cannot be played here at this time.\n\nView it on Loom\n\n* * *\n\n1. Click\n[this link](https://zapier.com/shared/c6daa0418527942348e81db6e5cc58f291f1b061)\n    to access the Zap. Log in or sign up for Zapier if you haven't already.\n\n2. Click \"Try this Zap\" to bring up the Zap editor. Going through the following steps will connect your Brex and Google accounts, and also allow you to test the connections to make sure the Zap works.\n\n3. For step 1 (Every Month in Schedule by Zapier), click \"Test trigger\" to simulate a monthly trigger that runs on the first day of each month. If you want to change the frequency or timing of the report generation, you can modify that in \"Set up trigger\".\n\n4. For step 2 (Get Card Transactions in Brex), you'll need to sign in to your Brex account. After doing so, select your account from the dropdown, click continue in \"Set up action\", and click \"Test & continue\" under \"Test action\".\n\n5. For step 3 (Utilities in Formatter by Zapier), click \"Test & continue\".\n\n6. For step 4 (Create File from Text in Google Drive), you'll need to connect your Google account so it has access to your Google Drive which is where the file will be exported to. Once your account is connected, under \"Set up action\", you can select a specific drive or folder to place the exported file if you so choose. You can also customize the File Name. Click \"Continue\" in \"Set up action\" and click \"Test & continue\" under \"Test action\" to finish the test.\n\n7. To confirm the test steps have worked, go to your\n[Google Drive](https://drive.google.com/)\n    and see if the file is in the folder you designated in the previous step. This CSV will be in the format of a\n`.txt`\n    file, so to convert it to a CSV, import it to your spreadsheet software of choice as a CSV.\n\n8. Once you've confirmed the output of the file is as expected, go back to your Zap and hit \"Publish\" in the top right corner to turn it on. It will now run monthly, or in whatever interval you specified in the trigger step.\n\n\n[Next to **Pipedream**](https://developer.brex.com/docs/pipedream/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/zapier_examples/",
      "ogUrl": "https://www.loom.com",
      "title": "Zapier examples",
      "og:url": "https://www.loom.com",
      "robots": "noindex",
      "favicon": {},
      "og:type": [
        "website",
        "website"
      ],
      "ogImage": "https://cdn.loom.com/assets/img/og/loom-banner.png",
      "ogTitle": "Zapier examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:image": "https://cdn.loom.com/assets/img/og/loom-banner.png",
      "og:title": [
        "Zapier examples",
        "Loom | Free Screen & Video Recording Software"
      ],
      "scrapeId": "822d004c-be4a-4de6-8755-5831206faac5",
      "viewport": [
        "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
        "width=device-width"
      ],
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/zapier_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": [
        "Tutorials showing how to use Zapier to automate common workflows",
        "Use Loom to record quick videos of your screen and cam. Explain anything clearly and easily – and skip the meeting. An essential tool for hybrid workplaces."
      ],
      "theme-color": "#ffffff",
      "og:site_name": [
        "Brex Developer API",
        "Loom"
      ],
      "slack-app-id": "A9G1TH4S2",
      "twitter:card": [
        "summary",
        "summary_large_image"
      ],
      "ogDescription": "Tutorials showing how to use Zapier to automate common workflows",
      "twitter:title": "Zapier examples",
      "og:description": [
        "Tutorials showing how to use Zapier to automate common workflows",
        "Use Loom to record quick videos of your screen and cam. Explain anything clearly and easily – and skip the meeting. An essential tool for hybrid workplaces."
      ],
      "og:image:width": "1200",
      "og:image:height": "600",
      "application-name": [
        "Loom",
        "Loom"
      ],
      "twitter:description": "Tutorials showing how to use Zapier to automate common workflows",
      "mobile-web-app-capable": "yes",
      "msapplication-TileColor": "#b91d47",
      "msapplication-TileImage": "https://cdn.loom.com/assets/favicons-loom/mstile-150x150.png",
      "apple-mobile-web-app-title": "Loom",
      "apple-mobile-web-app-capable": "yes",
      "apple-mobile-web-app-status-bar-style": "black-translucent"
    }
  },
  {
    "markdown": "# [quickstart permalink](https://developer.brex.com/docs/quickstart/\\#quickstart)     Quickstart\n\nThis guide will help you get up and running making your first Brex API call in just a few minutes. You will create a user token and make your first call against the Brex Team API to see the current user associated with that access token.\n\nThis guide assumes you are a Brex customer with admin access to your dashboard.\n\n## [1 generate your user token permalink](https://developer.brex.com/docs/quickstart/\\#1-generate-your-user-token)     1\\. Generate your user token\n\nFirst, you'll need to create a user token that let's you access the APIs.\n\n1. Go to\n_[Settings > Developer](https://dashboard.brex.com/settings/developer)_\n. You'll have to login as an account admin if you haven't already.\n\n2. Click\n_Create Token_\n.\n\n3. Create a name for your token such as\n`Team API Quickstart`\n. Next to \"Users\" select the \"Read\" option and then hit\n_Create Token_\n.\n\n4. The next screen will confirm your previous selections. Select\n_Allow access_\n.\n\n5. Your token is now created! Copy and store the token securely. You won't be able to see it again and you'll need it in the next step.\n\n\nYour browser does not support the video tag.\n\nFor more details, see the [user authentication guide](https://developer.brex.com/docs/authentication).\n\n## [2 make your first api call permalink](https://developer.brex.com/docs/quickstart/\\#2-make-your-first-api-call)     2\\. Make your first API Call\n\nWith your user token, you can now make an API call. For this example, we'll query the [Get current user](https://developer.brex.com/openapi/team_api/#operation/getMe) endpoint that returns the user associated with the user token.\n\nTo do so, add the header `Authorization: Bearer <YOUR_TOKEN_FROM_STEP_1_HERE>` and make a `GET` request to `https://platform.brexapis.com/v2/users/me` with your language/tool of choice.\n\nBelow are a few examples in different implementations.\n\n**curl**\n\nCopy\n\nCopied\n\n```curl\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/users/me \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_FROM_STEP_1_HERE>'\n```\n\n**Javascript**\n\nCopy\n\nCopied\n\n```javascript\nconst resp = await fetch(\n  `https://platform.brexapis.com/v2/users/me`,\n  {\n    method: 'GET',\n    headers: {\n      Authorization: 'Bearer <YOUR_TOKEN_FROM_STEP_1_HERE>'\n    }\n  }\n);\n\nconst data = await resp.text();\nconsole.log(data);\n```\n\n**Postman**\n\nPostman is a browser or desktop app used for API testing. It gives you a UI to easily test API calls without writing code. See our [Postman guide](https://developer.brex.com/docs/postman) on how to get set up and start making a call.\n\n## [next steps permalink](https://developer.brex.com/docs/quickstart/\\#next-steps)     Next steps\n\nCongratulations, you've made your first Brex API request! You're ready to dive deeper.\n\nReading through the rest of the guides will familiarize you with important Brex API conventions and implementation concerns. The API references will give you a better understanding of what functionality is included in each API and whether they will meet the needs of your use case. If you need help, see our [support page](https://developer.brex.com/docs/support). Happy developing!\n\n[Next to **Authentication**](https://developer.brex.com/docs/authentication/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/quickstart/",
      "title": "Quickstart",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Quickstart",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Quickstart",
      "scrapeId": "8b01488d-5ea9-4a9b-b854-453bc08a3c0b",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/quickstart/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Quickstart",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [steps permalink](https://developer.brex.com/docs/partner_onboarding/\\#steps)     Steps\n\n- Once your application is approved, you'll receive credentials for the staging environment using SendSafely. Please store these securely since they expire in 7 days.\n\n- You'll need to provide us with your company name, counterparty address, and the name, email and title of the person signing the agreement. After you share this with us, you'll receive a Unilateral API Access Agreement from Brex.\n\n- If you need access to an account on staging, provide us with an email address and we'll provision a staging account for you and invite you to it.\n\n- Once you've built your demo, share it with us in a video and we'll generate production credentials for you. You'll receive the production credentials via SendSafely too.\n\n\n## [staging environment permalink](https://developer.brex.com/docs/partner_onboarding/\\#staging-environment)     Staging environment\n\n- We can remove data from the staging environment at any time, so please do not use this in anything that's critical or a production use-case.\n\n- We'll do our best to provide high availability in the staging environments, but we can't make any guarantees. If you report issues that are not ephermal, please reach out to us.",
    "metadata": {
      "url": "https://developer.brex.com/docs/partner_onboarding/",
      "title": "Partner onboarding instrumentions",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Partner onboarding instrumentions",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Partner onboarding instrumentions",
      "scrapeId": "27207eb2-9546-4a36-b5e0-021eab989a90",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/partner_onboarding/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Requesting access for API partners",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Requesting access for API partners",
      "twitter:title": "Partner onboarding instrumentions",
      "og:description": "Requesting access for API partners",
      "twitter:description": "Requesting access for API partners"
    }
  },
  {
    "markdown": "## [onboarding api examples permalink](https://developer.brex.com/docs/onboarding_examples/\\#onboarding-api-examples)     Onboarding API examples\n\n**Create a referral.**\n\nCopy\n\nCopied\n\n```json\nPOST https://platform.brexapis.com/v1/referrals\n\nREQUEST\n{\n  \"referral_code\": \"partner_refcode\",\n  \"applicant\": {\n  \t\"first_name\": \"John\",\n  \t\"last_name\": \"Doe\",\n  \t\"email\": \"john.doe@doeinc.com\"\n  },\n \"business\": {\n  \t\"legal_name\": \"Doe Inc\",\n\t\"Incorporation_type\": \"C-CORP\",\n\t\"website\": \"doeinc.com\"\n  }\n}\n\nRESPONSE\n{\n  \"id\": \"referral_123\",\n  \"referral_signup_url\": \"https://www.brex.com/signup/?pref_token=onb-mock-no-business\",\n  \"expires_at\": \"2021-01-11T15:52:34.234Z\",\n  \"status\": \"UNCLAIMED\",\n  \"products\": [\\\n      {\\\n          \"cash\": {\\\n              \"application\": {\\\n                  \"status\": \"NO_ACCOUNT\"\\\n              }\\\n          }\\\n      }\\\n  ]\n}\n```\n\nThe returned referral signup link can be provided to the user and will prefill the application form. See example signup link [here](https://www.brex.com/signup/?pref_token=onb-mock-no-business).\n\n**Get an update about the application status of a referral.**\n\nCopy\n\nCopied\n\n```json\nGET https://platform.brexapis.com/v1/referrals/referral_123\n\nRESPONSE\n{\n  \"id\": \"referral_123\",\n  \"referral_signup_url\": \"https://www.brex.com/signup/?pref_token=onb-mock-no-business\",\n  \"expires_at\": \"2021-01-11T15:52:34.234Z\",\n  \"status\": \"ACTIVE\",\n  \"products\": [\\\n      {\\\n          \"cash\": {\\\n              \"application\": {\\\n                  \"status\": \"ACTIVE\"\\\n              }\\\n          }\\\n      }\\\n  ]\n}\n```\n\n**Attach supporting documentation to a referral.**\n\nStep 1: Generate an upload link.\n\nCopy\n\nCopied\n\n```json\nPUT https://platform.brexapis.com/v1/referrals/referral_123/document_upload\n\nREQUEST\n{\n  \"type\": \"ARTICLES_OF_INCORPORATION\"\n}\n\nRESPONSE\n{\n  \"uri\": \"https://s3.amazonaws.com/destination-link\",\n  \"id\": \"document_123\"\n}\n```\n\nStep 2: Upload the file to the URL provided.\n\nCopy\n\nCopied\n\n```json\nPUT https://s3.amazonaws.com/destination-link\n\nREQUEST\n* binary file content\n```\n\n[Next to **Team API examples**](https://developer.brex.com/docs/team_examples/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/onboarding_examples/",
      "title": "Onboarding API examples",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Onboarding API examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Onboarding API examples",
      "scrapeId": "3a0f8120-a454-412e-8a63-2e5d19e5d794",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/onboarding_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Examples to use the onboarding API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Examples to use the onboarding API",
      "twitter:title": "Onboarding API examples",
      "og:description": "Examples to use the onboarding API",
      "twitter:description": "Examples to use the onboarding API"
    }
  },
  {
    "markdown": "# Payments API(1.0)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/b33af949-fd65-411e-bfd6-661596b9ea2e)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nThe payments API allows you to initiate and manage payments and vendors from your Brex business accounts.\n\n# [tag/Vendors](https://developer.brex.com/openapi/payments_api/\\#tag/Vendors) Vendors\n\nEndpoints to manage vendors\n\n## [operation/listVendors](https://developer.brex.com/openapi/payments_api/\\#operation/listVendors) Lists vendors\n\nThis endpoint lists all existing vendors for an account.\nTakes an optional parameter to match by vendor name.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| name | string or null |\n\nResponses\n\n200\nReturns a list of vendor objects.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v1/vendors\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/vendors \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"company_name\": \"string\",\\\n\"email\": \"string\",\\\n\"phone\": \"string\",\\\n\"payment_accounts\": [\\\n{\\\n\"details\": {\\\n\"type\": \"ACH\",\\\n\"payment_instrument_id\": \"string\",\\\n\"routing_number\": \"string\",\\\n\"account_number\": \"string\",\\\n\"account_type\": \"CHECKING\",\\\n\"account_class\": \"BUSINESS\"}}]}]}`\n\n## [operation/createVendor](https://developer.brex.com/openapi/payments_api/\\#operation/createVendor) Create vendor\n\nThis endpoint creates a new vendor.\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| company\\_name<br>required | string<br>Name for vendor. The name must be unique. |\n| email | string or null<email><br>Email for vendor. |\n| phone | string or null<br>Phone number for vendor. |\n| payment\\_accounts | Array of objects or null (PaymentAccountRequest) <br>Payment accounts associated with the vendor. |\n\nResponses\n\n200\ncreateVendor 200 response\n\npost/v1/vendors\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"company_name\": \"string\",\n\"email\": \"user@example.com\",\n\"phone\": \"string\",\n\"payment_accounts\": [\\\n{\\\n\"details\": {\\\n\"type\": \"ACH\",\\\n\"routing_number\": \"string\",\\\n\"account_number\": \"string\",\\\n\"account_type\": \"CHECKING\",\\\n\"account_class\": \"BUSINESS\",\\\n\"beneficiary_name\": \"string\"}}]}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"company_name\": \"string\",\n\"email\": \"string\",\n\"phone\": \"string\",\n\"payment_accounts\": [\\\n{\\\n\"details\": {\\\n\"type\": \"ACH\",\\\n\"payment_instrument_id\": \"string\",\\\n\"routing_number\": \"string\",\\\n\"account_number\": \"string\",\\\n\"account_type\": \"CHECKING\",\\\n\"account_class\": \"BUSINESS\"}}]}`\n\n## [operation/getVendorById](https://developer.brex.com/openapi/payments_api/\\#operation/getVendorById) Get vendor\n\nThis endpoint gets a vendor by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nReturns a vendor object.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nget/v1/vendors/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/vendors/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"company_name\": \"string\",\n\"email\": \"string\",\n\"phone\": \"string\",\n\"payment_accounts\": [\\\n{\\\n\"details\": {\\\n\"type\": \"ACH\",\\\n\"payment_instrument_id\": \"string\",\\\n\"routing_number\": \"string\",\\\n\"account_number\": \"string\",\\\n\"account_type\": \"CHECKING\",\\\n\"account_class\": \"BUSINESS\"}}]}`\n\n## [operation/updateVendor](https://developer.brex.com/openapi/payments_api/\\#operation/updateVendor) Update vendor\n\n```\nUpdates an existing vendor by ID.\n\n```\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| company\\_name | string or null<br>Name for vendor |\n| email | string or null<email><br>Email for vendor |\n| phone | string or null<br>Phone number for vendor |\n| payment\\_accounts | Array of objects or null (PaymentAccountRequest) <br>To update payment instruments, we require the entire payload for each payment instrument that is being updated. |\n| beneficiary\\_name | string or null<br>Name for the Beneficiary |\n\nResponses\n\n200\nupdateVendor 200 response\n\nput/v1/vendors/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"company_name\": \"string\",\n\"email\": \"user@example.com\",\n\"phone\": \"string\",\n\"payment_accounts\": [\\\n{\\\n\"details\": {\\\n\"type\": \"ACH\",\\\n\"routing_number\": \"string\",\\\n\"account_number\": \"string\",\\\n\"account_type\": \"CHECKING\",\\\n\"account_class\": \"BUSINESS\",\\\n\"beneficiary_name\": \"string\"}}],\n\"beneficiary_name\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"company_name\": \"string\",\n\"email\": \"string\",\n\"phone\": \"string\",\n\"payment_accounts\": [\\\n{\\\n\"details\": {\\\n\"type\": \"ACH\",\\\n\"payment_instrument_id\": \"string\",\\\n\"routing_number\": \"string\",\\\n\"account_number\": \"string\",\\\n\"account_type\": \"CHECKING\",\\\n\"account_class\": \"BUSINESS\"}}]}`\n\n## [operation/deleteVendor](https://developer.brex.com/openapi/payments_api/\\#operation/deleteVendor) Delete vendor.\n\nThis endpoint deletes a vendor by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ndeleteVendor 200 response\n\ndelete/v1/vendors/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X DELETE \\\n  'https://platform.brexapis.com/v1/vendors/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\n# [tag/Transfers](https://developer.brex.com/openapi/payments_api/\\#tag/Transfers) Transfers\n\nEndpoints to initiate transfers and view transfer statuses. Note that for all transfer endpoints, the 'money' field is positive or unsigned for outgoing transfers (debits), and negative for incoming transfers (credits).\n\n## [operation/createIncomingTransfer](https://developer.brex.com/openapi/payments_api/\\#operation/createIncomingTransfer) Create incoming transfer\n\nThis endpoint creates a new incoming transfer. You may use use any eligible bank account connection to fund (ACH Debit)\nany active Brex business account.\n\n**Reminder**: You may not use the Brex API for any activity that requires a license or registration from any\ngovernmental authority without Brex's prior review and approval. This includes but is not limited to any money services\nbusiness or money transmission activity.\n\nPlease review the [Brex Access Agreement](https://www.brex.com/legal/developer-portal/) and contact us if\nyou have any questions.\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| counterparty<br>required | object (CounterPartyIncomingTransfer) <br>Counterparty Details for the transfer |\n| receiving\\_account<br>required | object (ReceivingAccount) <br>Receiving account details for the transfer |\n| amount<br>required | object (Money) <br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| description<br>required | string<br>Description of the transfer for internal use. Not exposed externally. |\n\nResponses\n\n200\ncreateIncomingTransfer 200 response\n\npost/v1/incoming\\_transfers\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"counterparty\": {\n\"type\": \"BANK\",\n\"id\": \"string\"},\n\"receiving_account\": {\n\"type\": \"BREX_CASH\",\n\"id\": \"string\"},\n\"amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"description\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"counterparty\": {\n\"type\": \"VENDOR\",\n\"payment_instrument_id\": \"string\",\n\"id\": \"string\",\n\"routing_number\": \"string\",\n\"account_number\": \"string\"},\n\"description\": \"string\",\n\"payment_type\": \"ACH\",\n\"amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"process_date\": \"2019-08-24\",\n\"originating_account\": {\n\"type\": \"BREX_CASH\",\n\"id\": \"string\"},\n\"status\": \"PROCESSING\",\n\"cancellation_reason\": \"USER_CANCELLED\",\n\"estimated_delivery_date\": \"2019-08-24\",\n\"creator_user_id\": \"string\",\n\"created_at\": \"2019-08-24\",\n\"display_name\": \"string\",\n\"external_memo\": \"string\",\n\"is_ppro_enabled\": true}`\n\n## [operation/listTransfers](https://developer.brex.com/openapi/payments_api/\\#operation/listTransfers) Lists transfers\n\nThis endpoint lists existing transfers for an account.\n\nCurrently, the API can only return transfers for the following payment rails:\n\n- ACH\n- DOMESTIC\\_WIRE\n- CHEQUE\n- INTERNATIONAL\\_WIRE\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nReturns a list of transfers.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nget/v1/transfers\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/transfers \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"counterparty\": {\\\n\"type\": \"VENDOR\",\\\n\"payment_instrument_id\": \"string\",\\\n\"id\": \"string\",\\\n\"routing_number\": \"string\",\\\n\"account_number\": \"string\"},\\\n\"description\": \"string\",\\\n\"payment_type\": \"ACH\",\\\n\"amount\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"process_date\": \"2019-08-24\",\\\n\"originating_account\": {\\\n\"type\": \"BREX_CASH\",\\\n\"id\": \"string\"},\\\n\"status\": \"PROCESSING\",\\\n\"cancellation_reason\": \"USER_CANCELLED\",\\\n\"estimated_delivery_date\": \"2019-08-24\",\\\n\"creator_user_id\": \"string\",\\\n\"created_at\": \"2019-08-24\",\\\n\"display_name\": \"string\",\\\n\"external_memo\": \"string\",\\\n\"is_ppro_enabled\": true}]}`\n\n## [operation/createTransfer](https://developer.brex.com/openapi/payments_api/\\#operation/createTransfer) Create transfer\n\nThis endpoint creates a new transfer.\n\nCurrently, the API can only create transfers for the following payment rails:\n\n- ACH\n- DOMESTIC\\_WIRE\n- CHEQUE\n- INTERNATIONAL\\_WIRES (For vendors already created through dashboard. Rate limited to 100/day - Please reach out to [developer-support@brex.com](mailto:developer-support@brex.com) if you need to do more)\n\n**Transaction Descriptions**\n\n- For outgoing check payments, a successful transfer will return a response containing a description value with a format of `Check #<check number> to <recipient_name> - <external_memo>`.\n- For book transfers (from one Brex Business account to another), the recipient value will have a format of `<customer_account.dba_name> - <external_memo>` and the sender will have a format of `<target customer account's dba name> - <external_memo>`.\n- For other payment rails, the format will be `<counterparty_name> - <external_memo>`, where Counterparty name is `payment_instrument.beneficiary_name` or `contact.name`\nFor vendors created from the Payments API, the `counterparty_name` will be the `company_name` [field](https://developer.brex.com/openapi/payments_api/#operation/createVendor!path=company_name&t=request).\n\n**Reminder**: You may not use the Brex API for any activity that requires a license or registration from any\ngovernmental authority without Brex's prior review and approval. This includes but is not limited to any money services\nbusiness or money transmission activity.\n\nPlease review the [Brex Access Agreement](https://www.brex.com/legal/developer-portal/) and contact us if\nyou have any questions.\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| counterparty<br>required | object (CounterParty) <br>Counterparty Details for the transfer |\n| amount<br>required | object (Money) <br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n| description<br>required | string<br>Description of the transfer for internal use. Not exposed externally. |\n| external\\_memo<br>required | string<= 90 characters<br>External memo for the transfer. `Payment Instructions` for Wires and the `Entry Description` for ACH payments. <br>Must be at most 90 characters for `ACH` and `WIRE` transactions<br>and at most 40 characters for `CHEQUES` |\n| originating\\_account<br>required | object<br>Originating account details for the transfer |\n| approval\\_type | string or null<br>Specifies the approval type for the transaction. <br>`MANUAL` requires a cash admin to approve the transaction before disbursing funds. <br>When not set, the default policy will apply.<br>Value:\"MANUAL\" |\n| is\\_ppro\\_enabled | boolean<br>When set to true, add Principal Protection (PPRO) to the transaction.<br>PPRO means Brex will cover any fees charged by intemediary or receiving banks. PPRO charges will be billed separately<br>in a monthly statement. PPRO is only available for international wire transactions. |\n\nResponses\n\n200\ncreateTransfer 200 response\n\npost/v1/transfers\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"counterparty\": {\n\"type\": \"VENDOR\",\n\"payment_instrument_id\": \"string\"},\n\"amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"description\": \"string\",\n\"external_memo\": \"string\",\n\"originating_account\": {\n\"type\": \"BREX_CASH\",\n\"id\": \"string\"},\n\"approval_type\": \"MANUAL\",\n\"is_ppro_enabled\": true}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"counterparty\": {\n\"type\": \"VENDOR\",\n\"payment_instrument_id\": \"string\",\n\"id\": \"string\",\n\"routing_number\": \"string\",\n\"account_number\": \"string\"},\n\"description\": \"string\",\n\"payment_type\": \"ACH\",\n\"amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"process_date\": \"2019-08-24\",\n\"originating_account\": {\n\"type\": \"BREX_CASH\",\n\"id\": \"string\"},\n\"status\": \"PROCESSING\",\n\"cancellation_reason\": \"USER_CANCELLED\",\n\"estimated_delivery_date\": \"2019-08-24\",\n\"creator_user_id\": \"string\",\n\"created_at\": \"2019-08-24\",\n\"display_name\": \"string\",\n\"external_memo\": \"string\",\n\"is_ppro_enabled\": true}`\n\n## [operation/getTransfersById](https://developer.brex.com/openapi/payments_api/\\#operation/getTransfersById) Get transfer\n\nThis endpoint gets a transfer by ID.\n\nCurrently, the API can only return transfers for the following payment rails:\n\n- ACH\n- DOMESTIC\\_WIRE\n- CHEQUE\n- INTERNATIONAL\\_WIRE\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\nReturns a transfer.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nget/v1/transfers/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/transfers/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"counterparty\": {\n\"type\": \"VENDOR\",\n\"payment_instrument_id\": \"string\",\n\"id\": \"string\",\n\"routing_number\": \"string\",\n\"account_number\": \"string\"},\n\"description\": \"string\",\n\"payment_type\": \"ACH\",\n\"amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"process_date\": \"2019-08-24\",\n\"originating_account\": {\n\"type\": \"BREX_CASH\",\n\"id\": \"string\"},\n\"status\": \"PROCESSING\",\n\"cancellation_reason\": \"USER_CANCELLED\",\n\"estimated_delivery_date\": \"2019-08-24\",\n\"creator_user_id\": \"string\",\n\"created_at\": \"2019-08-24\",\n\"display_name\": \"string\",\n\"external_memo\": \"string\",\n\"is_ppro_enabled\": true}`\n\n# [tag/Linked-Accounts](https://developer.brex.com/openapi/payments_api/\\#tag/Linked-Accounts) Linked Accounts\n\nEndpoint to view connected linked accounts\n\n## [operation/listLinkedAccounts](https://developer.brex.com/openapi/payments_api/\\#operation/listLinkedAccounts) Lists linked accounts\n\nThis endpoint lists all bank connections that are eligible to make ACH transfers to Brex business account\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nReturns a list of bank connections\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v1/linked\\_accounts\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/linked_accounts \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"bank_details\": {\\\n\"name\": \"string\",\\\n\"type\": \"CHECKING\"},\\\n\"brex_account_id\": \"string\",\\\n\"last_four\": \"string\",\\\n\"available_balance\": {\\\n\"amount\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"as_of_date\": \"2019-08-24\"},\\\n\"current_balance\": {\\\n\"amount\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"as_of_date\": \"2019-08-24\"}}]}`\n\n[Next to **Transactions API**](https://developer.brex.com/openapi/transactions_api/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/payments_api/",
      "title": "Payments API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Payments API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Payments API",
      "scrapeId": "1c9e2e07-3f7c-4e90-a0f9-c966ccb4bc42",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/payments_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Payments API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [expenses api examples permalink](https://developer.brex.com/docs/expenses_examples/\\#expenses-api-examples)     Expenses API examples\n\n**Attempt to match a receipt to an existing transaction. An email reply will send back with the matching result.**\n\nStep 1: Generate an upload link.\n\nCopy\n\nCopied\n\n```json\nPOST https://platform.brexapis.com/v1/expenses/receipt_match\n\nREQUEST\n{\n  \"receipt_name\": \"my receipt.pdf\"\n}\n\nRESPONSE\n{\n  \"id\": \"1f869235-718f-4458-8180-8a5254585c39\",\n  \"uri\": \"https://s3.amazonaws.com/destination-link\"\n}\n```\n\nStep 2: Upload the file to the URL provided.\n\nCopy\n\nCopied\n\n```json\nPUT https://s3.amazonaws.com/destination-link\n\nREQUEST\n* binary file content\n```",
    "metadata": {
      "url": "https://developer.brex.com/docs/expenses_examples/",
      "title": "Expenses API examples",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Expenses API examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Expenses API examples",
      "scrapeId": "10d8928a-2313-4c5d-8ec5-73a65868f99c",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/expenses_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Examples to use the expenses API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Examples to use the expenses API",
      "twitter:title": "Expenses API examples",
      "og:description": "Examples to use the expenses API",
      "twitter:description": "Examples to use the expenses API"
    }
  },
  {
    "markdown": "# [launch checklist permalink](https://developer.brex.com/docs/checklist/\\#launch-checklist)     Launch Checklist\n\nLet's make sure your team and Brex integration are ready for production launch. Before development and before launch, we recommend going over the following items to ensure a production-ready, secure, and robust integration. Most of these items are elaborated in more detail throughout the docs, but are consolidated here for convenience.\n\nFor Customers\n\n\n## [pre development permalink](https://developer.brex.com/docs/checklist/\\#pre-development)     Pre-development\n\n- Sign your\n[Access Agreement](https://www.brex.com/legal/developer-portal/)\n. Customers accept our access agreement directly in the dashboard before accessing the developer tab for the first time.\n\n- Review the\n[Prohibited and Restricted Activities](https://www.brex.com/legal/prohibited-restricted-activities/)\n.\n\n- Review the\n[rate limits](https://developer.brex.com/docs/rate_limits/)\nand make sure they work for your intended integration.\n\n- Join our Slack community:\n[Brex Developer Community](https://join.slack.com/t/brexdev/shared_invite/zt-vgwh6rja-CjydrUA4uJSB90ZO~gnI8Q)\n.\n\n- Review the\n[Frequently Asked Questions](https://developer.brex.com/docs/faq/)\n.\n\n\n## [development permalink](https://developer.brex.com/docs/checklist/\\#development)     Development\n\n- Your Brex integration should implement the latest endpoints documented in the API reference. You can explore these endpoints with\n[Postman](https://developer.brex.com/docs/postman/)\nas well. Keep an eye on the\n[changelog](https://developer.brex.com/docs/changelog)\nfor updates.\n\n- Use environment variables to replace secrets in your source code. Namely, do not expose your\n[user token](https://developer.brex.com/docs/authentication/)\nin code and make sure it's not checked into version control.\n\n- Your code should be able to generate random strings for the\n[Idempotency Key](https://developer.brex.com/docs/idempotency/)\n. We require an idempotency key for endpoints where erroneous duplicate processing would be especially bad, such as\n[Create transfer](https://developer.brex.com/openapi/payments_api/#operation/createTransfer)\nand\n[Create card](https://developer.brex.com/openapi/team_api/#operation/createCard)\n.\n\n- As stated in\n[Versioning](https://developer.brex.com/docs/versioning/)\n, your code should be able to handle new types of JSON responses. For example, please ensure that you design your code to handle unknown enum types and new response fields.\n\n- If you get stuck, review\n[error codes and recommended fixes](https://developer.brex.com/docs/error_codes/)\n.\n\n- Ensure your integration can gracefully handle\n[rate limits](https://developer.brex.com/docs/rate_limits/)\n, even if you believe you won't come up against them.\n\n\nFor Partners\n\n\n## [pre development 1 permalink](https://developer.brex.com/docs/checklist/\\#pre-development-1)     Pre-development\n\n- Sign your access agreement. You will receive it in your email.\n\n- Review the\n[Prohibited and Restricted Activities](https://www.brex.com/legal/prohibited-restricted-activities/)\n.\n\n- Review the\n[rate limits](https://developer.brex.com/docs/rate_limits/)\nand make sure they work for your intended integration.\n\n- Join our Slack community:\n[Brex Developer Community](https://join.slack.com/t/brexdev/shared_invite/zt-vgwh6rja-CjydrUA4uJSB90ZO~gnI8Q)\n.\n\n- Review the\n[Frequently Asked Questions](https://developer.brex.com/docs/faq/)\n.\n\n\n## [development 1 permalink](https://developer.brex.com/docs/checklist/\\#development-1)     Development\n\n- Your Brex integration should implement the latest endpoints documented in the API reference. You can explore these endpoints with\n[Postman](https://developer.brex.com/docs/postman/)\nas well. Keep an eye on the\n[changelog](https://developer.brex.com/docs/changelog)\nfor updates.\n\n- Use environment variables to replace secrets in your source code. Namely, do not expose any\n`client_id`\ns and\n`client_secret`\ns and ensure they are not checked into any version control.\n\n- Your code should be able to generate random strings for the\n[Idempotency Key](https://developer.brex.com/docs/idempotency/)\n. We require an idempotency key for endpoints where erroneous duplicate processing would be especially bad, such as\n[Create transfer](https://developer.brex.com/openapi/payments_api/#operation/createTransfer)\nand\n[Create card](https://developer.brex.com/openapi/team_api/#operation/createCard)\n.\n\n- We recommend using an existing OAuth 2.0 library to implement the\n[OAuth 2.0 Authorization Code Grant](https://developer.brex.com/docs/partner_authentication/#authentication-implementation)\nfor partner integrations:\n[https://oauth.net/code/](https://oauth.net/code/)\n.\n\n- For partner integrations, note that the access token expires in 3600 seconds (1 hour) and will need to be refreshed every time after it expires.\n\n- To mitigate\n[cross-site request forgery](https://datatracker.ietf.org/doc/html/rfc6749#section-10.12)\n, partner integrations should always use the optional state parameter when initiating the OAuth 2.0 Authorization Code Grant. The value of your state parameter must be a random string, at least 9 characters long. Whatever string value you provide for the state parameter will be returned when the customer is redirected to your integration. At that moment, your integration should check if the returned state value matches the original state value that you set on the initial authorization request. If the values do not match, this means that someone else has initiated the authorization request.\n\n- Partner integrations should always rotate the\n[refresh\\_token](https://developer.brex.com/docs/partner_authentication/#revoking-refresh-tokens)\n. Whenever your integration exchanges a refresh token for a new access token, it should retain both the new access token and the refresh token (which is returned in the same response).\n\n- During the authorization flow, partner integrations should not load the authorization page inside a native web view or iFrame. Please launch a browser instead.\n\n- As stated in\n[Versioning](https://developer.brex.com/docs/versioning/)\n, your code should be able to handle new types of JSON responses. For example, please ensure that you design your code to handle unknown enum types and new response fields.\n\n- After your integration has initiated the authorization request, the customer has the option to grant or deny access. You should handle each scenario gracefully.\n\n- You should anticipate errors involving insufficient scopes and/or permissions.\n[Scopes](https://developer.brex.com/docs/roles_permissions_scopes/#scopes)\ndefine what\n**your integration**\ncan access. Permissions define what\n**the customer**\ncan access. More precisely, scopes define which API endpoints your integration can access, but permissions are based on the customer\n'\ns\n[role type](https://www.brex.com/support/brex-role-types-and-permissions/)\n. The role type defines which actions a customer can perform on the Brex dashboard and, consequently, the Brex APIs. So, it\n'\ns possible for your code to fail if:\n  - Your integration relies on Brex resources that the customer\n    '\n    s role type forbids\n\n  - The customer denies access during the authorization flow\n\n  - The customer grants insufficient scopes for their user token\n\n  - Your integration targets Brex Cash, but the customer has not enabled Brex Cash\n- If you get stuck, review\n[error codes and recommended fixes](https://developer.brex.com/docs/error_codes/)\n.\n\n- Ensure your integration can gracefully handle\n[rate limits](https://developer.brex.com/docs/rate_limits/)\n, even if you believe you won't come up against them.\n\n- Once you've built your integration, be sure to share a demo video with us.\n\n\n[Next to **Onboarding API**](https://developer.brex.com/openapi/onboarding_api/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/checklist/",
      "title": "Launch Checklist",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Launch Checklist",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Launch Checklist",
      "scrapeId": "1c7eeb9f-90fb-4341-9601-127afabfd582",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/checklist/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Production readiness checklist for the Brex APIs",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Production readiness checklist for the Brex APIs",
      "twitter:title": "Launch Checklist",
      "og:description": "Production readiness checklist for the Brex APIs",
      "twitter:description": "Production readiness checklist for the Brex APIs"
    }
  },
  {
    "markdown": "## [authentication permalink](https://developer.brex.com/docs/authentication/\\#authentication)     Authentication\n\nTo start making calls to Brex APIs, generate a user token from your Brex dashboard and pass it along in your API call headers.\n\n#### [1 generate a user token permalink](https://developer.brex.com/docs/authentication/\\#1-generate-a-user-token)     1\\. Generate a user token\n\n1. Sign in to\n[dashboard.brex.com](https://dashboard.brex.com/)\n    as an\n[account admin or card admin](https://developer.brex.com/docs/roles_permissions_scopes)\n.\n\n2. Go to\n_[Developer > Settings](https://dashboard.brex.com/settings/developer)_\n.\n\n3. Click\n_Create Token_\n.\n\n4. Create a name for your token that will help you identify it. Choose what level of data access you need for your application; these are the\n[scopes](https://developer.brex.com/docs/roles_permissions_scopes)\n    your token will have.\n\n\n![Create your token and choose your scopes](https://developer.brex.com/static/10abd6ee58130092e086e4e989bb858c/22c86/auth-create-token.png)\n5. The next screen will confirm your previous selections. Make sure it looks good, then select\n_Allow Access_\n.\n\n\n![Confirm your scopes](https://developer.brex.com/static/622c6a88b437cf6fedc5a98a19eb81f4/84ee5/auth-allow-access.png)\n6. Your token is now created. Copy and store the token securely. You won't be able to see it again.\n\n\n![Copy token](https://developer.brex.com/static/e39f3c7aa443ea2ca73b150abce04b41/33d1d/auth-token.png)\n7. Back on the developer page of your Brex dashboard, you should see your token listed now. As a security measure, part of the string is obfuscated. If you lose it, create a new one and replace the token.\n\n\n![Developer dash](https://developer.brex.com/static/f54b642424086313d89bc6ce57eb3f2e/1c2c3/auth-developer-dash.png)\n\n**Caution**: Your user token is private and should not be shared. Never check it into version control or save it somewhere publicly accessible. If your user token is compromised or leaked, make sure to [revoke](https://developer.brex.com/docs/authentication/#token-revocation-and-expiration) it.\n\n#### [2 pass the user token in your api call headers permalink](https://developer.brex.com/docs/authentication/\\#2-pass-the-user-token-in-your-api-call-headers)     2\\. Pass the user token in your API call headers\n\nTo pass your user token to Brex APIs, add it as a header to your API calls in the following format:\n\nCopy\n\nCopied\n\n```text\nAuthorization: \"Bearer {{your user_token here}}\"\n```\n\nIf, for example, your user token value is `bxt_jBWQLZXtu1f4sVT6UjaWPp7Gh9nVGjzEZgRX`, your header will be:\n\nCopy\n\nCopied\n\n```text\nAuthorization: \"Bearer bxt_jBWQLZXtu1f4sVT6UjaWPp7Gh9nVGjzEZgRX\"\n```\n\n### [token revocation and expiration permalink](https://developer.brex.com/docs/authentication/\\#token-revocation-and-expiration)     Token revocation and expiration\n\nUser tokens will expire if they are not used to make an API call for 90 days.\n\nIf your token is compromised, or you no longer need it, revoke the user token from the developer page in your Brex dashboard. Once revoked, any calls made with this token will immediately begin to fail.\n\n## [api server permalink](https://developer.brex.com/docs/authentication/\\#api-server)     API Server\n\nBrex currently only offers a production API server at `https://platform.brexapis.com`. This is the base URL for all API calls, except for the Get Card Number call (under the Cards section of the Team API), which should use the production PCI API server: `https://secure-platform.brexapis.com`.\n\n[Next to **Partner authentication**](https://developer.brex.com/docs/partner_authentication/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/authentication/",
      "title": "Authentication",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Authentication",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Authentication",
      "scrapeId": "8d05d0fd-3ae5-4a93-b6ee-27a05549f1f7",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/authentication/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Authentication for Brex APIs",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Authentication for Brex APIs",
      "twitter:title": "Authentication",
      "og:description": "Authentication for Brex APIs",
      "twitter:description": "Authentication for Brex APIs"
    }
  },
  {
    "markdown": "## [get started with postman permalink](https://developer.brex.com/docs/postman/\\#get-started-with-postman)     Get started with Postman\n\nPostman is a browser or desktop app used for API testing. It gives you a UI to easily test and play around with API calls without having to write code. We suggest using Postman to get started quickly and see what the Brex APIs offer.\n\nTo get started, just go to the [Brex developer workspace](https://www.postman.com/brex-api/workspace/brex-developer) which has collections for all of the Brex APIs. You can fork the collection into your own workspace and then make real calls to the Brex API with the proper authentication. This video walks through how easy it is to get started.\n\nQuick start with Brex APIs and Postman\n\n![](https://cdn.loom.com/avatars/12666496_1ba90dc9245e45af9b239ec62fd105e3_192.jpg)\n\n[Quick start with Brex APIs and Postman](https://www.loom.com/share/91df9fbedd484e768a77be8fb5608acf?source=embed_watch_on_loom_cta \"Quick start with Brex APIs and Postman\")\n\n3 min\n\n[Open video in Loom](https://www.loom.com/share/91df9fbedd484e768a77be8fb5608acf?source=embed_watch_on_loom_cta \"Open video in Loom\")\n\n1.2×\n\n3 min⚡️4 min 13 sec3 min 23 sec2 min 49 sec2 min 15 sec1 min 59 sec1 min 41 sec1 min 21 sec\n\nYour user agent does not support the HTML5 Video element.\n\n![](https://cdn.loom.com/avatars/12666496_1ba90dc9245e45af9b239ec62fd105e3_192.jpg)\n\n[Quick start with Brex APIs and Postman](https://www.loom.com/share/91df9fbedd484e768a77be8fb5608acf?source=embed_watch_on_loom_cta \"Quick start with Brex APIs and Postman\")\n\n3 min\n\n[Open video in Loom](https://www.loom.com/share/91df9fbedd484e768a77be8fb5608acf?source=embed_watch_on_loom_cta \"Open video in Loom\")\n\n1.2×\n\n3 min⚡️4 min 13 sec3 min 23 sec2 min 49 sec2 min 15 sec1 min 59 sec1 min 41 sec1 min 21 sec\n\n## [customers using postman permalink](https://developer.brex.com/docs/postman/\\#customers-using-postman)     Customers using Postman\n\nFor convenience, customers can also click one of the links below which will automatically fork an API collection and environment into your workspace to make authentication easier.\n\n|  |  |\n| --- | --- |\n| Payments API | [![Run Payments API in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/16129921-6965e545-3eac-4bc6-be02-3214563c7ef8?action=collection%2Ffork&collection-url=entityId%3D16129921-6965e545-3eac-4bc6-be02-3214563c7ef8%26entityType%3Dcollection%26workspaceId%3D288fe87e-3402-462f-a503-13a63ab0d302#?env%5BCustomer%20Production%20Environment%5D=W3sia2V5IjoiYmFzZVVybCIsInZhbHVlIjoiaHR0cHM6Ly9wbGF0Zm9ybS5icmV4YXBpcy5jb20iLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6InVzZXJUb2tlbiIsInZhbHVlIjoiIiwiZW5hYmxlZCI6dHJ1ZX1d) |\n| Team API | [![Run Team API in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/16129921-bbaae0b8-299f-4efb-a10e-97353542880d?action=collection%2Ffork&collection-url=entityId%3D16129921-bbaae0b8-299f-4efb-a10e-97353542880d%26entityType%3Dcollection%26workspaceId%3D288fe87e-3402-462f-a503-13a63ab0d302#?env%5BCustomer%20Production%20Environment%5D=W3sia2V5IjoiYmFzZVVybCIsInZhbHVlIjoiaHR0cHM6Ly9wbGF0Zm9ybS5icmV4YXBpcy5jb20iLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6InVzZXJUb2tlbiIsInZhbHVlIjoiIiwiZW5hYmxlZCI6dHJ1ZX1d) |\n| Transactions API | [![Run Transactions API in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/16129921-8ca04de2-5ebf-4059-af5c-bed401176525?action=collection%2Ffork&collection-url=entityId%3D16129921-8ca04de2-5ebf-4059-af5c-bed401176525%26entityType%3Dcollection%26workspaceId%3D288fe87e-3402-462f-a503-13a63ab0d302#?env%5BCustomer%20Production%20Environment%5D=W3sia2V5IjoiYmFzZVVybCIsInZhbHVlIjoiaHR0cHM6Ly9wbGF0Zm9ybS5icmV4YXBpcy5jb20iLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6InVzZXJUb2tlbiIsInZhbHVlIjoiIiwiZW5hYmxlZCI6dHJ1ZX1d) |\n\n## [partners using acounting or onboarding apis permalink](https://developer.brex.com/docs/postman/\\#partners-using-acounting-or-onboarding-apis)     Partners using acounting or onboarding APIs\n\nFor partners using client credential or auth code grant authentication, the [Brex developer workspace](https://www.postman.com/brex-api/workspace/brex-developer) has 2 [environments](https://learning.postman.com/docs/sending-requests/managing-environments/#accessing-environments) meant to make authentication easier. In the workspace, click _Environments_ and copy the environment you want to your workspace. Fill in the appropriate values for the environment variables.\n\nBefore calling an endpoint, select an environment: onboarding or accounting staging. There is an embedded pre-request script that will help you to automatically refresh authentication tokens:\n\n- Each time you call the onboarding endpoints, the script will request a new access token if the previous token expired.\n\n- To use the accounting API, you will first need to use the Postman authorization UI to authenticate against a Brex client's account. You need to manually copy the resulting refresh token into the environment variable. Thereafter, the script will automatically use the refresh token to request a new access token whenever it expires.\n\n\n[Next to **Zapier**](https://developer.brex.com/docs/zapier/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/postman/",
      "ogUrl": "https://www.loom.com",
      "title": "Postman",
      "og:url": "https://www.loom.com",
      "robots": "noindex",
      "favicon": {},
      "og:type": [
        "website",
        "website"
      ],
      "ogImage": "https://cdn.loom.com/assets/img/og/loom-banner.png",
      "ogTitle": "Postman",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:image": "https://cdn.loom.com/assets/img/og/loom-banner.png",
      "og:title": [
        "Postman",
        "Quick start with Brex APIs and Postman"
      ],
      "scrapeId": "39813c7a-7225-405d-967a-79f01399eb0d",
      "viewport": [
        "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
        "width=device-width"
      ],
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/postman/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": [
        "Postman for API testing",
        "Use Loom to record quick videos of your screen and cam. Explain anything clearly and easily – and skip the meeting. An essential tool for hybrid workplaces."
      ],
      "theme-color": "#ffffff",
      "og:site_name": [
        "Brex Developer API",
        "Loom"
      ],
      "slack-app-id": "A9G1TH4S2",
      "twitter:card": [
        "summary",
        "summary_large_image"
      ],
      "ogDescription": "Postman for API testing",
      "twitter:title": "Postman",
      "og:description": [
        "Postman for API testing",
        "Use Loom to record quick videos of your screen and cam. Explain anything clearly and easily – and skip the meeting. An essential tool for hybrid workplaces."
      ],
      "og:image:width": "1200",
      "og:image:height": "600",
      "application-name": [
        "Loom",
        "Loom"
      ],
      "twitter:description": "Postman for API testing",
      "mobile-web-app-capable": "yes",
      "msapplication-TileColor": "#b91d47",
      "msapplication-TileImage": "https://cdn.loom.com/assets/favicons-loom/mstile-150x150.png",
      "apple-mobile-web-app-title": "Loom",
      "apple-mobile-web-app-capable": "yes",
      "apple-mobile-web-app-status-bar-style": "black-translucent"
    }
  },
  {
    "markdown": "# Travel API(1.0)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/8d8d98a4-b0c5-4b84-b828-9e73fffcb05b)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nBrex Travel External API.\n\n# [tag/Trips](https://developer.brex.com/openapi/travel_api/\\#tag/Trips) Trips\n\nEndpoints for getting trip data.\n\n## [operation/listTrips](https://developer.brex.com/openapi/travel_api/\\#operation/listTrips) List trips\n\nLists trips according to the filters passed in the query string.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int64> |\n| last\\_updated\\_after | string or null<date-time> |\n\nResponses\n\n200\nA page with a list of trips.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nget/v1/trips\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/trips \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"trip_cl9rh1n8g001e0j84w6fb4fd1\",\\\n\"created_at\": \"2017-12-27T15:42:30Z\",\\\n\"updated_at\": \"2017-12-27T15:42:30Z\",\\\n\"name\": \"Trip to Rio de Janeiro\",\\\n\"booker_user_id\": \"cuuser_cky0xs54b004h01pidi0pcuz1\",\\\n\"status\": \"string\",\\\n\"traveler\": {\\\n\"type\": \"EMPLOYEE\",\\\n\"name\": {\\\n\"first_name\": \"John\",\\\n\"middle_name\": \"Paul\",\\\n\"last_name\": \"Doe\",\\\n\"suffix\": \"Jr.\"},\\\n\"guest_email\": \"guest@gmail.com\",\\\n\"user_id\": \"cuuser_cky0xs54b004h01pidi0pcuz1\"},\\\n\"version\": 2,\\\n\"billable_at\": \"2017-12-27T15:42:30Z\",\\\n\"starts_at\": \"2017-12-27T15:42:30Z\",\\\n\"ends_at\": \"2017-12-27T15:42:30Z\"}]}`\n\n## [operation/getTrip](https://developer.brex.com/openapi/travel_api/\\#operation/getTrip) Get trip\n\nRetrieves a trip by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| trip\\_id<br>required | string |\n\nResponses\n\n200\nThe trip that was retrieved.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\n500\nInternal server error\n\nget/v1/trips/{trip\\_id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/trips/{trip_id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"trip_cl9rh1n8g001e0j84w6fb4fd1\",\n\"created_at\": \"2017-12-27T15:42:30Z\",\n\"updated_at\": \"2017-12-27T15:42:30Z\",\n\"name\": \"Trip to Rio de Janeiro\",\n\"booker_user_id\": \"cuuser_cky0xs54b004h01pidi0pcuz1\",\n\"status\": \"string\",\n\"traveler\": {\n\"type\": \"EMPLOYEE\",\n\"name\": {\n\"first_name\": \"John\",\n\"middle_name\": \"Paul\",\n\"last_name\": \"Doe\",\n\"suffix\": \"Jr.\"},\n\"guest_email\": \"guest@gmail.com\",\n\"user_id\": \"cuuser_cky0xs54b004h01pidi0pcuz1\"},\n\"version\": 2,\n\"billable_at\": \"2017-12-27T15:42:30Z\",\n\"starts_at\": \"2017-12-27T15:42:30Z\",\n\"ends_at\": \"2017-12-27T15:42:30Z\"}`\n\n## [operation/listTripBookings](https://developer.brex.com/openapi/travel_api/\\#operation/listTripBookings) List trip bookings\n\nLists the bookings within a trip.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| trip\\_id<br>required | string |\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int64> |\n\nResponses\n\n200\nA page with a list of bookings.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\n500\nInternal server error\n\nget/v1/trips/{trip\\_id}/bookings\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/trips/{trip_id}/bookings' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"booking_cl9t5dnu800040m3071dandeq\",\\\n\"created_at\": \"2017-12-27T15:42:30Z\",\\\n\"updated_at\": \"2017-12-27T15:42:30Z\",\\\n\"trip_id\": \"trip_cl9rh1n8g001e0j84w6fb4fd1\",\\\n\"version\": 2,\\\n\"type\": \"AIR\",\\\n\"status\": \"CONFIRMED\",\\\n\"source\": \"BREX_TRAVEL\",\\\n\"booking_data\": {\\\n\"journeys\": [\\\n{\\\n\"flights\": [\\\n{\\\n\"origin\": null,\\\n\"destination\": null,\\\n\"departure_time\": null,\\\n\"arrival_time\": null,\\\n\"duration\": null,\\\n\"confirmation_code\": null,\\\n\"cabin_class\": null,\\\n\"marketing_flight\": null,\\\n\"operating_flight\": null,\\\n\"seat\": null}],\\\n\"status\": \"string\",\\\n\"cabin_display_name\": \"Flexible Economy\"}],\\\n\"tickets\": [\\\n{\\\n\"number\": \"0017959463925\",\\\n\"issue_date\": \"2017-12-27\"}],\\\n\"redress_number\": {\\\n\"issuing_country\": \"BR\",\\\n\"document_number\": \"1231231\"},\\\n\"known_traveler_number\": {\\\n\"issuing_country\": \"BR\",\\\n\"document_number\": \"1231231\"},\\\n\"type\": \"string\"}}]}`\n\n## [operation/getBooking](https://developer.brex.com/openapi/travel_api/\\#operation/getBooking) Get booking\n\nRetrieves a booking by trip and booking ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| trip\\_id<br>required | string |\n| booking\\_id<br>required | string |\n\nResponses\n\n200\nThe booking that was retrieved.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\n500\nInternal server error\n\nget/v1/trips/{trip\\_id}/bookings/{booking\\_id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/trips/{trip_id}/bookings/{booking_id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"booking_cl9t5dnu800040m3071dandeq\",\n\"created_at\": \"2017-12-27T15:42:30Z\",\n\"updated_at\": \"2017-12-27T15:42:30Z\",\n\"trip_id\": \"trip_cl9rh1n8g001e0j84w6fb4fd1\",\n\"version\": 2,\n\"type\": \"AIR\",\n\"status\": \"CONFIRMED\",\n\"source\": \"BREX_TRAVEL\",\n\"booking_data\": {\n\"journeys\": [\\\n{\\\n\"flights\": [\\\n{\\\n\"origin\": {\\\n\"airport_code\": \"GIG\",\\\n\"terminal\": \"T2\",\\\n\"gate\": \"B13\",\\\n\"airport_location\": {\\\n\"country\": null,\\\n\"administrative_area\": null,\\\n\"city\": null,\\\n\"postal_code\": null,\\\n\"address_line_1\": null,\\\n\"address_line_2\": null,\\\n\"coordinates\": null,\\\n\"timezone\": null}},\\\n\"destination\": {\\\n\"airport_code\": \"GIG\",\\\n\"terminal\": \"T2\",\\\n\"gate\": \"B13\",\\\n\"airport_location\": {\\\n\"country\": null,\\\n\"administrative_area\": null,\\\n\"city\": null,\\\n\"postal_code\": null,\\\n\"address_line_1\": null,\\\n\"address_line_2\": null,\\\n\"coordinates\": null,\\\n\"timezone\": null}},\\\n\"departure_time\": {\\\n\"local_time\": \"2019-08-24T14:15:22Z\",\\\n\"timestamp\": \"2017-12-27T15:42:30Z\"},\\\n\"arrival_time\": {\\\n\"local_time\": \"2019-08-24T14:15:22Z\",\\\n\"timestamp\": \"2017-12-27T15:42:30Z\"},\\\n\"duration\": \"PT4h20M\",\\\n\"confirmation_code\": \"PWZRTQ\",\\\n\"cabin_class\": \"string\",\\\n\"marketing_flight\": {\\\n\"airline_code\": \"G3\",\\\n\"number\": \"1234\",\\\n\"airline_name\": \"GOL Linhas Aereas S.A.\"},\\\n\"operating_flight\": {\\\n\"airline_code\": \"G3\",\\\n\"number\": \"1234\",\\\n\"airline_name\": \"GOL Linhas Aereas S.A.\"},\\\n\"seat\": {\\\n\"number\": \"31D\",\\\n\"status\": \"string\"}}],\\\n\"status\": \"string\",\\\n\"cabin_display_name\": \"Flexible Economy\"}],\n\"tickets\": [\\\n{\\\n\"number\": \"0017959463925\",\\\n\"issue_date\": \"2017-12-27\"}],\n\"redress_number\": {\n\"issuing_country\": \"BR\",\n\"document_number\": \"1231231\"},\n\"known_traveler_number\": {\n\"issuing_country\": \"BR\",\n\"document_number\": \"1231231\"},\n\"type\": \"string\"}}`\n\n[Next to **Onboarding API examples**](https://developer.brex.com/docs/onboarding_examples/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/travel_api/",
      "title": "Travel API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Travel API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Travel API",
      "scrapeId": "21dde133-1e4a-4eef-99f8-3c28780d9b1d",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/travel_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Travel API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [contact us permalink](https://developer.brex.com/docs/support/\\#contact-us)     Contact Us\n\n### [email permalink](https://developer.brex.com/docs/support/\\#email)     Email\n\nIf you have any questions or feedback about using the Brex API, please email us at [developer-support@brex.com](mailto:developer-support@brex.com).\n\nIf you are running into an API error, please also include the request trace ID when emailing us. You can find the request trace ID in the `X-Brex-Trace-Id` API response header.\n\n**Remember**: Before communicating with Brex, check that you're not sending any sensitive information such as headers or requests with tokens and authorization information.\n\n### [slack community permalink](https://developer.brex.com/docs/support/\\#slack-community)     Slack community\n\nJoin [our Slack community](https://join.slack.com/t/brexdev/shared_invite/zt-vgwh6rja-CjydrUA4uJSB90ZO~gnI8Q) to discuss your API integrations with Brex employees and other developers.\n\n[Next to **FAQ**](https://developer.brex.com/docs/faq/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/support/",
      "title": "Contact Us",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Contact Us",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Contact Us",
      "scrapeId": "64547487-717e-40fb-acae-4e4a0f758c81",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/support/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Developer support options for the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Developer support options for the Brex API",
      "twitter:title": "Contact Us",
      "og:description": "Developer support options for the Brex API",
      "twitter:description": "Developer support options for the Brex API"
    }
  },
  {
    "markdown": "# Transactions API(1.0)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/da058b39-c3fa-4b3b-b730-53a3a9f704e3)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nThe transactions API lets you view your transactions, accounts, and statements.\n\n# [tag/Transactions](https://developer.brex.com/openapi/transactions_api/\\#tag/Transactions) Transactions\n\nEndpoints for transaction data.\n\n## [operation/listPrimaryCardTransactions](https://developer.brex.com/openapi/transactions_api/\\#operation/listPrimaryCardTransactions) List transactions for all card accounts.\n\nThis endpoint lists all settled transactions for all card accounts.\nRegular users may only fetch their own \"PURCHASE\",\"REFUND\" and \"CHARGEBACK\" settled transactions.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| user\\_ids | Array of strings or null |\n| posted\\_at\\_start | string or null<date-time><br>Shows only transactions with a `posted_at_date` on or after this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6)<br>Example:posted\\_at\\_start=2022-12-12T23:59:59.999 |\n| expand\\[\\] | Array of strings or null<br>`expense_id` can be passed to `expand[]` query parameter to get expanded, e.g., `?expand[]=expense_id`. |\n\nResponses\n\n200\nlistPrimaryCardTransactions 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/transactions/card/primary\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/transactions/card/primary \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"card_id\": \"string\",\\\n\"description\": \"string\",\\\n\"amount\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"initiated_at_date\": \"2019-08-24\",\\\n\"posted_at_date\": \"2019-08-24\",\\\n\"type\": \"PURCHASE\",\\\n\"merchant\": {\\\n\"raw_descriptor\": \"string\",\\\n\"mcc\": \"string\",\\\n\"country\": \"string\"},\\\n\"card_metadata\": {\\\n\"property1\": \"string\",\\\n\"property2\": \"string\"},\\\n\"expense_id\": \"string\"}]}`\n\n## [operation/listCashTransactions](https://developer.brex.com/openapi/transactions_api/\\#operation/listCashTransactions) List transactions for the selected cash account.\n\nThis endpoint lists all transactions for the cash account with the selected ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| posted\\_at\\_start | string or null<date-time><br>Shows only transactions with a `posted_at_date` on or after this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6)<br>Example:posted\\_at\\_start=2022-12-12T23:59:59.999 |\n\nResponses\n\n200\nlistCashTransactions 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/transactions/cash/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/transactions/cash/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"description\": \"string\",\\\n\"amount\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"initiated_at_date\": \"2019-08-24\",\\\n\"posted_at_date\": \"2019-08-24\",\\\n\"type\": \"PAYMENT\",\\\n\"transfer_id\": \"string\"}]}`\n\n# [tag/Accounts](https://developer.brex.com/openapi/transactions_api/\\#tag/Accounts) Accounts\n\nEndpoints for account data.\n\n## [operation/listCardAccounts](https://developer.brex.com/openapi/transactions_api/\\#operation/listCardAccounts) List card accounts\n\nThis endpoint lists all accounts of card type.\n\nSecurity**OAuth2**\n\nResponses\n\n200\nlistCardAccounts 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/accounts/card\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/accounts/card \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`[\\\n{\\\n\"id\": \"string\",\\\n\"status\": \"ACTIVE\",\\\n\"current_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"available_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"account_limit\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"current_statement_period\": {\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\"}}]`\n\n## [operation/listPrimaryCardStatements](https://developer.brex.com/openapi/transactions_api/\\#operation/listPrimaryCardStatements) List primary card account statements.\n\nThis endpoint lists all finalized statements for the primary card account.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nlistPrimaryCardStatements 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/accounts/card/primary/statements\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/accounts/card/primary/statements \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"start_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"end_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"period\": {\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\"}}]}`\n\n## [operation/listAccounts](https://developer.brex.com/openapi/transactions_api/\\#operation/listAccounts) List cash accounts\n\nThis endpoint lists all the existing cash accounts with their status.\n\nSecurity**OAuth2**\n\nResponses\n\n200\nlistAccounts 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/accounts/cash\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/accounts/cash \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"status\": \"ACTIVE\",\\\n\"current_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"available_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"account_number\": \"string\",\\\n\"routing_number\": \"string\",\\\n\"primary\": true}]}`\n\n## [operation/getPrimaryAccount](https://developer.brex.com/openapi/transactions_api/\\#operation/getPrimaryAccount) Get primary cash account\n\nThis endpoint returns the primary cash account with its status. There will always be only one primary account.\n\nSecurity**OAuth2**\n\nResponses\n\n200\ngetPrimaryAccount 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/accounts/cash/primary\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/accounts/cash/primary \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"status\": \"ACTIVE\",\n\"current_balance\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"available_balance\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"account_number\": \"string\",\n\"routing_number\": \"string\",\n\"primary\": true}`\n\n## [operation/getAccount](https://developer.brex.com/openapi/transactions_api/\\#operation/getAccount) Get cash account by ID\n\nThis endpoint returns the cash account associated with the provided ID with its status.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetAccount 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/accounts/cash/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/accounts/cash/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"status\": \"ACTIVE\",\n\"current_balance\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"available_balance\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"account_number\": \"string\",\n\"routing_number\": \"string\",\n\"primary\": true}`\n\n## [operation/listCashStatements](https://developer.brex.com/openapi/transactions_api/\\#operation/listCashStatements) List cash account statements.\n\nThis endpoint lists all finalized statements for the cash account by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nlistCashStatements 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v2/accounts/cash/{id}/statements\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/accounts/cash/{id}/statements' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"start_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"end_balance\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"period\": {\\\n\"start_date\": \"2019-08-24\",\\\n\"end_date\": \"2019-08-24\"}}]}`\n\n[Next to **Expenses API**](https://developer.brex.com/openapi/expenses_api/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/transactions_api/",
      "title": "Transactions API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Transactions API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Transactions API",
      "scrapeId": "3ef7bfb4-c3b0-4e02-b829-ea9a834531c7",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/transactions_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Transactions API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [error codes permalink](https://developer.brex.com/docs/error_codes/\\#error-codes)     Error codes\n\nBrex uses HTTP response status codes to indicate the success or failure of your API requests. If your request fails, Brex returns an error using the appropriate status code.\n\nIn general, there are 3 status code ranges you can expect:\n\n- `2xx`\n: Success status codes confirm that your request worked as expected.\n\n- `4xx`\n: Error status codes indicate an error because of the information provided (e.g., a required parameter was omitted).\n\n- `5xx`\n: Error status codes are rare and indicate an error with Brex's servers.\n\n\nAll Brex API endpoints include an errors object in their response body when the request fails. It will contain a `type`, `message`, and optional `code`. For example:\n\nHTTP/1.1 401 Not Authorized\n\nCopy\n\nCopied\n\n```json\n{\n    \"type\": \"UNAUTHORIZED\",\n    \"message\": \"PERMISSION_DENIED: Invalid or Revoked Token\"\n}\n```\n\nHTTP/1.1 404 Not Found\n\nCopy\n\nCopied\n\n```json\n{\n    \"type\": \"NOT_FOUND\",\n    \"message\": \"Not Found\",\n    \"code\": \"USER_NOT_FOUND\"\n}\n```\n\n## [common errors and fixes permalink](https://developer.brex.com/docs/error_codes/\\#common-errors-and-fixes)     Common errors and fixes\n\n| Status code | Endpoint | Error Message | Fix |\n| --- | --- | --- | --- |\n| 401 | `/v2/accounts/cash` | Must be cash admin, bookkeeper or user. | Brex Cash may not be enabled in your account. The account owner should enable Brex Cash. For partners, there may be no fix beyond proper error handling as this means the customer does not have Brex Cash. If Brex Cash is enabled, the authenticated user must have access to Brex Cash. |\n| 401 | `/v2/vendors` | Only account admin, ap clerks and bookkeepers can access contacts | Brex Cash may not be enabled in your account. The account owner should enable Brex Cash. For partners, there may be no fix beyond proper error handling as this means the customer does not have Brex Cash. |\n| 400 | Any `POST` with free form text input | \\[Field name\\] is invalid | Free form text fields, display names, etc. can only accept ASCII characters. |\n| 403 | Any endpoint | Expired token | For customers, generate a new token using the Brex dashboard. For partners, generate a new token using a refresh token. |\n\n[Next to **Versioning**](https://developer.brex.com/docs/versioning/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/error_codes/",
      "title": "Handling errors",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Handling errors",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Handling errors",
      "scrapeId": "9391a236-ac3b-4ccb-b673-ee89b881e0ca",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/error_codes/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Handling errors for the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Handling errors for the Brex API",
      "twitter:title": "Handling errors",
      "og:description": "Handling errors for the Brex API",
      "twitter:description": "Handling errors for the Brex API"
    }
  },
  {
    "markdown": "# [rate limits permalink](https://developer.brex.com/docs/rate_limits/\\#rate-limits)     Rate limits\n\nThe Brex API employs rate limits as a safeguard against abuse and to ensure API stability. Per Client ID and Brex account, we allow:\n\n- Up to 1,000 requests in 60 seconds.\n\n- Up to 1,000 transfers in 24 hours.\n\n- Up to 100 international wires in 24 hours.\n\n- Up to 5,000 cards created in 24 hours.\n\n\nExceeding a rate limit will result in an [HTTP 429 (too many requests)](https://datatracker.ietf.org/doc/html/rfc6585#section-4) response. Rate limits may be reduced further to prevent abuse or ensure system reliability. Brex may reduce limits to prevent abuse or ensure system reliability. If you require higher rate limits for a high volume application, please [contact support](https://developer.brex.com/docs/support/).\n\n## [handling rate limits gracefully permalink](https://developer.brex.com/docs/rate_limits/\\#handling-rate-limits-gracefully)     Handling rate limits gracefully\n\nIf you encounter rate limits, there may be a workaround depending on your circumstance.\n\nIf your rate limiting is due to frequent polling of certain endpoints, you may be able to leverage [webhooks](https://developer.brex.com/docs/webhooks) to instead receive real time notifications of important events. If we do not yet support a webhook that you require, [let us know](https://developer.brex.com/docs/support).\n\nIf webhooks are not a viable option to reduce call volume, you can watch for 429 status codes and implement a retry mechanism. We recommend using an [exponential backoff](https://en.wikipedia.org/wiki/Exponential_backoff) schedule with some randomness to avoid the [thundering herd problem](https://en.wikipedia.org/wiki/Thundering_herd_problem).\n\nAnother option is to throttle traffic to Brex more broadly per Client ID rather than for individual requests. A [token bucket algorithm](https://en.wikipedia.org/wiki/Token_bucket) implemented per Client ID and optionally also against a specific type of rate limit (as listed at the top of this page) may help you mitigate or avoid the effect of rate limits on your application.\n\n[Next to **Idempotency**](https://developer.brex.com/docs/idempotency/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/rate_limits/",
      "title": "Rate Limits",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Rate Limits",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Rate Limits",
      "scrapeId": "3edaf965-109b-427b-b368-3b7182495492",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/rate_limits/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Rate limits on the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Rate limits on the Brex API",
      "twitter:title": "Rate Limits",
      "og:description": "Rate limits on the Brex API",
      "twitter:description": "Rate limits on the Brex API"
    }
  },
  {
    "markdown": "## [brex api faq permalink](https://developer.brex.com/docs/faq/\\#brex-api-faq)     Brex API FAQ\n\n### [what is the difference between a user token and an oauth token permalink](https://developer.brex.com/docs/faq/\\#what-is-the-difference-between-a-user-token-and-an-oauth-token)     What is the difference between a user token and an OAuth token?\n\nThe [user token](https://developer.brex.com/docs/authentication/) is used to authenticate your own Brex account. The [OAuth token](https://developer.brex.com/docs/partner_authentication/) is used when building partner applications to authenticate other Brex accounts.\n\n### [what is the expiration time for a user token versus an oauth token permalink](https://developer.brex.com/docs/faq/\\#what-is-the-expiration-time-for-a-user-token-versus-an-oauth-token)     What is the expiration time for a user token versus an OAuth token?\n\nUser tokens expire if they are not used to make an API call for 30 days. When used regularly, they will not expire. User tokens can also be [revoked using the Brex dashboard](https://developer.brex.com/docs/authentication/#token-revocation-and-expiration) if needed. The OAuth token lasts for one hour and then [must be refreshed](https://www.oauth.com/oauth2-servers/making-authenticated-requests/refreshing-an-access-token/).\n\n### [can a brex user have multiple brex deposits accounts and cards permalink](https://developer.brex.com/docs/faq/\\#can-a-brex-user-have-multiple-brex-deposits-accounts-and-cards)     Can a Brex user have multiple Brex deposits accounts and cards?\n\nYes, a Brex user can have multiple deposits accounts and card. You can use [List Cash Accounts endpoint](https://developer.brex.com/openapi/transactions_api/#operation/listAccounts) to get a list of deposits accounts and the [List Cards endpoint](https://developer.brex.com/openapi/team_api/#operation/listCardsByUserId) to get a list of cards for a user.\n\n### [is it possible to get pending transactions via the api permalink](https://developer.brex.com/docs/faq/\\#is-it-possible-to-get-pending-transactions-via-the-api)     Is it possible to get pending transactions via the API?\n\nThis is not available through the API today.\n\n### [can you filter transactions using a time range through the api permalink](https://developer.brex.com/docs/faq/\\#can-you-filter-transactions-using-a-time-range-through-the-api)     Can you filter transactions using a time range through the API?\n\nThis is not available through the API today, but the current workaround is to [request all transactions](https://developer.brex.com/docs/transactions_examples/#bulk-fetch-recent-card-transactions-with-pagination) and then filter the transactions on your side.\n\n### [is there a way to check the balance of a users deposits account using the api permalink](https://developer.brex.com/docs/faq/\\#is-there-a-way-to-check-the-balance-of-a-users-deposits-account-using-the-api)     Is there a way to check the balance of a user's deposits account using the API?\n\nYes, the [List Cash Accounts endpoint](https://developer.brex.com/openapi/transactions_api/#operation/listAccounts) returns the current balance of each account.\n\n### [how do i get a cards pan permalink](https://developer.brex.com/docs/faq/\\#how-do-i-get-a-cards-pan)     How do I get a card's PAN?\n\nYou can use the [Get Card Number endpoint](https://developer.brex.com/openapi/team_api/#operation/getCardNumber) to get a card's PAN. That endpoint requires the card ID, which you can get using the [List Cards endpoint](https://developer.brex.com/openapi/team_api/#operation/listCardsByUserId).\n\n### [is there any way to use the brex api to programatically add cards to apple pay permalink](https://developer.brex.com/docs/faq/\\#is-there-any-way-to-use-the-brex-api-to-programatically-add-cards-to-apple-pay)     Is there any way to use the Brex API to programatically add cards to Apple Pay?\n\nThere is no programmatic way to add credit cards to Apple Pay via the Brex API. Apple does not offer a way to add payment passes/credit cards to Apple Pay outside of the iOS environment.\n\nApple does offer options for adding an [\"Add to Apple Wallet\"](https://developer.apple.com/wallet/add-to-apple-wallet-guidelines/) to your iOS app, but it requires a [special entitlement](https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/EntitlementKeyReference/ApplePayandPassKitEntitlements/ApplePayandPassKitEntitlements.html#//apple_ref/doc/uid/TP40011195-CH7-SW4) to enable in-app provisioning of payment cards that only Apple can grant.\n\n### [how do i get the request trace id to help with support requests permalink](https://developer.brex.com/docs/faq/\\#how-do-i-get-the-request-trace-id-to-help-with-support-requests)     How do I get the request trace ID to help with support requests?\n\nIt is in the API response header called `X-Brex-Trace-Id`.\n\n### [are transactions from the api returned in real time permalink](https://developer.brex.com/docs/faq/\\#are-transactions-from-the-api-returned-in-real-time)     Are transactions from the API returned in real-time?\n\nOnly settled transactions are returned from the API. We don't return pending transactions today, so transactions are not returned in real-time as they happen, and will only be returned in the API as transactions settle.\n\n### [is it possible to share vendors between brex accounts permalink](https://developer.brex.com/docs/faq/\\#is-it-possible-to-share-vendors-between-brex-accounts)     Is it possible to share vendors between Brex accounts?\n\nVendors are unique to a customer account. Currently, it is not possible to share a vendor between accounts. As a workaround, you can add the same vendor to each account.\n\n### [whats the difference beteween list transfers and list transactions permalink](https://developer.brex.com/docs/faq/\\#whats-the-difference-beteween-list-transfers-and-list-transactions)     What's the difference beteween List Transfers and List Transactions?\n\n[List Transfers](https://developer.brex.com/openapi/payments_api/#operation/listTransfers) returns a list of transfer payments (ACH, wire, or mail check) to vendors that are initiated via Brex.\n\n[List Cash Transactions](https://developer.brex.com/openapi/transactions_api/#operation/listCashTransactions) and [List Card Transactions](https://developer.brex.com/openapi/transactions_api/#operation/listPrimaryCardTransactions) return all transactions for a Brex deposits account and Brex card respectively.\n\n### [is it possible to receive payments via the payments api permalink](https://developer.brex.com/docs/faq/\\#is-it-possible-to-receive-payments-via-the-payments-api)     Is it possible to receive payments via the Payments API?\n\nReceiving payments, such as initiating an ACH debit to an external account, is not supported through the API today.\n\n### [whats the difference between a vendor card and a virtual card permalink](https://developer.brex.com/docs/faq/\\#whats-the-difference-between-a-vendor-card-and-a-virtual-card)     What's the difference between a vendor card and a virtual card?\n\nThe differences are [documented here](https://www.brex.com/support/brex-card-overview/).\n\n### [what is a book transfer permalink](https://developer.brex.com/docs/faq/\\#what-is-a-book-transfer)     What is a book transfer?\n\nIt is a special transfer type to move funds between Brex deposits accounts.",
    "metadata": {
      "url": "https://developer.brex.com/docs/faq/",
      "title": "FAQ",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "FAQ",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "FAQ",
      "scrapeId": "5c3c47a4-2de1-4413-97ac-e26ae36cc2ca",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/faq/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Answers to frequently asked questions about the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Answers to frequently asked questions about the Brex API",
      "twitter:title": "FAQ",
      "og:description": "Answers to frequently asked questions about the Brex API",
      "twitter:description": "Answers to frequently asked questions about the Brex API"
    }
  },
  {
    "markdown": "# Onboarding API(1.0)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/455508b9-0aa3-4b12-afed-8e4cde9e6c03)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nThe onboarding API allows you to refer your customers and personal contacts to Brex.\n\n# [tag/Referrals](https://developer.brex.com/openapi/onboarding_api/\\#tag/Referrals) Referrals\n\nThe onboarding API allows you to submit customer referrals to Brex and receive a customized Brex application URL. You can\noptionally submit additional information to help prefill their application with data you may have about the customer.\nYou also can get visibility into the application approval status.\n\n## [operation/listReferrals](https://developer.brex.com/openapi/onboarding_api/\\#operation/listReferrals) List referrals\n\nReturns referrals created.\n_Note_: This doesn't include referrals that have expired.\n\nSecurity**oAuth2ClientCredentials**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n\nResponses\n\n200\nlistReferrals 200 response\n\n400\nInvalid cursor\n\n401\nUnauthorized\n\nget/v1/referrals\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/referrals \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"referral_signup_url\": \"string\",\\\n\"expires_at\": \"2019-08-24T14:15:22Z\",\\\n\"customer_email\": \"user@example.com\",\\\n\"status\": \"UNCLAIMED\",\\\n\"products\": [\\\n{\\\n\"cash\": {\\\n\"accounts\": [\\\n{\\\n\"id\": null,\\\n\"instructions\": null,\\\n\"created_at\": null}],\\\n\"application\": {\\\n\"status\": \"NO_ACCOUNT\"}}}]}]}`\n\n## [operation/createReferralRequest](https://developer.brex.com/openapi/onboarding_api/\\#operation/createReferralRequest) Creates a referral\n\nThis creates new referrals. The response will contain an identifier and a unique personalized link to an application flow. Many fields are optional and when they're provided they'll prefill the application flow for Brex. You should handle and store these references securely as they contain sensitive information about the referral.\n\nSecurity**oAuth2ClientCredentials**\n\nRequest\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| referral\\_code<br>required | string<br>Referral code that attributes credit to you if the prospect signs up for a Brex account. |\n| applicant<br>required | object (Applicant) <br>Required information about the referred prospect. |\n| business | object or null<br>Information about the business the application is for.<br>You can optionally set the `alternate_address`, if the business has an additional address which is different from the <br>registration address. For instance, for international companies where their operational address may be different <br>than where the company was incorporated. |\n| contact\\_preference | string or null<br>When set to `EMAIL_OUTBOUND`, Brex will email the referred prospective customer directly to prompt them to create their account rather than rely on you to direct them to claim the account. If not provided, you are responsible for contacting the prospect and the value defaults to `NO_OUTBOUND`.<br>Enum:\"NO\\_OUTBOUND\"\"EMAIL\\_OUTBOUND\" |\n\nResponses\n\n200\ncreateReferralRequest 200 response\n\n401\nUnauthorized\n\npost/v1/referrals\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"referral_code\": \"string\",\n\"applicant\": {\n\"last_name\": \"string\",\n\"first_name\": \"string\",\n\"email\": \"user@example.com\"},\n\"business\": {\n\"legal_name\": \"string\",\n\"incorporation_type\": \"C_CORP\",\n\"employer_identification_number\": \"stringstr\",\n\"website_url\": \"string\",\n\"activity_description\": \"string\",\n\"address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"beneficial_owners\": [\\\n{\\\n\"legal_name\": \"string\",\\\n\"company_relationship\": \"FOUNDER\",\\\n\"date_of_birth\": \"2019-08-24\",\\\n\"identity_document\": {\\\n\"country\": \"string\",\\\n\"type\": \"SSN\",\\\n\"number\": \"string\"},\\\n\"address\": {\\\n\"line1\": \"string\",\\\n\"line2\": \"string\",\\\n\"city\": \"string\",\\\n\"state\": \"string\",\\\n\"country\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"phone_number\": \"string\"},\\\n\"prong\": \"OWNERSHIP\"}],\n\"alternate_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"}},\n\"contact_preference\": \"NO_OUTBOUND\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"referral_signup_url\": \"string\",\n\"expires_at\": \"2019-08-24T14:15:22Z\",\n\"customer_email\": \"user@example.com\",\n\"status\": \"UNCLAIMED\",\n\"products\": [\\\n{\\\n\"cash\": {\\\n\"accounts\": [\\\n{\\\n\"id\": \"string\",\\\n\"instructions\": {\\\n\"domestic\": {\\\n\"account_type\": null,\\\n\"bank_account_number\": null,\\\n\"bank_routing_number\": null,\\\n\"beneficiary_name\": null,\\\n\"beneficiary_address\": null,\\\n\"bank_name\": null,\\\n\"bank_address\": null},\\\n\"international\": {\\\n\"account_type\": null,\\\n\"swift_account_number\": null,\\\n\"swift_bank_number\": null,\\\n\"beneficiary_name\": null,\\\n\"beneficiary_address\": null,\\\n\"bank_name\": null,\\\n\"bank_address\": null,\\\n\"special_instructions\": null}},\\\n\"created_at\": \"2019-08-24T14:15:22Z\"}],\\\n\"application\": {\\\n\"status\": \"NO_ACCOUNT\"}}}]}`\n\n## [operation/getReferral](https://developer.brex.com/openapi/onboarding_api/\\#operation/getReferral) Gets a referral by ID\n\nReturns a referral object by ID if it exists.\n\nSecurity**oAuth2ClientCredentials**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetReferral 200 response\n\n401\nUnauthorized\n\n404\nReferral not found\n\nget/v1/referrals/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/referrals/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"referral_signup_url\": \"string\",\n\"expires_at\": \"2019-08-24T14:15:22Z\",\n\"customer_email\": \"user@example.com\",\n\"status\": \"UNCLAIMED\",\n\"products\": [\\\n{\\\n\"cash\": {\\\n\"accounts\": [\\\n{\\\n\"id\": \"string\",\\\n\"instructions\": {\\\n\"domestic\": {\\\n\"account_type\": null,\\\n\"bank_account_number\": null,\\\n\"bank_routing_number\": null,\\\n\"beneficiary_name\": null,\\\n\"beneficiary_address\": null,\\\n\"bank_name\": null,\\\n\"bank_address\": null},\\\n\"international\": {\\\n\"account_type\": null,\\\n\"swift_account_number\": null,\\\n\"swift_bank_number\": null,\\\n\"beneficiary_name\": null,\\\n\"beneficiary_address\": null,\\\n\"bank_name\": null,\\\n\"bank_address\": null,\\\n\"special_instructions\": null}},\\\n\"created_at\": \"2019-08-24T14:15:22Z\"}],\\\n\"application\": {\\\n\"status\": \"NO_ACCOUNT\"}}}]}`\n\n## [operation/createDocument](https://developer.brex.com/openapi/onboarding_api/\\#operation/createDocument) Create a new document upload\n\nThe `uri` will be a presigned S3 URL allowing you to upload the referral doc securely. This URL can only be used for a `PUT` operation and expires 30 minutes after its creation. Once your upload is complete, we will use this to prefill the application.\n\nRefer to these [docs](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html) on how to upload to this presigned S3 URL. We highly recommend using one of AWS SDKs if they're available for your language to upload these files.\n\nSecurity**oAuth2ClientCredentials**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| type<br>required | string (DocumentType) <br>Type of document being submitted. Allowable types:<br>- ARTICLES\\_OF\\_INCORPORATION<br>- IRS\\_EIN\\_CONFIRMATION (IRS CP 575 or 147C form)<br>- IRS\\_EIN\\_APPLICATION (IRS SS4 form)<br>- CERTIFICATE\\_GOOD\\_STANDING<br>Enum:\"ARTICLES\\_OF\\_INCORPORATION\"\"IRS\\_EIN\\_CONFIRMATION\"\"IRS\\_EIN\\_APPLICATION\"\"CERTIFICATE\\_GOOD\\_STANDING\" |\n\nResponses\n\n200\ncreateDocument 200 response\n\n401\nUnauthorized\n\n404\nReferral not found\n\npost/v1/referrals/{id}/document\\_upload\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"type\": \"ARTICLES_OF_INCORPORATION\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\n`{\n\"uri\": \"string\",\n\"id\": \"string\"}`\n\n[Next to **Team API**](https://developer.brex.com/openapi/team_api/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/onboarding_api/",
      "title": "Onboarding API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Onboarding API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Onboarding API",
      "scrapeId": "5839631f-0e91-4a52-8416-1c8c38e7ea7d",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/onboarding_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Onboarding API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [pipedream permalink](https://developer.brex.com/docs/pipedream/\\#pipedream)     Pipedream\n\n[Pipedream](https://pipedream.com/apps/brex) is a low-code integration platform that Brex integrates with to enable various use cases including bulk creating users, setting monthly limits for users, issuing virtual cards, and sending vendor payments.\n\n## [getting started permalink](https://developer.brex.com/docs/pipedream/\\#getting-started)     Getting Started\n\nWhen you first connect the Brex app on Pipedream, you will need to use your Brex dashboard credentials to sign in. For more information on Pipedream, visit the [website](https://pipedream.com/) to find product demos, documentation, and examples.\n\n## [templates permalink](https://developer.brex.com/docs/pipedream/\\#templates)     Templates\n\nWe've created a number of [template recipes](https://pipedream.com/@brex) to help you get started with inviting users, setting limits, and creating virtual cards.\n\n## [actions permalink](https://developer.brex.com/docs/pipedream/\\#actions)     Actions\n\nPipedream's Brex actions are pre-built components that enable the following:\n\n- [Invite User](https://pipedream.com/apps/brex/actions/invite-user)\n- [Create Card](https://pipedream.com/apps/brex/actions/create-card)\n- [Set Limit for User](https://pipedream.com/apps/brex/actions/set-limit-for-user)\n- [List Transactions for Selected Cash Account](https://pipedream.com/apps/brex/actions/list-transactions-for-selected-cash-account)\n- [List Transactions for Primary Card Account](https://pipedream.com/apps/brex/actions/list-transactions-for-primary-card-account)\n\n## [triggers permalink](https://developer.brex.com/docs/pipedream/\\#triggers)     Triggers\n\nPipedream's Brex trigger is a pre-built component that enables you to listen for transfer events in Brex and then take actions in Pipedream:\n\n- [New Transfer Event](https://pipedream.com/apps/brex/triggers/new-transfer-event)\n\n[Next to **Workato**](https://developer.brex.com/docs/workato/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/pipedream/",
      "title": "Pipedream",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Pipedream",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Pipedream",
      "scrapeId": "bf3b1487-e5ea-470c-a4ed-2d7d505d7f0b",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/pipedream/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Low-code solution for using the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Low-code solution for using the Brex API",
      "twitter:title": "Pipedream",
      "og:description": "Low-code solution for using the Brex API",
      "twitter:description": "Low-code solution for using the Brex API"
    }
  },
  {
    "markdown": "## [user roles and permissions permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#user-roles-and-permissions)     User roles and permissions\n\nMost Brex APIs require a Brex admin to grant access. In these cases, only users with the account admin role can be authenticated.\n\nAdditionally:\n\n- **Bookkeepers**\nmay access the\n**accounting API**\n.\n\n- Partners using the\n**onboarding API**\nauthenticate with a\n[Client Credentials Grant](https://oauth.net/2/grant-types/client-credentials/)\n–there is no user associated with this API access.\n\n\n## [scopes permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#scopes)     Scopes\n\nScopes define which endpoints your app has access to. You will specify your scopes when [generating your user token](https://developer.brex.com/docs/authentication/#1-generate-a-user-token).\n\nFor more information on how scopes work in general, see the [OAuth website](https://oauth.net/2/scope).\n\n## [scopes are additive permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#scopes-are-additive)     Scopes are additive\n\nAs a general security practice, you should request the minimum set of scopes required for whatever action the user is performing. For instance, if you are building a simple app that lists all of a company's cards, you should request the `cards.readonly` scopes. Since you are not modifying any data, you only need the `readonly` version of the `cards` scope.\n\nIf you later want to add new functionality that requires fetching user information, or make updates to cards, you can request those scopes ( `users`, `cards`) which will send the user through the authentication flow again and add those scopes to their previously consented scopes.\n\n## [user scopes permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#user-scopes)     User scopes\n\nAt the beginning of each API reference, there is a list of the scopes required for that given API. They are also listed here for convenience.\n\n### [authentication permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#authentication)     Authentication\n\nThese 2 scopes are included automatically in user tokens.\n\n|  |  |\n| --- | --- |\n| `openid` | Make an OpenID Connect request |\n| `offline_access` | Obtain an OAuth 2.0 refresh token |\n\n### [onboarding api permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#onboarding-api)     Onboarding API\n\n|  |  |\n| --- | --- |\n| `https://onboarding.brexapis.com/referrals` | View and manage referrals |\n\n### [payments api permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#payments-api)     Payments API\n\n|  |  |\n| --- | --- |\n| `vendors.readonly` | View vendor data |\n| `vendors` | View and manage vendor data |\n| `transfers.readonly` | View existing transfers |\n| `transfers` | View and manage transfers |\n\n### [team api permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#team-api)     Team API\n\n|  |  |\n| --- | --- |\n| `users.readonly` | View user data |\n| `users` | View and manage user data |\n| `locations.readonly` | View location data |\n| `locations` | View and manage location data |\n| `departments.readonly` | View department data |\n| `departments` | View and manage department data |\n| `cards.readonly` | View card data |\n| `cards` | View and manage card data |\n| `cards.pan` | View card number data |\n| `companies.readonly` | View company data |\n\n### [transactions api permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#transactions-api)     Transactions API\n\n|  |  |\n| --- | --- |\n| `transactions.cash.readonly` | View cash transaction data |\n| `accounts.card.readonly` | View card accounts |\n| `accounts.cash.readonly` | View cash accounts |\n| `statements.card.readonly` | View card statement data |\n\n### [accounting api legacy support permalink](https://developer.brex.com/docs/roles_permissions_scopes/\\#accounting-api-legacy-support)     Accounting API (Legacy support)\n\n|  |  |\n| --- | --- |\n| `https://accounting.brexapis.com/cash` | Brex Cash account access |\n| `https://accounting.brexapis.com/card` | Brex Card account access |\n\n[Next to **Pagination**](https://developer.brex.com/docs/pagination/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/roles_permissions_scopes/",
      "title": "Roles, permissions, and scopes",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Roles, permissions, and scopes",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Roles, permissions, and scopes",
      "scrapeId": "a5a30610-6d3a-41b8-8536-7f008534ea5f",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/roles_permissions_scopes/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "How scopes work in the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "How scopes work in the Brex API",
      "twitter:title": "Roles, permissions, and scopes",
      "og:description": "How scopes work in the Brex API",
      "twitter:description": "How scopes work in the Brex API"
    }
  },
  {
    "markdown": "# [workato permalink](https://developer.brex.com/docs/workato/\\#workato)     Workato\n\n[Workato](https://workato.com/) is a no-code integration platform that [Brex integrates with](https://www.workato.com/integrations/brex) to enable various use cases including bulk creating users, setting monthly limits for users, issuing virtual cards, and sending vendor payments.\n\n## [getting started permalink](https://developer.brex.com/docs/workato/\\#getting-started)     Getting Started\n\nWhen you first connect the Brex app on Workato, you'll need to use a [customer access token](https://developer.brex.com/docs/authentication/) from the Brex dashboard to authenticate. For more information on Workato, visit the [website](https://workato.com/) to find product demos, documentation, and examples.\n\n[Next to **Pipedream examples**](https://developer.brex.com/docs/pipedream_examples/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/workato/",
      "title": "Workato",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Workato",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Workato",
      "scrapeId": "a0af043d-24b2-4586-a0e0-d7cce5ec1abe",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/workato/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "No-code solution for using the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "No-code solution for using the Brex API",
      "twitter:title": "Workato",
      "og:description": "No-code solution for using the Brex API",
      "twitter:description": "No-code solution for using the Brex API"
    }
  },
  {
    "markdown": "# [webhooks permalink](https://developer.brex.com/docs/webhooks/\\#webhooks)     Webhooks\n\nBrex APIs offer webhooks to notify you in real-time when certain events happen in your account. Webhooks are HTTPS requests made to an endpoint of your choice that you can then implement custom business logic for. For example, you can receive a webhook when a referral you made has activated. Your endpoint that receives this webhook can then process the payload of the webhook to automate some internal process you have based on this referral, such as updating records in your database, or sending the user a notification.\n\n## [webhook event catalog permalink](https://developer.brex.com/docs/webhooks/\\#webhook-event-catalog)     Webhook event catalog\n\nCurrently, the Brex API sends webhooks for the following events:\n\n| API | Event Type | Trigger description |\n| --- | --- | --- |\n| [Onboarding](https://developer.brex.com/openapi/onboarding_api) | `REFERRAL_CREATED` | Triggered once a referral is created, whether by API or mobile/web |\n| [Onboarding](https://developer.brex.com/openapi/onboarding_api) | `REFERRAL_ACTIVATED` | Triggered when a referred contact signs up for Brex using your referral link |\n| [Onboarding](https://developer.brex.com/openapi/onboarding_api) | `REFERRAL_APPLICATION_STATUS_CHANGED` | Triggered when the product application status is changed |\n| [Payments](https://developer.brex.com/openapi/payments_api) | `TRANSFER_PROCESSED` | Triggered when a transfer is successfully received |\n| [Payments](https://developer.brex.com/openapi/payments_api) | `TRANSFER_FAILED` | Triggered when a transfer fails |\n| [Team](https://developer.brex.com/openapi/team_api) | `USER_UPDATED` | Triggered when a user is updated |\n\nFor more details on each event and their associated payloads, see the [Webhook Events API Reference](https://developer.brex.com/openapi/webhooks_api/#tag/Webhook-Events).\n\n## [how to implement webhooks permalink](https://developer.brex.com/docs/webhooks/\\#how-to-implement-webhooks)     How to implement webhooks\n\nAt a high level, in order to implement webhooks, you'll need to:\n\n1. Register a URL to receive the webhooks using the\n[register webhook](https://developer.brex.com/openapi/webhooks_api/#operation/createSubscription)\n    endpoint.\n\n2. Implement the registered URL as a public POST endpoint on your servers that accepts the webhook payload. This endpoint should:\n\n3. Verify the signature of the request to make sure the webhook is from Brex.\n\n4. Grab the relevant pieces of payload you need and then perform your business logic.\n\n\n### [registering your new endpoint permalink](https://developer.brex.com/docs/webhooks/\\#registering-your-new-endpoint)     Registering your new endpoint\n\nHit the [register webhook endpoint](https://developer.brex.com/openapi/webhooks_api/#operation/createSubscription) so Brex knows where to fire the webhooks. Provide it a URL and the events you wish to listen to in the payload. For example:\n\nCopy\n\nCopied\n\n```javascript\nPOST '/v1/webhooks'\n\nPayload\n\n{\n  \"url\": \"https://myapi.com/brex-webhook-processor\"\n  \"event_types\": [\\\n    \"REFERRAL_CREATED\",\\\n    \"REFERRAL_ACTIVATED\",\\\n    \"TRANSFER_PROCESSED\",\\\n    \"TRANSFER_FAILED\"\\\n  ]\n}\n```\n\nYou can use the [Webhooks API subscriptions endpoints](https://developer.brex.com/openapi/webhooks_api/#tag/Webhook-Subscriptions) at any time to unregister or update your webhooks. **Note:** Currently only one webhook endpoint can be registered per customer / `client_id`. However, each endpoint can be registered to listen to multiple `event_types` which your endpoint can then handle the logic for.\n\n### [implementing your webhook receiving endpoint permalink](https://developer.brex.com/docs/webhooks/\\#implementing-your-webhook-receiving-endpoint)     Implementing your webhook receiving endpoint\n\nNow we need to implement the endpoint. First it should be publicly available on the web, and accept a `POST` with a `JSON` payload.\n\n#### [verify signature permalink](https://developer.brex.com/docs/webhooks/\\#verify-signature)     Verify signature\n\nTo make sure the webhook request was sent by Brex and not an impersonator, we highly recommend verifying the signature in the request headers against a signature you calculate with a secret. Each webhook payload contains the following headers:\n\nCopy\n\nCopied\n\n```json\nWebhook-Id: the unique message identifier for the webhook message. This identifier is unique across all messages, but will be the same when the same webhook is being resent (e.g. due to a previous failure).\nWebhook-Timestamp: timestamp in seconds since epoch.\nWebhook-Signature: the Base64 encoded list of signatures (space delimited).\n```\n\nThe content to sign is composed by concatenating the id, timestamp and raw payload, separated by the full-stop character (.). In code, it will look something like:\n\nCopy\n\nCopied\n\n```javascript\nsigned_content = `${webhook_id}.${webhook_timestamp}.${raw_request_body}`\n```\n\nThe signature is sensitive to any changes, so even a small change in the body will cause the signature to be completely different. This means that you should not change the body in any way before verifying.\n\nBrex uses an HMAC with SHA-256 to sign its webhooks and you'll need to make a request to the `GET /v1/webhooks/secrets` endpoint to get the signing secret(s). During key rotation, this endpoint will return 2 keys, both the new key, and the key that will be revoked soon. Your application should check against all of the keys to validate webhook payload and if the validation passes for any of the keys, the webhook payload is valid.\n\nTo calculate the computed signature, HMAC the `signed_content` with a base64 decoded version of the secret. For example:\n\nCopy\n\nCopied\n\n```javascript\nconst secret_string = \"MCDBG16t42aV0Esn2sHyv1kRaip1LPEC\";\nconst signed_content = `${webhook_id}.${webhook_timestamp}.${raw_request_body}`\nconst base64DecodedSecret = Buffer.from(secret_string, 'base64');\nconst hmac = crypto.createHmac('sha256', base64DecodedSecret);\nconst computed_signature = hmac.update(signed_content).digest();\n```\n\nThis generated signature should match one of the ones sent in the `Webhook-Signature` header.\n\nThe `Webhook-Signature` header is composed of a list of space delimited signatures and their corresponding version identifiers. The signature list is most commonly of length one. Though there could be any number of signatures. For example:\n\nCopy\n\nCopied\n\n```text\nv1,g0hM9SsE+OTPJTGt/tmIKtSyZlE3uFJELVlNIOLJ1OE= v1,bm9ldHUjKzFob2VudXRob2VodWUzMjRvdWVvdW9ldQo= v2,MzJsNDk4MzI0K2VvdSMjMTEjQEBAQDEyMzMzMzEyMwo=\n```\n\nMake sure to remove the version prefix and delimiter (e.g. v1,) before verifying the signature.\n\nPlease note that to compare the signatures it's recommended to use a constant-time comparison method in order to prevent timing attacks.\n\nTo check that your implementation is correct (except for timestamp verification), you can test against this sample data which is verified:\n\nCopy\n\nCopied\n\n```text\npayload = '{\"event_type\": \"TRANSFER_PROCESSED\", \"transfer_id\": \"dptx_ckyypz30n000101kgzgnrtqlf\", \"company_id\": \"cuacc_ckqckhadg000601r95ox48c2s\"}'\nsecret = \"4j7OxQ4wlv1GmkZ9qLjoFjEFXjpzvHkr\"\nwebhook_id = \"msg_24Ky2257Hzd0tgc5bWs8TwK9Kod\"\nwebhook_timestamp = \"1643393361\"\nwebhook_signature = \"v1,6mFFi/Bg0gw1Yz2KJwZSVq6Bh+XzllS7JVltAlZ8yCU= v1,9dEEi/Bg0gw1Yz2KJwZSVq6Bh+XzllS7JVltAlZ8yDY=\"\n```\n\n#### [verify timestamp permalink](https://developer.brex.com/docs/webhooks/\\#verify-timestamp)     Verify timestamp\n\nAs mentioned above, Brex also sends the timestamp of the attempt in the `Webhook-Timestamp` header. You should compare this timestamp against your system timestamp and make sure it's within your tolerance in order to prevent timestamp attacks.\n\n* * *\n\n## [for partners using the right access token permalink](https://developer.brex.com/docs/webhooks/\\#for-partners-using-the-right-access-token)     For partners: Using the right access token\n\nFor partners, in order to perform your business logic, you will likely need to take the payload of the webhook and make additional calls to the Brex API. In order to do so, if you have multiple clients, you should maintain a mapping of `company_id` to `access_token` as `company_id` will be passed along webhook payloads that are associated with a single copmany. The [companies endpoint in the Team API](https://developer.brex.com/openapi/team_api/#tag/Companies) can help you build this mapping by giving you the reverse association of `company_id` from `access_token`.\n\n## [code samples permalink](https://developer.brex.com/docs/webhooks/\\#code-samples)     Code samples\n\n### [verifying signature nodejs example permalink](https://developer.brex.com/docs/webhooks/\\#verifying-signature-nodejs-example)     Verifying signature (NodeJS Example)\n\nCopy\n\nCopied\n\n```javascript\nconst https = require(\"https\");\nconst crypto = require(\"crypto\");\n\nfunction verifySignature(request) {\n  // grab the headers\n  const webhook_id = request.get(\"Webhook-Id\");\n  const webhook_signature = request.get(\"Webhook-Signature\");\n  const webhook_timestamp = request.get(\"Webhook-Timestamp\");\n  const body = request.body;\n\n  verifyTimestamp(webhook_timestamp);\n\n  const signed_content = `${webhook_id}.${webhook_timestamp}.${body}`;\n\n  // Get signing secrets from Brex API\n  const options = {\n    hostname: \"platform.brexapis.com\",\n    path: \"/v1/webhooks/secrets\",\n    method: \"GET\"\n  };\n\n  return https.request(options, resp => {\n    // Get array of secrets\n    const secrets = resp.map(secretObj => secretObj.secret);\n\n    // Split the signature string by the space delimiter, remove version and comma, map to array\n    const passed_signatures = webhook_signature.split(\" \").map(sigString => sigString.split(\",\")[1]);\n\n    // iterate over each secret (usually there is only one, but there may be two during key rotation)\n    // if any match our signed signature, we've verified the payload\n    return secrets.some(secret => {\n\n      // Compute the signature\n      const base64DecodedSecret = Buffer.from(secret, 'base64');\n      const hmac = crypto.createHmac('sha256', base64DecodedSecret);\n      const computed_signature = hmac.update(signed_content).digest();\n\n      // see if any of the signatures from the payload match our computed signature\n      // using a timing safe comparison\n      return passed_signatures.some(passed_signature => {\n        const decodedPassedSignature = Buffer.from(passed_signature, 'base64');\n        return crypto.timingSafeEqual(computed_signature, decodedPassedSignature);\n      });\n    });\n  });\n\n});\n\nconst WEBHOOK_TOLERANCE_IN_SECONDS = 60;\nfunction verifyTimestamp(timestampString) {\n  const now = Math.floor(Date.now() / 1000);\n  const timestamp = parseInt(timestampString, 10);\n  if (isNaN(timestamp)) {\n    throw new Error(\"Invalid Signature Headers\");\n  }\n  if (now - timestamp > WEBHOOK_TOLERANCE_IN_SECONDS) {\n    throw new Error(\"Message timestamp too old\");\n  }\n  if (timestamp > now + WEBHOOK_TOLERANCE_IN_SECONDS) {\n    throw new Error(\"Message timestamp too new\");\n  }\n  return;\n}\n```\n\n### [webhook endpoint processing a failed transfer permalink](https://developer.brex.com/docs/webhooks/\\#webhook-endpoint-processing-a-failed-transfer)     Webhook endpoint processing a failed transfer\n\nCopy\n\nCopied\n\n```javascript\nfunction webhookProcessingEndpoint(request) {\n  verifySignature(request).then(isVerified => {\n    if (!isVerified) {\n      throw new Error(\"Webhook Verification Failed\");\n    }\n\n    const payload = request.payload;\n    const eventType = payload.event_type;\n    switch (eventType) {\n      case \"TRANSFER_FAILED\":\n        const {transfer_id, company_id} = payload;\n        // This logic can use the Transactions or Payments API to\n        // get more info about the transfer/company by id.\n        // Partners will need to map the company_id to the\n        // appropriate `access_token`\n        myAppsBusinessLogic(transfer_id, company_id);\n      default:\n        throw new Error(\"Unknown event type\");\n    }\n  });\n}\n```\n\n## [ip whitelisting permalink](https://developer.brex.com/docs/webhooks/\\#ip-whitelisting)     IP whitelisting\n\nIP whitelisting allows you to restrict network access to specific IP addresses to ensure traffic from Brex is not compromised. Webhook events from Brex will use the following IP addresses. You can add these IP addresses to your application/firewall allowlist. Please add the full IP address list to ensure good coverage.\n\nCopy\n\nCopied\n\n```text\n44.228.126.217\n50.112.21.217\n52.24.126.164\n54.148.139.208\n2600:1f24:64:8000::/52\n```\n\n[Next to **Changelog**](https://developer.brex.com/docs/changelog/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/webhooks/",
      "title": "Webhooks",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Webhooks",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Webhooks",
      "scrapeId": "b815db92-d9bd-4f73-b44e-c51a9ebf1431",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/webhooks/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Webhooks for Brex APIs",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Webhooks for Brex APIs",
      "twitter:title": "Webhooks",
      "og:description": "Webhooks for Brex APIs",
      "twitter:description": "Webhooks for Brex APIs"
    }
  },
  {
    "markdown": "## [idempotency permalink](https://developer.brex.com/docs/idempotency/\\#idempotency)     Idempotency\n\nA request method is considered [idempotent](https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2) if the intended effect of multiple identical requests with that method is the effect of a single request.\n\nThe Brex API supports idempotency using an `Idempotency-Key` header to protect against duplicate operations. For most endpoints, the header is optional but we highly recommend that you set one. For endpoints where erroneous duplicate processing would be especially bad, such as [Create transfer](https://developer.brex.com/openapi/payments_api/#operation/createTransferPost) and [Create card](https://developer.brex.com/openapi/team_api/#operation/createCard), we require an idempotency key.\n\n### [generate and store idempotency keys permalink](https://developer.brex.com/docs/idempotency/\\#generate-and-store-idempotency-keys)     Generate and store idempotency keys\n\nYour application must not provide identical idempotency keys for different requests. We suggest using random strings with sufficient entropy to avoid collisions like [V4 UUIDs](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)).\n\nYour application should store these keys so that semantically identical requests are sent with the same idempotency keys.\n\n### [example permalink](https://developer.brex.com/docs/idempotency/\\#example)     Example\n\nHere’s an example of why idempotency keys are important. Imagine the following sequence of events:\n\n1. Your application sends a request to create a $1,000 wire transfer.\n\n2. Brex receives and processes the request.\n\n3. Due to high network congestion, before Brex responds to your application, the request times out.\n\n4. Believing the initial request failed, your application retries the request later.\n\n\nIf your application’s request included the same idempotency key for both requests, Brex will identify the second request as a duplicate and ignore it. However, if your application had omitted the idempotency key, or provided two different idempotency keys, Brex would process the second request, creating a $1,000 wire transfer which you did not intend to initiate.\n\n### [other notes permalink](https://developer.brex.com/docs/idempotency/\\#other-notes)     Other notes\n\n- All\n`POST`\nand\n`PUT`\nrequests accept idempotency keys.\n\n- Sending idempotency keys in\n`GET`\nand\n`DELETE`\nrequests has no effect and should be avoided–these requests are idempotent by definition.\n\n- Some requests may have additional idempotency due to the product behavior. For example, creating another user with the same email would be idempotent but return an error message.\n\n\n[Next to **Handling errors**](https://developer.brex.com/docs/error_codes/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/idempotency/",
      "title": "Idempotency",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Idempotency",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Idempotency",
      "scrapeId": "5945bfeb-b809-48e3-ba2e-724f79716990",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/idempotency/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Idempotency support for the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Idempotency support for the Brex API",
      "twitter:title": "Idempotency",
      "og:description": "Idempotency support for the Brex API",
      "twitter:description": "Idempotency support for the Brex API"
    }
  },
  {
    "markdown": "## [versioning permalink](https://developer.brex.com/docs/versioning/\\#versioning)     Versioning\n\nBreaking changes can be disruptive and we take versioning very seriously. If we require sunsetting a legacy endpoint, we'll notify you with sufficient lead time to migrate. We recommend implementing against the latest endpoints documented in the Brex API.\n\n### [breaking changes permalink](https://developer.brex.com/docs/versioning/\\#breaking-changes)     Breaking changes\n\nWe don't consider the following types of changes as breaking changes, so please don't be worried when you see them:\n\n- New endpoints\n\n- New read-only or optional fields\n\n- Endpoints or fields marked as deprecated\n\n- New enum constants\n\n\n**Note:** Your code should be able to handle new types of responses. For example, please ensure that you design your code to handle unknown enum types and new fields in responses.\n\n[Next to **Webhooks**](https://developer.brex.com/docs/webhooks/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/versioning/",
      "title": "Versioning",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Versioning",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Versioning",
      "scrapeId": "c6f8007b-a339-4ae7-9464-529bd8a2e294",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/versioning/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Versioning for the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Versioning for the Brex API",
      "twitter:title": "Versioning",
      "og:description": "Versioning for the Brex API",
      "twitter:description": "Versioning for the Brex API"
    }
  },
  {
    "markdown": "## [pagination permalink](https://developer.brex.com/docs/pagination/\\#pagination)     Pagination\n\nAll the \"list\" API endpoints for bulk fetches support pagination. These endpoints share a common structure, taking 2 parameters:\n\n- `limit`\n: Determines the number of items to be returned in each call. The default value is 100 when the parameter is not set. It can be set to a number up to 1000. When it is set to a value greater than 1000, a 400 Bad Request error will be returned.\n\n- `cursor`\n: The starting point for the set of items to be returned in chronological order. If not set, the call will return the first set of items.\n\n\nThe response will contain an array of items and a `next_cursor`, which can be passed back in as cursor to fetch the next set of items. The `next_cursor` is `nil` once the end of the set is reached.\n\nCopy\n\nCopied\n\n```json\n\"next_cursor\": \"string\",\n\"items\": [ ]\n```\n\n## [filtering permalink](https://developer.brex.com/docs/pagination/\\#filtering)     Filtering\n\nSome \"list\" endpoints will also let you filter by a specific value. For example, you can filter cards by `user_id`, users by `email`, and locations and departments by `name`.\n\n[Next to **Rate Limits**](https://developer.brex.com/docs/rate_limits/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/pagination/",
      "title": "Pagination",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Pagination",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Pagination",
      "scrapeId": "93fcb101-ad1d-4113-97cf-2a01512bf38b",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/pagination/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Pagination support for the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Pagination support for the Brex API",
      "twitter:title": "Pagination",
      "og:description": "Pagination support for the Brex API",
      "twitter:description": "Pagination support for the Brex API"
    }
  },
  {
    "markdown": "## [partner authentication permalink](https://developer.brex.com/docs/partner_authentication/\\#partner-authentication)     Partner authentication\n\n> **Note**: This section is only for Brex developer partners. If you are a Brex client–i.e., you have your own Brex account–looking to authenticate to our APIs, refer to the [authentication](https://developer.brex.com/docs/authentication) page to get started.\n\nThe Brex API is fully compliant with OpenID Connect, an extension on top of OAuth 2.0. For more details on the OpenID Connect protocol, please see [the spec](https://openid.net/specs/openid-connect-core-1_0.html). The well-known configuration can be found at the following URLs:\n\n**Production:** [https://accounts-api.brex.com/oauth2/default/.well-known/openid-configuration](https://accounts-api.brex.com/oauth2/default/.well-known/openid-configuration)\n\n**Staging:** [https://accounts-api.staging.brexapps.com/oauth2/default/.well-known/openid-configuration](https://accounts-api.staging.brexapps.com/oauth2/default/.well-known/openid-configuration)\n\n## [api servers permalink](https://developer.brex.com/docs/partner_authentication/\\#api-servers)     API servers\n\n**Production:** [https://platform.brexapis.com](https://platform.brexapis.com/)\n\n**Staging:** [https://platform.staging.brexapps.com](https://platform.staging.brexapps.com/)\n\n> **Note**: There are no availability guarantees in staging–data stored in staging environments may be purged at any time. Use staging for point-in-time testing only.\n\n## [scopes permalink](https://developer.brex.com/docs/partner_authentication/\\#scopes)     Scopes\n\n`openid`: Required to make an OpenID Connect request.\n\n`offline_access`: Required to obtain an OAuth 2.0 Refresh Token.\n\nThe [scopes](https://developer.brex.com/docs/roles_permissions_scopes/#scopes) page describes how scopes work in the Brex API and the scopes required for each API.\n\n## [auth server permalink](https://developer.brex.com/docs/partner_authentication/\\#auth-server)     Auth server\n\n> **Note**: As of November 17, 2022, we have enabled a new OAuth2 base URL. Partners who have implemented authentication flow against the former base URL ( [https://accounts.brex.com](https://accounts.brex.com/)) should continue using it and we will work with each partner to ensure a smooth migration to the new base URL.\n\nThe base URL for the requests is:\n\n**Production:** `https://accounts-api.brex.com/oauth2/default`\n\n**Staging:** `https://accounts-api.staging.brexapps.com/oauth2/default`\n\nThis may change in the future without notice. Always use the openid-configuration as the source of truth for the base URL.\n\n## [authorization methods permalink](https://developer.brex.com/docs/partner_authentication/\\#authorization-methods)     Authorization methods\n\nBrex currently supports 2 different authorization grant types:\n\n- If you are using the onboarding API, you will generate a Client Credentials Grant as there is no existing Brex client involved.\n\n- For all other APIs, you will implement the Authorization Code Grant, which implements a web-based redirection flow to request permission from the Brex client to access their account. Only Brex clients with the proper roles may grant permission. Please see the\n[User Roles & Permissions](https://developer.brex.com/docs/roles_permissions_scopes)\npage for more details.\n\n\n## [authentication implementation permalink](https://developer.brex.com/docs/partner_authentication/\\#authentication-implementation)     Authentication implementation\n\nTo implement authentication, we highly recommend using [one of the existing OAuth 2.0 SDKs](https://oauth.net/code/) if available for your language. These SDKs handle the various intracies of the OAuth 2.0 spec and make it much easier to plug and play your credentials to get started.\n\nPlease [contact our developer support team](https://developer.brex.com/docs/support/) to be issued a client ID and client secret for partner authentication.\n\n### [forcing oauth login permalink](https://developer.brex.com/docs/partner_authentication/\\#forcing-oauth-login)     Forcing OAuth login\n\nIf users of your application may have multiple Brex logins (for example, if users of your app are servicers like accountants or bookkeepers) you may wish to force the user to login to Brex every time they use your app. If desired, you can accomplish this by appending the `prompt=login` to the callback URL. See [3.1.2.1. Authentication Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest) in the OpenID Connect spec for more details.\n\n### [implementing your own client permalink](https://developer.brex.com/docs/partner_authentication/\\#implementing-your-own-client)     Implementing your own client\n\nIf you need to implement your own client, we recommend starting with the developer guides from [Okta](https://developer.okta.com/docs/guides/) and reading below for more details. The scopes for your client will be provided to you.\n\nAuthorization Code Grant\n\n\n### [1 request authorization code permalink](https://developer.brex.com/docs/partner_authentication/\\#1-request-authorization-code)     1\\. Request authorization code\n\nThis is a redirection-based flow, which means that the application must be capable of interacting with the user-agent (i.e. the Brex client’s web browser) and receiving API authorization codes that are routed through the user-agent.\n\nCopy\n\nCopied\n\n```text\nhttps://accounts-api.brex.com/oauth2/default/v1/authorize?client_id=<CLIENT_ID>&response_type=code&redirect_uri=<REDIRECT_URI>&scope=<SCOPES>&state=<STATE>\n```\n\nParameters:\n\n- `client_id=<CLIENT_ID>`\n: The client id provided by Brex.\n\n- `response_type=code`\n: Specifies that your application is requesting an authorization code grant.\n\n- [`redirect_uri=<REDIRECT_URI>`](https://developer.brex.com/docs/partner_authentication/#redirect-uris)\n: Where the service redirects the user-agent after an authorization code is granted. Must match exactly one of the addresses that was provided to Brex when the credentials were set up.\n\n- `scope=<SCOPES>`\n: Scopes requested, separated by whitespaces.\n\n- `state=<STATE>`\n: A required parameter that must be longer than 8 characters. For more details about\n`state`\nparameter, please check\n[https://tools.ietf.org/html/rfc6749#section-10.12](https://tools.ietf.org/html/rfc6749#section-10.12)\n.\n\n- [OAuth PKCE flow](https://oauth.net/2/pkce/)\n: Also supported, but not required.\n\n\n### [2 the brex client authorizes the application permalink](https://developer.brex.com/docs/partner_authentication/\\#2-the-brex-client-authorizes-the-application)     2\\. The Brex client authorizes the application\n\nWhen the browser link is opened, the Brex client will be prompted to sign in to authenticate their identity. They will then be prompted to authorize or deny your application's access to their account. They may accept 0 to all of the requested scopes which your application will then have access to. If they cancel consent, you will not have any scopes granted.\n\nIf the Brex client authorizes the request, we'll redirect the user-agent to your application's redirect URI, along with an authorization code. The redirect will look like this:\n\nCopy\n\nCopied\n\n```text\n<REDIRECT_URI>?code=<AUTHORIZATION_CODE>&scope=<SCOPES>&state=<STATE>\n```\n\nParameters:\n\n- `code=<AUTHORIZATION_CODE>`\n: The authorization code that can be used to request an access token.\n\n- `scope=<SCOPES>`\n: Scopes that were granted by the Brex client and can be a subset of what was requested.\n\n- `state=<STATE>`\n: For security reasons, you should always confirm that the returned state matches the value you provided in the request.\n\n\n### [3 request an access token permalink](https://developer.brex.com/docs/partner_authentication/\\#3-request-an-access-token)     3\\. Request an access token\n\nTo request an access token from the API, pass the authorization code along with authentication details to the API token endpoint. Here is an cURL example request:\n\nCopy\n\nCopied\n\n```bash\ncurl '{staging or production base auth URL}/v1/token' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'grant_type=authorization_code' \\\n--data-urlencode 'code={AUTHORIZATION_CODE}' \\\n--data-urlencode 'redirect_uri={REDIRECT_URI}' \\\n--data-urlencode 'client_id={CLIENT_ID}' \\\n--data-urlencode 'client_secret={CLIENT_SECRET}'\n```\n\nResponse body:\n\nCopy\n\nCopied\n\n```text\naccess_token: \"<ACCESS_TOKEN>\"\nrefresh_token: \"<REFRESH_TOKEN>\"\ntoken_type: \"bearer\"\n```\n\nThe access token returned expires in 3600 seconds (1 hour) and you will need to get a new one (see step 5) every time after it expires. Getting a new access token does not require the user to re-authorize the request.\n\n### [4 using an access token permalink](https://developer.brex.com/docs/partner_authentication/\\#4-using-an-access-token)     4\\. Using an access token\n\nAdd your `<ACCESS_TOKEN>` as a bearer token into the request header of any API calls you are making on behalf of the customer.\n\nRequest header:\n\nCopy\n\nCopied\n\n```text\nAuthorization: Bearer <ACCESS_TOKEN>\n```\n\n### [5 getting a new access token and refresh token permalink](https://developer.brex.com/docs/partner_authentication/\\#5-getting-a-new-access-token-and-refresh-token)     5\\. Getting a new access token and refresh token\n\nTo obtain a new access token, pass in the `<REFRESH_TOKEN>` previously obtained by the token endpoint, and set `grant_type=refresh_token`.\n\nThe response will contain a new `<ACCESS_TOKEN>` as well as a new `REFRESH_TOKEN`.\n\nRefresh tokens expire every 90 days so they should be exchanged for a new one before then. Failure to do so will require the user to re-authenticate.\n\nClient Credentials Grant\n\n\n### [1 request client credentials permalink](https://developer.brex.com/docs/partner_authentication/\\#1-request-client-credentials)     1\\. Request client credentials\n\nRequest an access token using `grant_type=client_credentials` and your Brex provided credentials from the token endpoint.\n\nScopes are defined as a space delimited list such as: `cards cards.readonly`. Make sure to request the relevant [scopes](https://developer.brex.com/docs/roles_permissions_scopes) in the access token request to use the appropriate APIs.\n\nAn example cURL request:\n\nCopy\n\nCopied\n\n```bash\ncurl '{staging or production base auth URL}/v1/token' \\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\n--data-urlencode 'grant_type=client_credentials' \\\n--data-urlencode 'client_id={CLIENT_ID}' \\\n--data-urlencode 'client_secret={CLIENT_SECRET}' \\\n--data-urlencode 'scope={SCOPES}'\n```\n\nAn example response body:\n\nCopy\n\nCopied\n\n```json\n{\n  \"access_token\": \"<ACCESS_TOKEN>\",\n  \"expires_in\": 3600,\n  \"scope\": \"<SCOPES>\",\n  \"token_type\": \"Bearer\"\n}\n```\n\n### [2 using an access token permalink](https://developer.brex.com/docs/partner_authentication/\\#2-using-an-access-token)     2\\. Using an access token\n\nAdd your `<ACCESS_TOKEN>` as a bearer token into the request header of any API calls you are making on behalf of the customer.\n\nRequest header:\n\nCopy\n\nCopied\n\n```text\nAuthorization: Bearer <ACCESS_TOKEN>\n```\n\nThe access token returned expires in 3600 seconds (1 hour). If you don't prefer to persistently store and rotate tokens, you can simply request a new token when it expires.\n\n## [revoking refresh tokens permalink](https://developer.brex.com/docs/partner_authentication/\\#revoking-refresh-tokens)     Revoking refresh tokens\n\nRefresh tokens expire every 90 days. However, for general best security practices, or in the event of a compromise, you may want to revoke your refresh token. In order to do so, hit the refresh token revocation endpoint:\n\nCopy\n\nCopied\n\n```json\nPOST \"{staging or production base URL}/v1/revoke\"\n\n// Request Body\n{\n  \"token\": \"<refresh-token-to-revoke>\",\n  \"client_id\": \"OAuth2 client id used to get the refresh token\",\n  \"client_secret\": \"OAuth2 client secret used to get the refresh token\"\n}\n```\n\n## [redirect uris permalink](https://developer.brex.com/docs/partner_authentication/\\#redirect-uris)     Redirect URIs\n\nOAuth 2.0 depends on [Redirect URIs](https://www.oauth.com/oauth2-servers/redirect-uris/) for the Authorization Code Grant. Partners must supply one or more redirect URIs that Brex will use to post the authorization code. (See [Authentication implementation](https://developer.brex.com/docs/partner_authentication/#authentication-implementation) \\> Authorization Code Grant > 2. The Brex client authorizes the application)\n\n[Next to **Roles, permissions, and scopes**](https://developer.brex.com/docs/roles_permissions_scopes/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/partner_authentication/",
      "title": "Partner authentication",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Partner authentication",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Partner authentication",
      "scrapeId": "f44a8cf0-bbea-428d-acc1-2e21f0a5f1ed",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/partner_authentication/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Partner authentication for the Brex API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Partner authentication for the Brex API",
      "twitter:title": "Partner authentication",
      "og:description": "Partner authentication for the Brex API",
      "twitter:description": "Partner authentication for the Brex API"
    }
  },
  {
    "markdown": "Copy\n\nCopied\n\n```text\n44.228.126.217\n50.112.21.217\n52.24.126.164\n54.148.139.208\n2600:1f24:64:8000::/52\n```",
    "metadata": {
      "url": "https://developer.brex.com/static/webhook_ips/",
      "title": "Brex Developer API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Brex Developer API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Brex Developer API",
      "scrapeId": "99747581-e28c-4b0a-83a8-81c3223696d3",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/static/webhook_ips/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Brex Developer API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [payments api examples permalink](https://developer.brex.com/docs/payments_examples/\\#payments-api-examples)     Payments API examples\n\n### [create a new vendor with ach details and initiate a payment permalink](https://developer.brex.com/docs/payments_examples/\\#create-a-new-vendor-with-ach-details-and-initiate-a-payment)     Create a new vendor with ACH details and initiate a payment.\n\n1. Create a new vendor.\n\n\nCopy\n\nCopied\n\n```json\nPOST \"https://platform.brexapis.com/v1/vendors\"\nRequires \"vendors\" scope\n\nREQUEST BODY\n{\n    \"company_name\": \"Schrute Farms\"\n    \"payment_accounts\": [\\\n      {\\\n          \"details\": {\\\n              \"type\": \"ACH\",\\\n              \"routing_number\": \"1234567\",\\\n              \"account_number\": \"3818193555\",\\\n              \"account_type\": \"CHECKING\",\\\n              \"account_class\": \"BUSINESS\"\\\n          }\\\n      }\\\n    ]\n}\n\nRESPONSE\n{\n    \"id\": \"pdcont_ckt6g23823883x0fek\",\n    \"company_name\": \"Schrute Farms\"\n    \"payment_accounts\": [\\\n        {\\\n            \"details\": {\\\n                \"type\": \"ACH\",\\\n                \"payment_instrument_id\": \"pdinstl_ckt6g2y2m001c0e54n4urkbh1\",\\\n                \"routing_number\": \"1234567\",\\\n                \"account_number\": \"3818193555\",\\\n                \"account_type\": \"CHECKING\",\\\n                \"account_class\": \"BUSINESS\"\\\n            }\\\n        }\\\n    ]\n}\n```\n\n2. Get your Brex Cash account ID.\n\n\nCopy\n\nCopied\n\n```json\nGET \"https://platform.brexapis.com/v2/accounts/cash\" // From Transactions API\nRequires \"accounts.cash.readonly\" scope\n\nRESPONSE\n\n{\n    \"items\": [\\\n        {\\\n            \"id\": \"dpacc_ckrqrb91z990d01h4yz3f1k0f\", // use in next call for originating_account id\\\n            \"description\": \"Primary Cash Account\",\\\n            \"status\": \"ACTIVE\",\\\n            \"account_number\": \"668210333973\",\\\n            \"routing_number\": \"211179322\",\\\n            \"current_balance\": {\\\n                \"amount\": 1133000,\\\n                \"currency\": \"USD\"\\\n            },\\\n            \"available_balance\": {\\\n                \"amount\": 623200,\\\n                \"currency\": \"USD\"\\\n            }\\\n        }\\\n    ]\n}\n```\n\n3. Initiate the ACH transfer.\n\n\nCopy\n\nCopied\n\n```json\nPOST \"https://platform.brexapis.com/v1/transfers\"\nRequires \"transfers\" scope\n\nREQUEST BODY\n{\n    \"amount\": {\n        \"amount\": 100000, // 100000 cents = $1000\n        \"currency\": \"USD\"\n    },\n    \"counterparty\": {\n        \"type\": \"VENDOR\",\n        \"payment_instrument_id\": \"pdinstl_ckt6g2y2m001c0e54n4urkbh1\", // From vendor creation response\n    },\n    \"description\": \"Never go to Schrute Farms again -Angela\",\n    \"external_memo\": \"Company outing\",\n    \"originating_account\": {\n        \"type\": \"BREX_CASH\",\n        \"id\": \"dpacc_ckrqrb91z990d01h4yz3f1k0f\", // Cash account ID\n    }\n}\n\nRESPONSE\n{\n    \"id\": \"dptx_ckt6h1lwz0cx401htea89ez4g\",\n    \"counterparty\": {\n        \"type\": \"VENDOR\",\n        \"payment_instrument_id\": \"pdinstl_ckt6g2y2m001c0e54n4urkbh1\",\n        \"id\": \"pdcont_ckt6g23823883x0fek\",\n    },\n    \"description\": \"Never go to Schrute Farms again -Angela\",\n    \"payment_type\": \"ACH\",\n    \"amount\": {\n        \"amount\": 1000,\n        \"currency\": \"USD\"\n    },\n    \"originating_account\": {\n        \"type\": \"BREX_CASH\",\n        \"id\": \"dpacc_ckrqrb91z990d01h4yz3f1k0f\", // Cash account ID\n    }\n    \"status\": \"SCHEDULED\",\n    \"estimated_delivery_date\": \"2021-09-09\",\n    \"creator_user_id\": \"cuuser_ckrqmr4oq123o01pyzzf609yf\"\n}\n```\n\n[Next to **Transactions API examples**](https://developer.brex.com/docs/transactions_examples/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/payments_examples/",
      "title": "Payments API examples",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Payments API examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Payments API examples",
      "scrapeId": "cdad0fba-3e7d-43e5-8072-6955030ede51",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/payments_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Example uses of the payments API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Example uses of the payments API",
      "twitter:title": "Payments API examples",
      "og:description": "Example uses of the payments API",
      "twitter:description": "Example uses of the payments API"
    }
  },
  {
    "markdown": "## [transactions api examples permalink](https://developer.brex.com/docs/transactions_examples/\\#transactions-api-examples)     Transactions API examples\n\n### [view 2 most recent card transactions permalink](https://developer.brex.com/docs/transactions_examples/\\#view-2-most-recent-card-transactions)     View 2 most recent card transactions.\n\nREQUEST\n\n- `GET`\n\"\n[https://platform.brexapis.com/v2/transactions/card/primary?limit=2](https://platform.brexapis.com/v2/transactions/card/primary?limit=2)\n\"\n\n- Requires\n`transactions.card.readonly`\nscope\n\n\nRESPONSE\n\nCopy\n\nCopied\n\n```json\n{\n    \"next_cursor\": \"eyJsaW1pdCI6Miwib2Zmc2V0IjoyfQ==\",\n    \"items\": [\\\n        {\\\n            \"id\": \"pste_ckuxu8f0j07jn0ddg6bjofzde\",\\\n            \"description\": \"Payment – Thank you!\",\\\n            \"amount\": {\\\n                \"amount\": -63600,\\\n                \"currency\": \"USD\"\\\n            },\\\n            \"posted_at_date\": \"2021-10-19\",\\\n            \"type\": \"COLLECTION\"\\\n        },\\\n        {\\\n            \"id\": \"pste_ckuwiblvv1tn101l3zvscxis8\",\\\n            \"card_id\": \"ncard_ckrz3n9b9013i01h5hgdyz7jh\",\\\n            \"description\": \"Chili's\",\\\n            \"amount\": {\\\n                \"amount\": 12900,\\\n                \"currency\": \"USD\"\\\n            },\\\n            \"posted_at_date\": \"2021-10-18\",\\\n            \"type\": \"PURCHASE\"\\\n        }\\\n    ]\n}\n```\n\n### [bulk fetch recent card transactions with pagination permalink](https://developer.brex.com/docs/transactions_examples/\\#bulk-fetch-recent-card-transactions-with-pagination)     Bulk fetch recent card transactions with pagination.\n\nTo bulk fetch card transactions, you will need to paginate through the results with the `cursor` parameter.\n\nFor example, let's say there are 200 transactions available. After making the first call to the endpoint, you will get details about the 100 transactions and there will also be a field called `next_cursor` in the response. To get the next 100 results in your second call to the endpoint, you will set the `cursor` parameter to the value returned in the `next_cursor` field from your first API call. You will continue this pattern to get all the available results.\n\nMore details about how pagination works in the Brex API are [documented here](https://developer.brex.com/docs/pagination).\n\nREQUEST\n\n- `GET`\n\"\n[https://platform.brexapis.com/v2/transactions/card/primary?limit=100&cursor=eyJsaW1pdCI6Miwib2Zmc2V0IjoyfQ==](https://platform.brexapis.com/v2/transactions/card/primary?limit=100&cursor=eyJsaW1pdCI6Miwib2Zmc2V0IjoyfQ==)\n\"\n\n- Requires\n`transactions.card.readonly`\nscope\n\n\nRESPONSE\n\nCopy\n\nCopied\n\n```json\n{\n    \"next_cursor\": \"ayKsaW2pdCI7Miwib4Zmc3V0IjdyfQ==\",\n    \"items\": [\\\n        {\\\n            \"id\": \"pste_ckuxu8f0j07jn0ddg6bjofzde\",\\\n            \"description\": \"Payment – Thank you!\",\\\n            \"amount\": {\\\n                \"amount\": -63600,\\\n                \"currency\": \"USD\"\\\n            },\\\n            \"posted_at_date\": \"2021-10-19\",\\\n            \"type\": \"COLLECTION\"\\\n        },\\\n        {\\\n            \"id\": \"pste_ckuwiblvv1tn101l3zvscxis8\",\\\n            \"card_id\": \"ncard_ckrz3n9b9013i01h5hgdyz7jh\",\\\n            \"description\": \"Chili's\",\\\n            \"amount\": {\\\n                \"amount\": 12900,\\\n                \"currency\": \"USD\"\\\n            },\\\n            \"posted_at_date\": \"2021-10-18\",\\\n            \"type\": \"PURCHASE\"\\\n        }\\\n    ]\n}\n```\n\n[Next to **Webhooks API examples**](https://developer.brex.com/docs/webhook_examples/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/transactions_examples/",
      "title": "Transactions API examples",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Transactions API examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Transactions API examples",
      "scrapeId": "d73d19f7-b87e-453c-8495-3ec616f62275",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/transactions_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Example uses of the transactions API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Example uses of the transactions API",
      "twitter:title": "Transactions API examples",
      "og:description": "Example uses of the transactions API",
      "twitter:description": "Example uses of the transactions API"
    }
  },
  {
    "markdown": "## [changelog permalink](https://developer.brex.com/docs/changelog/\\#changelog)     Changelog\n\nThis changelog tracks changes to the Brex API and is updated periodically. Updates to the API are on a rolling basis and not on any defined schedule.\n\n### [december 2024 permalink](https://developer.brex.com/docs/changelog/\\#december-2024)     December 2024\n\n- Team API: The\n[Get card number](https://developer.brex.com/openapi/team_api/#operation/getCardNumber)\nendpoint response object now includes the cardholder name (\n`holder_name`\n).\n\n- Expenses API: The\n[List expenses](https://developer.brex.com/openapi/expenses_api/#operation/listExpenses!in=query&path=updated_at_start&t=request)\nendpoint request now allows for filtering on the\n`updated_at`\ntimestamp of expenses.\n\n\n### [october 2024 permalink](https://developer.brex.com/docs/changelog/\\#october-2024)     October 2024\n\n- Payments API: New endpoints introduced to create incoming transfers, list bank connections, manage transfers, and manage vendor information.\n\n- Budgets API: Introduced new spend limit and budgets concepts as a new set of API endpoints (\n`v2`\n). The old\n[Spend Limits (v1)](https://developer.brex.com/openapi/budgets_api/#tag/Spend-Limits-(v1))\nAPI is considered deprecated.\n\n\n### [september 2024 permalink](https://developer.brex.com/docs/changelog/\\#september-2024)     September 2024\n\n- Team API: The\n[Get card](https://developer.brex.com/openapi/team_api/#operation/getCardById)\nendpoint response object now returns a (\n`has_been_transferred`\n) boolean for a given card.\n\n- Team API: The\n[Create card](https://developer.brex.com/openapi/team_api/#operation/createCard)\nendpoint response object now accepts an expense policy ID (\n`policy_id`\n) boolean for a given card.\n\n- Expenses API: The Expense object now returns an optional address (\n`has_been_transferred`\n), a payment posted date and a trip ID if relevant to the expense.\n\n\n### [july 2024 permalink](https://developer.brex.com/docs/changelog/\\#july-2024)     July 2024\n\n- Webhooks: Updated IP\n[whitelist](https://developer.brex.com/docs/webhooks/#ip-whitelisting)\n.\n\n\n### [february 2022 permalink](https://developer.brex.com/docs/changelog/\\#february-2022)     February 2022\n\n- Transactions API: The\n[List cash accounts](https://developer.brex.com/openapi/transactions_api/#operation/listAccounts)\nendpoint response object now includes a\n`primary`\nboolean field indicating whether the cash account is the primary cash account for the Brex account. Every Brex user must have one primary cash account.\n\n- All APIs: Added a new header for tracing with a generic name\n`X-Brex-Trace-Id`\n. Although the previous header\n`X-Datadog-Trace-Id`\nis still in use as of now, we recommend to start using\n`X-Brex-Trace-Id`\nas it is vendor-agnostic and will unlikely change overtime.\n\n- Payments API: Added\n`cancellation_reason`\ninto the Transfer response.\n\n\n### [january 2022 permalink](https://developer.brex.com/docs/changelog/\\#january-2022)     January 2022\n\n- Webhooks API: Added beta support for webhooks. View the\n[webhooks guide](https://developer.brex.com/docs/webhooks)\nfor how to get started and the\n[webhooks API reference](https://developer.brex.com/openapi/webhooks_api)\nfor supported events and how to use them.\n\n- Team API: Added a\n`monthly_available`\nobject to the responses for both the\n[`GET`](https://developer.brex.com/openapi/team_api/#operation/getUserLimit)\nand\n[`SET`](https://developer.brex.com/openapi/team_api/#operation/setUserLimit)\nmethods for user limits\n\n\n### [december 2021 permalink](https://developer.brex.com/docs/changelog/\\#december-2021)     December 2021\n\n- Payments API: Added the ability to do book transfers between Brex Cash accounts. See\n`counterparty`\n   -\\>\n`type`\n   -\\>\n`BOOK_TRANSFER`\nin the request body for the\n[Create Transfer](https://developer.brex.com/openapi/payments_api/#operation/createTransfer)\nendpoint\n\n\n### [november 2021 permalink](https://developer.brex.com/docs/changelog/\\#november-2021)     November 2021\n\n- Transactions API: Added endpoints to\n[read cash transactions](https://developer.brex.com/openapi/transactions_api/#operation/listCashTransactions)\nand\n[read primary card transactions](https://developer.brex.com/openapi/transactions_api/#operation/listPrimaryCardTransactions)\n\n### [october 2021 permalink](https://developer.brex.com/docs/changelog/\\#october-2021)     October 2021\n\n- Payments API: Added the ability to filter vendors by\n`name`\n(via encoded query param) for the\n[lists vendors](https://developer.brex.com/openapi/payments_api/#operation/listVendors!in=query&path=name&t=request)\nendpoint\n\n\n[Next to **Launch Checklist**](https://developer.brex.com/docs/checklist/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/changelog/",
      "title": "Changelog",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Changelog",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Changelog",
      "scrapeId": "cbae8b0f-0b07-474b-9e63-0c1a79405e92",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/changelog/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Changelog for Brex APIs",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Changelog for Brex APIs",
      "twitter:title": "Changelog",
      "og:description": "Changelog for Brex APIs",
      "twitter:description": "Changelog for Brex APIs"
    }
  },
  {
    "markdown": "# Webhooks API(0.1)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/e7a74664-29d8-4691-a073-3490dab30d7b)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nBrex uses webhooks to send real-time notifications when events happen in the accounts that you manage.\nUse webhook subscriptions to subscribe to different webhook events.\n\n# [tag/Webhook-Subscriptions](https://developer.brex.com/openapi/webhooks_api/\\#tag/Webhook-Subscriptions) Webhook Subscriptions\n\nManage webhook subscriptions.\n\n## [operation/listSubscription](https://developer.brex.com/openapi/webhooks_api/\\#operation/listSubscription) List Webhooks\n\nList the webhooks you have registered\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nlistSubscription 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nget/v1/webhooks\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/webhooks \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"url\": \"string\",\\\n\"event_types\": [\\\n\"REFERRAL_CREATED\"],\\\n\"status\": \"ACTIVE\"}]}`\n\n## [operation/createSubscription](https://developer.brex.com/openapi/webhooks_api/\\#operation/createSubscription) Register Webhook\n\nRegister an endpoint to start receiving selected webhook events\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| url<br>required | string |\n| event\\_types<br>required | Array of strings (WebhookEventType) <br>The Brex API sends webhooks for the events listed below.<br>For more details, see the [webhook guide](https://developer.brex.com/docs/webhooks/#webhook-event-catalog) and<br>[webhook events API reference](https://developer.brex.com/openapi/webhooks_api/#tag/Webhook-Events).<br>ItemsEnum:\"REFERRAL\\_CREATED\"\"REFERRAL\\_ACTIVATED\"\"REFERRAL\\_APPLICATION\\_STATUS\\_CHANGED\"\"TRANSFER\\_PROCESSED\"\"TRANSFER\\_FAILED\"\"EXPENSE\\_PAYMENT\\_UPDATED\"\"USER\\_UPDATED\" |\n\nResponses\n\n200\ncreateSubscription 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\npost/v1/webhooks\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"url\": \"string\",\n\"event_types\": [\\\n\"REFERRAL_CREATED\"]}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"url\": \"string\",\n\"event_types\": [\\\n\"REFERRAL_CREATED\"],\n\"status\": \"ACTIVE\"}`\n\n## [operation/listSecrets](https://developer.brex.com/openapi/webhooks_api/\\#operation/listSecrets) List Webhook Secrets\n\nThis endpoint returns a set of webhook signing secrets used to validate the webhook.\nUsually only one key will be returned in the response. After key rotation, this endpoint will return two keys:\nthe new key, and the key that will be revoked soon. There will also be two signatures in the 'Webhook-Signature' request header.\nYour application should use all keys available to validate the webhook request. If validation passes for any\nof the keys returned, the webhook payload is valid.\n\nSecurity**OAuth2**\n\nResponses\n\n200\nlistSecrets 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nget/v1/webhooks/secrets\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/webhooks/secrets \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`[\\\n{\\\n\"secret\": \"string\",\\\n\"status\": \"ACTIVE\"}]`\n\n## [operation/getSubscriptionById](https://developer.brex.com/openapi/webhooks_api/\\#operation/getSubscriptionById) Get Webhook\n\nGet details of a webhook\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetSubscriptionById 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nget/v1/webhooks/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/webhooks/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"url\": \"string\",\n\"event_types\": [\\\n\"REFERRAL_CREATED\"],\n\"status\": \"ACTIVE\"}`\n\n## [operation/updateSubscription](https://developer.brex.com/openapi/webhooks_api/\\#operation/updateSubscription) Update Webhook\n\nUpdate a webhook.\nYou can update the endpoint url, event types that the endpoint receives, or temporarily deactivate the webhook.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| url<br>required | string |\n| event\\_types<br>required | Array of strings (WebhookEventType) <br>ItemsEnum:\"REFERRAL\\_CREATED\"\"REFERRAL\\_ACTIVATED\"\"REFERRAL\\_APPLICATION\\_STATUS\\_CHANGED\"\"TRANSFER\\_PROCESSED\"\"TRANSFER\\_FAILED\"\"EXPENSE\\_PAYMENT\\_UPDATED\"\"USER\\_UPDATED\" |\n| status<br>required | string (UpdateWebhookSubscriptionStatus) <br>Enum:\"ACTIVE\"\"INACTIVE\" |\n\nResponses\n\n200\nupdateSubscription 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\nput/v1/webhooks/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"url\": \"string\",\n\"event_types\": [\\\n\"REFERRAL_CREATED\"],\n\"status\": \"ACTIVE\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"url\": \"string\",\n\"event_types\": [\\\n\"REFERRAL_CREATED\"],\n\"status\": \"ACTIVE\"}`\n\n## [operation/deleteSubscription](https://developer.brex.com/openapi/webhooks_api/\\#operation/deleteSubscription) Unregister Webhook\n\nUnregister a webhook if you want to stop receiving webhook events\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ndeleteSubscription 200 response\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n500\nInternal server error\n\ndelete/v1/webhooks/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X DELETE \\\n  'https://platform.brexapis.com/v1/webhooks/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\n# [tag/Webhook-Events](https://developer.brex.com/openapi/webhooks_api/\\#tag/Webhook-Events) Webhook Events\n\n## [operation/expensePaymentUpdatedEvents](https://developer.brex.com/openapi/webhooks_api/\\#operation/expensePaymentUpdatedEvents) Expense Payment EventsWebhook\n\nExpense Payment Events. Transaction activity for expenses made on Brex Card.\n\nAccount must be on Brex Empower to receive these events. Webhook subscription must be registered using a token from a user with Card Admin role.\n\nSecurity**OAuth2**\n\nRequest\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| event\\_type<br>required | string (WebhookEventType) <br>EXPENSE\\_PAYMENT\\_UPDATEDEXPENSE\\_PAYMENT\\_UPDATED |\n| expense\\_id<br>required | string<br>Unique ID associated with the expense. |\n| payment\\_status<br>required | string (ExpensePaymentStatus) <br>`PENDING`:The transaction is yet to be captured. It may be approved, yet to be approved, or yet to be declined.<br>`DECLINED`: The transaction was declined.<br>Enum:\"PENDING\"\"DECLINED\" |\n| payment\\_status\\_reason<br>required | string (ExpensePaymentStatusReason) <br>The reason for the payment's status.<br>Enum:\"OTHER\"\"APPROVED\"\"EXCEEDED\\_BUDGET\\_LIMIT\"\"BUDGET\\_EXPIRED\"\"NO\\_BUDGET\"\"BUDGET\\_NOT\\_YET\\_STARTED\"\"BUDGET\\_CATEGORY\\_RESTRICTION\"\"BUDGET\\_MERCHANT\\_RESTRICTION\"\"SUSPECTED\\_FRAUD\"\"EXCEEDED\\_GLOBAL\\_LIMIT\"\"EXCEEDED\\_USER\\_LIMIT\"\"EXCEEDED\\_CARD\\_LIMIT\"\"INVALID\\_EXPIRATION\\_DATE\"\"CARD\\_NOT\\_ACTIVE\"\"INVALID\\_CARD\\_CREDENTIALS\"\"INVALID\\_BILLING\\_ADDRESS\"\"CARD\\_SUSPENDED\"\"CARD\\_TERMINATED\"\"CARD\\_EXPIRED\"\"MCC\\_BLOCKED\"\"USER\\_SUSPENDED\"\"INVALID\\_PIN\"\"INVALID\\_CVV\"\"EXCEEDED\\_PIN\\_ATTEMPTS\"\"INSIDE\\_SANCTIONED\\_COUNTRY\"\"SOFT\\_EXPIRATION\"\"TRANSFERRED\\_CARD\\_NEW\\_MERCHANT\"\"EXCEEDED\\_ANCESTOR\\_BUDGET\\_LIMIT\"\"EXCEEDED\\_BUDGET\\_TRANSACTION\\_LIMIT\"\"TOS\\_BLOCKED\"\"COMPLIANCE\\_BLOCKED\" |\n| payment\\_type<br>required | string (ExpensePaymentType) <br>`PURCHASE`: A pending transaction for making a purchase.<br>`REFUND`: A pending transaction for a refund.<br>`WITHDRAWAL`: A pending transaction for a withdrawal.<br>`DECLINED`: A pending transaction that was declined and will not be completed.<br>Enum:\"PURCHASE\"\"REFUND\"\"WITHDRAWAL\"\"DECLINED\" |\n| company\\_id | string<br>This is the `id` returned in the [Get Company](https://developer.brex.com/openapi/team_api/#operation/getCompany) endpoint.<br>You can use the `company_id` to determine which access token to use when you get the details from our API endpoints. |\n| purchased\\_at | string<date-time><br>The time the purchase was made. |\n| original\\_amount | object or null<br>The original amount of the expense is the amount that the employee submitted or incurred for reimbursements or card spends. |\n| billing\\_amount | object or null<br>The billing amount of the expense is the amount that the entity is charged, on the entity's currency, for reimbursements or card spends. |\n| card\\_id | string<br>The ID of the card that is associated with the expense. |\n| merchant | object or null<br>The merchant associated with the expense. |\n| payment\\_authorization\\_code | string<br>The authorization code of the associated card expense. |\n| amount | object or null<br>Deprecated<br>Succeeded by the billing\\_amount field. |\n| payment\\_description | string<br>Deprecated<br>Succeeded by the merchant::raw\\_descriptor field. |\n\nResponses\n\n200\nReturn this code if the callback was received and processed successfully\n\nRequest samples\n\n- Payload\n\napplication/json\n\nEXPENSE\\_PAYMENT\\_UPDATEDEXPENSE\\_PAYMENT\\_UPDATED\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"event_type\": \"EXPENSE_PAYMENT_UPDATED\",\n\"expense_id\": \"string\",\n\"payment_status\": \"PENDING\",\n\"payment_status_reason\": \"OTHER\",\n\"payment_type\": \"PURCHASE\",\n\"company_id\": \"string\",\n\"purchased_at\": \"2019-08-24T14:15:22Z\",\n\"original_amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"billing_amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"card_id\": \"string\",\n\"merchant\": {\n\"raw_descriptor\": \"string\",\n\"mcc\": \"string\",\n\"country\": \"string\"},\n\"payment_authorization_code\": \"string\",\n\"amount\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"payment_description\": \"string\"}`\n\n## [operation/referralEvent](https://developer.brex.com/openapi/webhooks_api/\\#operation/referralEvent) Referral EventsWebhook\n\nReferral Events. Reference the [Onboarding API](https://developer.brex.com/openapi/onboarding_api/) for event details.\n\nSecurity**OAuth2**\n\nRequest\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| event\\_type<br>required | string (WebhookEventType) <br>REFERRAL\\_CREATEDREFERRAL\\_ACTIVATEDREFERRAL\\_APPLICATION\\_STATUS\\_CHANGEDREFERRAL\\_ACTIVATED |\n| referral\\_id<br>required | string |\n\nResponses\n\n200\nReturn this code if the callback was received and processed successfully\n\nRequest samples\n\n- Payload\n\napplication/json\n\nREFERRAL\\_ACTIVATEDREFERRAL\\_CREATEDREFERRAL\\_APPLICATION\\_STATUS\\_CHANGEDREFERRAL\\_ACTIVATED\n\nCopy\n\n`{\n\"event_type\": \"REFERRAL_ACTIVATED\",\n\"referral_id\": \"string\"}`\n\n## [operation/transferEvents](https://developer.brex.com/openapi/webhooks_api/\\#operation/transferEvents) Transfer EventsWebhook\n\nTransfer Events for both incoming and outgoing Brex Cash transactions. Reference the [Payments API](https://developer.brex.com/openapi/payments_api/) for event details.\n\nSecurity**OAuth2**\n\nRequest\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| event\\_type<br>required | string (WebhookEventType) <br>TRANSFER\\_PROCESSEDTRANSFER\\_FAILEDTRANSFER\\_FAILED |\n| transfer\\_id<br>required | string |\n| payment\\_type<br>required | string (PaymentType) <br>Only ACH, DOMESTIC\\_WIRE, CHEQUE, INTERNATIONAL\\_WIRE and BOOK\\_TRANSFER details can be retrieved from the Payments API.<br>Enum:\"ACH\"\"DOMESTIC\\_WIRE\"\"CHEQUE\"\"INTERNATIONAL\\_WIRE\"\"BOOK\\_TRANSFER\"\"ACH\\_RETURN\"\"WIRE\\_RETURN\"\"CHEQUE\\_RETURN\" |\n| return\\_for\\_id | string or null<br>The original transaction ID that is returned when the payment type is ACH\\_RETURN, WIRE\\_RETURN and CHEQUE\\_RETURN. |\n| company\\_id | string<br>This is the `id` returned in the [Get Company](https://developer.brex.com/openapi/team_api/#operation/getCompany) endpoint.<br>You can use the `company_id` to determine which access token to use when you get the details from our API endpoints. |\n\nResponses\n\n200\nReturn this code if the callback was received and processed successfully\n\nRequest samples\n\n- Payload\n\napplication/json\n\nTRANSFER\\_FAILEDTRANSFER\\_PROCESSEDTRANSFER\\_FAILED\n\nCopy\n\n`{\n\"event_type\": \"TRANSFER_FAILED\",\n\"transfer_id\": \"string\",\n\"payment_type\": \"ACH\",\n\"return_for_id\": \"string\",\n\"company_id\": \"string\"}`\n\n## [operation/userEvent](https://developer.brex.com/openapi/webhooks_api/\\#operation/userEvent) User Updated EventsWebhook\n\nUser Updated Events. All accounts can receive user status update while only accounts on Brex Empower can receive non-user-status updates.\n\nSecurity**OAuth2**\n\nRequest\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| event\\_type<br>required | string (WebhookEventType) <br>USER\\_UPDATEDUSER\\_UPDATED |\n| user\\_id<br>required | string |\n| company\\_id<br>required | string |\n| updated\\_attributes<br>required | Array of strings (UserAttributes) <br>ItemsEnum:\"STATUS\"\"MANAGER\\_ID\"\"DEPARTMENT\\_ID\"\"LOCATION\\_ID\" |\n\nResponses\n\n200\nReturn this code if the callback was received and processed successfully\n\nRequest samples\n\n- Payload\n\napplication/json\n\nUSER\\_UPDATEDUSER\\_UPDATED\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"event_type\": \"USER_UPDATED\",\n\"user_id\": \"string\",\n\"company_id\": \"string\",\n\"updated_attributes\": [\\\n\"STATUS\"]}`\n\n[Next to **Budgets API**](https://developer.brex.com/openapi/budgets_api/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/webhooks_api/",
      "title": "Webhooks API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Webhooks API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Webhooks API",
      "scrapeId": "f7db9c45-4120-423c-afab-64045e066eb9",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/webhooks_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Webhooks API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "# [community supported libraries permalink](https://developer.brex.com/docs/community_supported_libraries/\\#community-supported-libraries)     Community Supported Libraries\n\nThe following is a listing of community-supported Brex API libraries. These libraries are not officially supported by Brex, so we can't speak to their accuracy or provide support for them. However, they're open source and may be helpful to you as you integrate with Brex APIs.\n\n- [TypeScript client library for Brex API developed by Maroo](https://github.com/Maroo-us/brex-api)\n- [TypeScript client library for Brex API developed by Slingshot](https://github.com/slingshot/brex)\n- [Example TypeScript and React web app with calls to Brex API](https://github.com/squamuglia/brex-example-app)\n\nWorking on your own library? Contact [support](https://developer.brex.com/docs/support) and let us know!\n\n[Next to **Contact Us**](https://developer.brex.com/docs/support/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/community_supported_libraries/",
      "title": "Community Supported Libraries",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Community Supported Libraries",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Community Supported Libraries",
      "scrapeId": "dcf23294-0258-443c-b6ea-0eeeed0109d6",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/community_supported_libraries/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Community Supported Libraries",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Community Supported Libraries",
      "twitter:title": "Community Supported Libraries",
      "og:description": "Community Supported Libraries",
      "twitter:description": "Community Supported Libraries"
    }
  },
  {
    "markdown": "## [webhooks api examples permalink](https://developer.brex.com/docs/webhook_examples/\\#webhooks-api-examples)     Webhooks API Examples\n\n### [subscribe to receive pending transaction events for expenses made on brex card permalink](https://developer.brex.com/docs/webhook_examples/\\#subscribe-to-receive-pending-transaction-events-for-expenses-made-on-brex-card)     Subscribe to receive pending transaction events for expenses made on Brex Card\n\n1. Register subscription to\n`EXPENSE_PAYMENT_UPDATED`\n    webhook event\n\n\nCopy\n\nCopied\n\n```json\nPOST \"https://platform.brexapis.com/v1/webhooks\"\nRequires \"openid\" and \"offline_access\" scopes to register webhook subscription\nRequires \"expenses.card.readonly\" scope and \"CARD_ADMIN\" role to receive \"EXPENSE_PAYMENT_UPDATED\" event\n\nREQUEST\n{\n    \"event_types\": [\"EXPENSE_PAYMENT_UPDATED\"],\n    \"url\": \"https://your-webhook.url/\"\n}\n\nRESPONSE\n{\n    \"id\": \"subscription-id\",\n    \"url\": \"https://your-webhook.url/\",\n    \"event_types\": [\\\n        \"EXPENSE_PAYMENT_UPDATED\"\\\n    ],\n    \"status\": \"ACTIVE\"\n}\n```\n\n2. Attempt a charge on any Brex card on the account and receive an event at the webhook url\n\n\nCopy\n\nCopied\n\n```json\nWEBHOOK EVENT PAYLOAD\n{\n    \"event_type\": \"EXPENSE_PAYMENT_UPDATED\",\n    \"expense_id\": \"expense_cl3khzfnr00000k92bdjtmmes\",\n    \"payment_status\": \"PENDING\",\n    \"payment_type\": \"PURCHASE\",\n    \"company_id\": \"cuacc_ckwodfq7h000801q48qqsae5k\",\n    \"amount\": {\n        \"amount\": 1030,\n        \"currency\": \"string\"\n    },\n    \"payment_description\": \"Schrute Farms\"\n}\n```\n\n[Next to **Postman**](https://developer.brex.com/docs/postman/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/webhook_examples/",
      "title": "Webhooks API examples",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Webhooks API examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Webhooks API examples",
      "scrapeId": "d6d4a8cb-c8a6-49af-adc5-ea00d13e9148",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/webhook_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Examples of the Webhooks API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Examples of the Webhooks API",
      "twitter:title": "Webhooks API examples",
      "og:description": "Examples of the Webhooks API",
      "twitter:description": "Examples of the Webhooks API"
    }
  },
  {
    "markdown": "## [team api examples permalink](https://developer.brex.com/docs/team_examples/\\#team-api-examples)     Team API examples\n\nCreate a new user and assign them a virtual vendor card with spend limits.\n\n\n1. Create user.\n\n\nCopy\n\nCopied\n\n```json\nPOST \"https://platform.brexapis.com/v2/users\"\nRequires \"users\" scope\n\nREQUEST BODY\n{\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\"\n}\n\nRESPONSE\n{\n    \"id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\", // use this for next call\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\",\n    \"status\": \"INVITED\"\n}\n```\n\n2. Check that the user accepted the invite.\n\n\nCopy\n\nCopied\n\n```json\nGET \"https://platform.brexapis.com/v2/users/cuuser_ckze72soa117f01pkmf1wcpl3\"\nRequires \"users.readonly\" or \"users\" scope\n\nRESPONSE\n{\n    \"id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\",\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\",\n    \"status\": \"INVITED\" // hasn't accepted email invite yet\n}\n\n// They haven't accepted, let's try again later...\nRESPONSE\n{\n    \"id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\",\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\",\n    \"status\": \"ACTIVE\" // user has now has accepted and signed up\n}\n```\n\n3. Create a new\n`VIRTUAL`\n    vendor card for the user with a\n`spend_limit`\n.\n\n\nCopy\n\nCopied\n\n```json\nPOST \"https://platform.brexapis.com/v2/cards\"\nRequires \"cards\" scope\n\nREQUEST BODY\n{\n  \"owner\": {\n    \"type\": \"USER\",\n    \"user_id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\"\n  },\n  \"card_name\": \"Party Planning Committee\",\n  \"card_type\": \"VIRTUAL\",\n  \"limit_type\": \"CARD\",\n  \"spend_controls\": {\n    \"spend_limit\": {\n      \"amount\": 100000,\n      \"currency\": \"USD\"\n    },\n    \"spend_duration\": \"MONTHLY\",\n    \"lock_after_date\": \"2022-08-24\"\n  }\n}\n\nRESPONSE\n{\n    \"id\": \"ncard_cktdcoaez04db99p29d3ef1z3\", // use for next call\n    \"owner\": {\n        \"type\": \"USER\",\n        \"user_id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\"\n    },\n    \"status\": \"ACTIVE\",\n    \"last_four\": \"7649\",\n    \"card_name\": \"Party Planning Committee\",\n    \"card_type\": \"VIRTUAL\",\n    \"limit_type\": \"CARD\",\n    \"spend_controls\": {\n        \"spend_limit\": {\n            \"amount\": 100000,\n            \"currency\": \"USD\"\n        },\n        \"spend_available\": {\n            \"amount\": 100000,\n            \"currency\": \"USD\"\n        },\n        \"spend_duration\": \"MONTHLY\",\n        \"lock_after_date\": \"2022-08-24\"\n    },\n    \"billing_address\": {\n        \"line1\": \"1725 Slough Avenue\",\n        \"city\": \"Scranton\",\n        \"state\": \"PA\",\n        \"country\": \"US\",\n        \"postal_code\": \"18505\"\n    }\n}\n```\n\n4. Get the 16-digit credit card number.\n\n\nCopy\n\nCopied\n\n```json\nGET \"https://platform.brexapis.com/v2/cards/ncard_cktdcoaez04db99p29d3ef1z3/pan\"\nRequires \"cards.readonly\" or \"cards\" scope\n\nRESPONSE\n{\n    \"id\": \"ncard_cktdcoaez04db99p29d3ef1z3\",\n    \"number\": \"5556693000197392\",\n    \"cvv\": \"713\",\n    \"expiration_date\": {\n        \"month\": 9,\n        \"year\": 2024\n    }\n}\n```\n\nCreate a new user and assign them a virtual corporate card.\n\n\n1. Create user.\n\n\nCopy\n\nCopied\n\n```json\nPOST \"https://platform.brexapis.com/v2/users\"\nRequires \"users\" scope\n\nREQUEST BODY\n{\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\"\n}\n\nRESPONSE\n{\n    \"id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\", // use this for next call\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\",\n    \"status\": \"INVITED\"\n}\n```\n\n2. Check that the user accepted the invite.\n\n\nCopy\n\nCopied\n\n```json\nGET \"https://platform.brexapis.com/v2/users/cuuser_ckze72soa117f01pkmf1wcpl3\"\nRequires \"users.readonly\" or \"users\" scope\n\nRESPONSE\n{\n    \"id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\",\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\",\n    \"status\": \"INVITED\" // hasn't accepted email invite yet\n}\n\n// They haven't accepted, let's try again later...\nRESPONSE\n{\n    \"id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\",\n    \"first_name\": \"Karen\",\n    \"last_name\": \"Filippelli\",\n    \"email\": \"kfilippelli@dundermifflin.com\",\n    \"status\": \"ACTIVE\" // user has now has accepted and signed up\n}\n```\n\n3. Create a new\n`VIRTUAL`\n    card with\n`limit_type`\n    of\n`USER`\n.\n\n\nCopy\n\nCopied\n\n```json\nPOST \"https://platform.brexapis.com/v2/cards\"\nRequires \"cards\" scope\n\nREQUEST BODY\n{\n  \"owner\": {\n    \"type\": \"USER\",\n    \"user_id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\"\n  },\n  \"card_name\": \"Karen Virtual Corporate Card\",\n  \"card_type\": \"VIRTUAL\",\n  \"limit_type\": \"USER\"\n}\n\nRESPONSE\n{\n    \"id\": \"ncard_cktdcoaez04db99p29d3ef1z3\", // use for next call\n    \"owner\": {\n        \"type\": \"USER\",\n        \"user_id\": \"cuuser_ckze72soa117f01pkmf1wcpl3\"\n    },\n    \"status\": \"ACTIVE\",\n    \"last_four\": \"7649\",\n    \"card_name\": \"Karen Virtual Corporate Card\",\n    \"card_type\": \"VIRTUAL\",\n    \"limit_type\": \"USER\",\n    \"billing_address\": {\n        \"line1\": \"1725 Slough Avenue\",\n        \"city\": \"Scranton\",\n        \"state\": \"PA\",\n        \"country\": \"US\",\n        \"postal_code\": \"18505\"\n    }\n}\n```\n\n4. Get the 16-digit credit card number.\n\n\nCopy\n\nCopied\n\n```json\nGET \"https://platform.brexapis.com/v2/cards/ncard_cktdcoaez04db99p29d3ef1z3/pan\"\nRequires \"cards.readonly\" or \"cards\" scope\n\nRESPONSE\n{\n    \"id\": \"ncard_cktdcoaez04db99p29d3ef1z3\",\n    \"number\": \"5556693000197392\",\n    \"cvv\": \"713\",\n    \"expiration_date\": {\n        \"month\": 9,\n        \"year\": 2024\n    }\n}\n```\n\n[Next to **Payments API examples**](https://developer.brex.com/docs/payments_examples/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/team_examples/",
      "title": "Team API examples",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Team API examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Team API examples",
      "scrapeId": "eeb9c111-8c25-4675-a549-7c97f4c9a6f0",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/team_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Example uses of the team API",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Example uses of the team API",
      "twitter:title": "Team API examples",
      "og:description": "Example uses of the team API",
      "twitter:description": "Example uses of the team API"
    }
  },
  {
    "markdown": "# Expenses API(0.1)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/e478e1ae-01cb-4a22-85d9-6409c74d4a9f)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nThe Expenses API allows you to manage accounting and expenses information.\n\n# [tag/Card-Expenses](https://developer.brex.com/openapi/expenses_api/\\#tag/Card-Expenses) Card Expenses\n\nView and manage card expenses data.\n\n## [operation/listExpenses_1](https://developer.brex.com/openapi/expenses_api/\\#operation/listExpenses_1) List card expenses\n\nList card expenses under the same account. Admin and bookkeeper have access to any expense, and regular users can only access their own.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| expand\\[\\] | Array of strings or null<br>Get additional details for the expense, e.g. merchant mcc code, by passing in `expand[]=merchant`. Query parameters include `location`, `department`, `merchant`, `receipts.download_uris`, `user`, `budget` and `payment`.<br>Example:expand\\[\\]=<br>?expand\\[\\]=merchant&expand\\[\\]=location |\n| user\\_id\\[\\] | Array of strings or null<br>Get expenses belong to provided user(s). |\n| parent\\_expense\\_id\\[\\] | Array of strings or null<br>Get itemized expenses belong to provided parent expenses ID(s). |\n| budget\\_id\\[\\] | Array of strings or null |\n| spending\\_entity\\_id\\[\\] | Array of strings or null |\n| status\\[\\] | Array of strings or null (ExpenseStatus) <br>Enum:\"DRAFT\"\"SUBMITTED\"\"APPROVED\"\"OUT\\_OF\\_POLICY\"\"VOID\"\"CANCELED\"\"SPLIT\"\"SETTLED\" |\n| payment\\_status\\[\\] | Array of strings or null (ExpensePaymentStatus) <br>Enum:\"NOT\\_STARTED\"\"PROCESSING\"\"CANCELED\"\"DECLINED\"\"CLEARED\"\"REFUNDING\"\"REFUNDED\"\"CASH\\_ADVANCE\"\"CREDITED\"\"AWAITING\\_PAYMENT\"\"SCHEDULED\" |\n| purchased\\_at\\_start | string or null<date-time><br>Shows only expenses with a `purchased_at` on or after this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:purchased\\_at\\_start=<br>2023-01-01T23:59:59.999 |\n| purchased\\_at\\_end | string or null<date-time><br>Shows only expenses with a `purchased_at` on or before this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:purchased\\_at\\_end=<br>2023-01-10T23:59:59.999 |\n| updated\\_at\\_start | string or null<date-time><br>Shows only expenses with a `updated_at` on or after this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:updated\\_at\\_start=<br>2023-01-01T23:59:59.999 |\n| updated\\_at\\_end | string or null<date-time><br>Shows only expenses with a `updated_at` on or before this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:updated\\_at\\_end=<br>2023-01-10T23:59:59.999 |\n| load\\_custom\\_fields | boolean or null<br>Load custom fields for the expenses. |\n| cursor | string or null<br>The cursor to use for pagination. This is the `next_cursor` value returned from the previous response. |\n| limit | integer or null<int32><br>Controls the maximum number of expenses returned in the response, can't be greater than 1000 |\n\nResponses\n\n200\nList expenses response.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v1/expenses/card\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/expenses/card \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"memo\": \"string\",\\\n\"location_id\": \"string\",\\\n\"location\": {\\\n\"id\": \"string\",\\\n\"name\": \"string\"},\\\n\"address\": {\\\n\"country\": \"string\",\\\n\"state\": \"string\",\\\n\"city\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"timezone\": \"string\",\\\n\"coordinates\": {\\\n\"latitude\": 0,\\\n\"longitude\": 0},\\\n\"line1\": \"string\",\\\n\"line2\": \"string\"},\\\n\"department_id\": \"string\",\\\n\"department\": {\\\n\"id\": \"string\",\\\n\"name\": \"string\"},\\\n\"updated_at\": \"2019-08-24T14:15:22Z\",\\\n\"payment_posted_at\": \"2019-08-24T14:15:22Z\",\\\n\"category\": \"ADVERTISING_AND_MARKETING\",\\\n\"merchant_id\": \"string\",\\\n\"merchant\": {\\\n\"raw_descriptor\": \"string\",\\\n\"mcc\": \"string\",\\\n\"country\": \"string\"},\\\n\"receipts\": [\\\n{\\\n\"id\": \"string\",\\\n\"download_uris\": [\\\n\"string\"]}],\\\n\"budget_id\": \"string\",\\\n\"budget\": {\\\n\"id\": \"string\",\\\n\"name\": \"string\"},\\\n\"expense_type\": \"CARD\",\\\n\"original_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"billing_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"budget_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"purchased_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"usd_equivalent_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"purchased_at\": \"2019-08-24T14:15:22Z\",\\\n\"status\": \"DRAFT\",\\\n\"payment_status\": \"NOT_STARTED\",\\\n\"user_id\": \"string\",\\\n\"user\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"payment\": {\\\n\"id\": \"string\",\\\n\"paymentInstrument\": {\\\n\"type\": \"CARD\",\\\n\"id\": \"string\"},\\\n\"statusReason\": \"OTHER\"},\\\n\"custom_fields\": [\\\n{\\\n\"key\": \"string\",\\\n\"value\": {\\\n\"value_type\": \"SINGLE_VALUE\",\\\n\"data_type\": \"STRING\",\\\n\"data\": \"string\"}}],\\\n\"trip_id\": \"string\",\\\n\"spending_entity_id\": \"string\",\\\n\"spending_entity\": {\\\n\"id\": \"string\",\\\n\"display_name\": \"string\",\\\n\"billing_address\": {\\\n\"line1\": \"string\",\\\n\"line2\": \"string\",\\\n\"city\": \"string\",\\\n\"state\": \"string\",\\\n\"country\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"phone_number\": \"string\"},\\\n\"created_at\": \"2019-08-24T14:15:22Z\",\\\n\"status\": \"UNSUBMITTED\",\\\n\"is_default\": true},\\\n\"billing_entity_id\": \"string\",\\\n\"exported_at\": \"2019-08-24T14:15:22Z\",\\\n\"integration_spending_entity_id\": \"string\",\\\n\"integration_billing_entity_id\": \"string\",\\\n\"review\": {\\\n\"compliance_status\": \"string\",\\\n\"reviewers\": {\\\n\"reviewer\": [\\\n{\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"}],\\\n\"status\": \"string\"},\\\n\"approver\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"copilot_approver\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"approved_at\": \"2019-08-24T14:15:22Z\"},\\\n\"repayment\": {\\\n\"repayment_initiated_by\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"repayment_initiation_date\": \"2019-08-24T14:15:22Z\"},\\\n\"approved_at\": \"2019-08-24T14:15:22Z\",\\\n\"submitted_at\": \"2019-08-24T14:15:22Z\",\\\n\"completion_date\": \"2019-08-24T14:15:22Z\"}]}`\n\n## [operation/getCardExpense](https://developer.brex.com/openapi/expenses_api/\\#operation/getCardExpense) Get a card expense\n\nGet a card expense by its ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| expense\\_id<br>required | string |\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| expand\\[\\] | Array of strings or null<br>Get additional details for the expense, e.g. merchant mcc code, by passing in `expand[]=merchant`. Query parameters include `location`, `department`, `merchant`, `receipts.download_uris`, `user`, `budget` and `payment`.<br>Example:expand\\[\\]=<br>?expand\\[\\]=merchant&expand\\[\\]=location |\n| load\\_custom\\_fields | boolean or null<br>Load custom fields for the expense. |\n\nResponses\n\n200\nGet an expense response.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v1/expenses/card/{expense\\_id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/expenses/card/{expense_id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"memo\": \"string\",\n\"location_id\": \"string\",\n\"location\": {\n\"id\": \"string\",\n\"name\": \"string\"},\n\"address\": {\n\"country\": \"string\",\n\"state\": \"string\",\n\"city\": \"string\",\n\"postal_code\": \"string\",\n\"timezone\": \"string\",\n\"coordinates\": {\n\"latitude\": 0,\n\"longitude\": 0},\n\"line1\": \"string\",\n\"line2\": \"string\"},\n\"department_id\": \"string\",\n\"department\": {\n\"id\": \"string\",\n\"name\": \"string\"},\n\"updated_at\": \"2019-08-24T14:15:22Z\",\n\"payment_posted_at\": \"2019-08-24T14:15:22Z\",\n\"category\": \"ADVERTISING_AND_MARKETING\",\n\"merchant_id\": \"string\",\n\"merchant\": {\n\"raw_descriptor\": \"string\",\n\"mcc\": \"string\",\n\"country\": \"string\"},\n\"receipts\": [\\\n{\\\n\"id\": \"string\",\\\n\"download_uris\": [\\\n\"string\"]}],\n\"budget_id\": \"string\",\n\"budget\": {\n\"id\": \"string\",\n\"name\": \"string\"},\n\"expense_type\": \"CARD\",\n\"original_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"billing_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"budget_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"purchased_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"usd_equivalent_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"purchased_at\": \"2019-08-24T14:15:22Z\",\n\"status\": \"DRAFT\",\n\"payment_status\": \"NOT_STARTED\",\n\"user_id\": \"string\",\n\"user\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"payment\": {\n\"id\": \"string\",\n\"paymentInstrument\": {\n\"type\": \"CARD\",\n\"id\": \"string\"},\n\"statusReason\": \"OTHER\"},\n\"custom_fields\": [\\\n{\\\n\"key\": \"string\",\\\n\"value\": {\\\n\"value_type\": \"SINGLE_VALUE\",\\\n\"data_type\": \"STRING\",\\\n\"data\": \"string\"}}],\n\"trip_id\": \"string\",\n\"spending_entity_id\": \"string\",\n\"spending_entity\": {\n\"id\": \"string\",\n\"display_name\": \"string\",\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"created_at\": \"2019-08-24T14:15:22Z\",\n\"status\": \"UNSUBMITTED\",\n\"is_default\": true},\n\"billing_entity_id\": \"string\",\n\"exported_at\": \"2019-08-24T14:15:22Z\",\n\"integration_spending_entity_id\": \"string\",\n\"integration_billing_entity_id\": \"string\",\n\"review\": {\n\"compliance_status\": \"string\",\n\"reviewers\": {\n\"reviewer\": [\\\n{\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"}],\n\"status\": \"string\"},\n\"approver\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"copilot_approver\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"approved_at\": \"2019-08-24T14:15:22Z\"},\n\"repayment\": {\n\"repayment_initiated_by\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"repayment_initiation_date\": \"2019-08-24T14:15:22Z\"},\n\"approved_at\": \"2019-08-24T14:15:22Z\",\n\"submitted_at\": \"2019-08-24T14:15:22Z\",\n\"completion_date\": \"2019-08-24T14:15:22Z\"}`\n\n## [operation/updateExpense](https://developer.brex.com/openapi/expenses_api/\\#operation/updateExpense) Update an expense\n\nUpdate an expense. Admin and bookkeeper have access to any expense, and regular users can only access their own.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| expense\\_id<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| memo | string or null<br>Expense memo. |\n\nResponses\n\n200\nUpdate an expense response.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nput/v1/expenses/card/{expense\\_id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"memo\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"memo\": \"string\",\n\"location_id\": \"string\",\n\"department_id\": \"string\",\n\"updated_at\": \"2019-08-24T14:15:22Z\",\n\"category\": \"ADVERTISING_AND_MARKETING\",\n\"merchant_id\": \"string\",\n\"budget_id\": \"string\",\n\"original_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"billing_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"purchased_at\": \"2019-08-24T14:15:22Z\",\n\"status\": \"DRAFT\",\n\"payment_status\": \"NOT_STARTED\"}`\n\n# [tag/Receipt-Match](https://developer.brex.com/openapi/expenses_api/\\#tag/Receipt-Match) Receipt Match\n\nUpload receipt and match automatically.\n\n## [operation/receiptMatch](https://developer.brex.com/openapi/expenses_api/\\#operation/receiptMatch) Create a new receipt match\n\nThe `uri` will be a pre-signed S3 URL allowing you to upload the receipt securely. This URL can only be used for a `PUT` operation and expires 30 minutes after its creation. Once your upload is complete, we will try to match the receipt with existing expenses.\n\nRefer to these [docs](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html) on how to upload to this pre-signed S3 URL. We highly recommend using one of AWS SDKs if they're available for your language to upload these files.\n\nSecurity**OAuth2**\n\nRequest\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| receipt\\_name<br>required | string<br>The name of the receipt (with the file extension). It will be used in the matching result email. |\n\nResponses\n\n201\nCreate a new receipt match response.\n\n400\nBad request\n\n401\nUnauthorized\n\npost/v1/expenses/card/receipt\\_match\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"receipt_name\": \"string\"}`\n\nResponse samples\n\n- 201\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"uri\": \"string\"}`\n\n# [tag/Expenses](https://developer.brex.com/openapi/expenses_api/\\#tag/Expenses) Expenses\n\n## [operation/listExpenses](https://developer.brex.com/openapi/expenses_api/\\#operation/listExpenses) List expenses\n\nList expenses under the same account. Admin and bookkeeper have access to any expense, and regular users can only access their own.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| expand\\[\\] | Array of strings or null<br>Get additional details for the expense, e.g. merchant mcc code, by passing in `expand[]=merchant`. Query parameters include `location`, `department`, `merchant`, `receipts.download_uris`, `user`, `budget` and `payment`.<br>Example:expand\\[\\]=<br>?expand\\[\\]=merchant&expand\\[\\]=location |\n| user\\_id\\[\\] | Array of strings or null<br>Get expenses belong to provided user(s). |\n| parent\\_expense\\_id\\[\\] | Array of strings or null<br>Get itemized expenses belong to provided parent expenses ID(s). |\n| budget\\_id\\[\\] | Array of strings or null |\n| spending\\_entity\\_id\\[\\] | Array of strings or null |\n| expense\\_type\\[\\] | Array of strings or null (ExpenseType) <br>Enum:\"CARD\"\"BILLPAY\"\"REIMBURSEMENT\"\"CLAWBACK\"\"UNSET\" |\n| status\\[\\] | Array of strings or null (ExpenseStatus) <br>Enum:\"DRAFT\"\"SUBMITTED\"\"APPROVED\"\"OUT\\_OF\\_POLICY\"\"VOID\"\"CANCELED\"\"SPLIT\"\"SETTLED\" |\n| payment\\_status\\[\\] | Array of strings or null (ExpensePaymentStatus) <br>Enum:\"NOT\\_STARTED\"\"PROCESSING\"\"CANCELED\"\"DECLINED\"\"CLEARED\"\"REFUNDING\"\"REFUNDED\"\"CASH\\_ADVANCE\"\"CREDITED\"\"AWAITING\\_PAYMENT\"\"SCHEDULED\" |\n| purchased\\_at\\_start | string or null<date-time><br>Shows only expenses with a `purchased_at` on or after this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:purchased\\_at\\_start=<br>2023-01-01T23:59:59.999 |\n| purchased\\_at\\_end | string or null<date-time><br>Shows only expenses with a `purchased_at` on or before this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:purchased\\_at\\_end=<br>2023-01-10T23:59:59.999 |\n| updated\\_at\\_start | string or null<date-time><br>Shows only expenses with a `updated_at` on or after this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:updated\\_at\\_start=<br>2023-01-01T23:59:59.999 |\n| updated\\_at\\_end | string or null<date-time><br>Shows only expenses with a `updated_at` on or before this date-time. This parameter is the date-time notation as defined by [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6), e.g. 2022-11-12T23:59:59.999<br>Example:updated\\_at\\_end=<br>2023-01-10T23:59:59.999 |\n| load\\_custom\\_fields | boolean or null<br>Load custom fields for the expenses. |\n| cursor | string or null<br>The cursor to use for pagination. This is the `next_cursor` value returned from the previous response. |\n| limit | integer or null<int32><br>Controls the maximum number of expenses returned in the response, can't be greater than 1000 |\n\nResponses\n\n200\nList expenses response.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\nget/v1/expenses\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v1/expenses \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"memo\": \"string\",\\\n\"location_id\": \"string\",\\\n\"location\": {\\\n\"id\": \"string\",\\\n\"name\": \"string\"},\\\n\"address\": {\\\n\"country\": \"string\",\\\n\"state\": \"string\",\\\n\"city\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"timezone\": \"string\",\\\n\"coordinates\": {\\\n\"latitude\": 0,\\\n\"longitude\": 0},\\\n\"line1\": \"string\",\\\n\"line2\": \"string\"},\\\n\"department_id\": \"string\",\\\n\"department\": {\\\n\"id\": \"string\",\\\n\"name\": \"string\"},\\\n\"updated_at\": \"2019-08-24T14:15:22Z\",\\\n\"payment_posted_at\": \"2019-08-24T14:15:22Z\",\\\n\"category\": \"ADVERTISING_AND_MARKETING\",\\\n\"merchant_id\": \"string\",\\\n\"merchant\": {\\\n\"raw_descriptor\": \"string\",\\\n\"mcc\": \"string\",\\\n\"country\": \"string\"},\\\n\"receipts\": [\\\n{\\\n\"id\": \"string\",\\\n\"download_uris\": [\\\n\"string\"]}],\\\n\"budget_id\": \"string\",\\\n\"budget\": {\\\n\"id\": \"string\",\\\n\"name\": \"string\"},\\\n\"expense_type\": \"CARD\",\\\n\"original_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"billing_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"budget_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"purchased_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"usd_equivalent_amount\": {\\\n\"amount\": 700,\\\n\"currency\": \"USD\"},\\\n\"purchased_at\": \"2019-08-24T14:15:22Z\",\\\n\"status\": \"DRAFT\",\\\n\"payment_status\": \"NOT_STARTED\",\\\n\"user_id\": \"string\",\\\n\"user\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"payment\": {\\\n\"id\": \"string\",\\\n\"paymentInstrument\": {\\\n\"type\": \"CARD\",\\\n\"id\": \"string\"},\\\n\"statusReason\": \"OTHER\"},\\\n\"custom_fields\": [\\\n{\\\n\"key\": \"string\",\\\n\"value\": {\\\n\"value_type\": \"SINGLE_VALUE\",\\\n\"data_type\": \"STRING\",\\\n\"data\": \"string\"}}],\\\n\"trip_id\": \"string\",\\\n\"spending_entity_id\": \"string\",\\\n\"spending_entity\": {\\\n\"id\": \"string\",\\\n\"display_name\": \"string\",\\\n\"billing_address\": {\\\n\"line1\": \"string\",\\\n\"line2\": \"string\",\\\n\"city\": \"string\",\\\n\"state\": \"string\",\\\n\"country\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"phone_number\": \"string\"},\\\n\"created_at\": \"2019-08-24T14:15:22Z\",\\\n\"status\": \"UNSUBMITTED\",\\\n\"is_default\": true},\\\n\"billing_entity_id\": \"string\",\\\n\"exported_at\": \"2019-08-24T14:15:22Z\",\\\n\"integration_spending_entity_id\": \"string\",\\\n\"integration_billing_entity_id\": \"string\",\\\n\"review\": {\\\n\"compliance_status\": \"string\",\\\n\"reviewers\": {\\\n\"reviewer\": [\\\n{\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"}],\\\n\"status\": \"string\"},\\\n\"approver\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"copilot_approver\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"approved_at\": \"2019-08-24T14:15:22Z\"},\\\n\"repayment\": {\\\n\"repayment_initiated_by\": {\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"},\\\n\"repayment_initiation_date\": \"2019-08-24T14:15:22Z\"},\\\n\"approved_at\": \"2019-08-24T14:15:22Z\",\\\n\"submitted_at\": \"2019-08-24T14:15:22Z\",\\\n\"completion_date\": \"2019-08-24T14:15:22Z\"}]}`\n\n## [operation/getExpense](https://developer.brex.com/openapi/expenses_api/\\#operation/getExpense) Get an expense\n\nGet an expense by its ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| expand\\[\\] | Array of strings or null<br>Get additional details for the expense, e.g. merchant mcc code, by passing in `expand[]=merchant`. Query parameters include `location`, `department`, `merchant`, `receipts.download_uris`, `user`, `budget` and `payment`.<br>Example:expand\\[\\]=<br>?expand\\[\\]=merchant&expand\\[\\]=location |\n| load\\_custom\\_fields | boolean or null<br>Load custom fields for the expense. |\n\nResponses\n\n200\nGet an expense response.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\nget/v1/expenses/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v1/expenses/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"memo\": \"string\",\n\"location_id\": \"string\",\n\"location\": {\n\"id\": \"string\",\n\"name\": \"string\"},\n\"address\": {\n\"country\": \"string\",\n\"state\": \"string\",\n\"city\": \"string\",\n\"postal_code\": \"string\",\n\"timezone\": \"string\",\n\"coordinates\": {\n\"latitude\": 0,\n\"longitude\": 0},\n\"line1\": \"string\",\n\"line2\": \"string\"},\n\"department_id\": \"string\",\n\"department\": {\n\"id\": \"string\",\n\"name\": \"string\"},\n\"updated_at\": \"2019-08-24T14:15:22Z\",\n\"payment_posted_at\": \"2019-08-24T14:15:22Z\",\n\"category\": \"ADVERTISING_AND_MARKETING\",\n\"merchant_id\": \"string\",\n\"merchant\": {\n\"raw_descriptor\": \"string\",\n\"mcc\": \"string\",\n\"country\": \"string\"},\n\"receipts\": [\\\n{\\\n\"id\": \"string\",\\\n\"download_uris\": [\\\n\"string\"]}],\n\"budget_id\": \"string\",\n\"budget\": {\n\"id\": \"string\",\n\"name\": \"string\"},\n\"expense_type\": \"CARD\",\n\"original_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"billing_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"budget_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"purchased_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"usd_equivalent_amount\": {\n\"amount\": 700,\n\"currency\": \"USD\"},\n\"purchased_at\": \"2019-08-24T14:15:22Z\",\n\"status\": \"DRAFT\",\n\"payment_status\": \"NOT_STARTED\",\n\"user_id\": \"string\",\n\"user\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"payment\": {\n\"id\": \"string\",\n\"paymentInstrument\": {\n\"type\": \"CARD\",\n\"id\": \"string\"},\n\"statusReason\": \"OTHER\"},\n\"custom_fields\": [\\\n{\\\n\"key\": \"string\",\\\n\"value\": {\\\n\"value_type\": \"SINGLE_VALUE\",\\\n\"data_type\": \"STRING\",\\\n\"data\": \"string\"}}],\n\"trip_id\": \"string\",\n\"spending_entity_id\": \"string\",\n\"spending_entity\": {\n\"id\": \"string\",\n\"display_name\": \"string\",\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"created_at\": \"2019-08-24T14:15:22Z\",\n\"status\": \"UNSUBMITTED\",\n\"is_default\": true},\n\"billing_entity_id\": \"string\",\n\"exported_at\": \"2019-08-24T14:15:22Z\",\n\"integration_spending_entity_id\": \"string\",\n\"integration_billing_entity_id\": \"string\",\n\"review\": {\n\"compliance_status\": \"string\",\n\"reviewers\": {\n\"reviewer\": [\\\n{\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\"}],\n\"status\": \"string\"},\n\"approver\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"copilot_approver\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"approved_at\": \"2019-08-24T14:15:22Z\"},\n\"repayment\": {\n\"repayment_initiated_by\": {\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\"},\n\"repayment_initiation_date\": \"2019-08-24T14:15:22Z\"},\n\"approved_at\": \"2019-08-24T14:15:22Z\",\n\"submitted_at\": \"2019-08-24T14:15:22Z\",\n\"completion_date\": \"2019-08-24T14:15:22Z\"}`\n\n# [tag/Receipt-Upload](https://developer.brex.com/openapi/expenses_api/\\#tag/Receipt-Upload) Receipt Upload\n\n## [operation/receiptUpload](https://developer.brex.com/openapi/expenses_api/\\#operation/receiptUpload) Create a new receipt upload\n\nThe `uri` will be a pre-signed S3 URL allowing you to upload the receipt securely. This URL can only be used for a `PUT` operation and expires 30 minutes after its creation. Once your upload is complete, we will try to match the receipt with existing expenses.\n\nRefer to these [docs](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html) on how to upload to this pre-signed S3 URL. We highly recommend using one of AWS SDKs if they're available for your language to upload these files.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| expense\\_id<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| receipt\\_name<br>required | string<br>The name of the receipt (with the file extension). |\n\nResponses\n\n201\nUpload a new receipt response.\n\n400\nBad request\n\n401\nUnauthorized\n\n403\nForbidden\n\n404\nNot Found\n\npost/v1/expenses/card/{expense\\_id}/receipt\\_upload\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"receipt_name\": \"string\"}`\n\nResponse samples\n\n- 201\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"uri\": \"string\"}`\n\n[Next to **Webhooks API**](https://developer.brex.com/openapi/webhooks_api/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/expenses_api/",
      "title": "Expenses API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Expenses API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Expenses API",
      "scrapeId": "ffa60bd5-c325-4826-b8da-659050481dfc",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/expenses_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Expenses API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  },
  {
    "markdown": "## [bulk issue virtual cards using the brex pipedream integration permalink](https://developer.brex.com/docs/pipedream_examples/\\#bulk-issue-virtual-cards-using-the-brex-pipedream-integration)     Bulk Issue Virtual Cards using the Brex Pipedream Integration\n\nUsing Brex’s integration with Pipedream, you can perform many bulk actions. In this post, we’ll show you how to bulk create virtual cards for your employees. For example, you can use this integration to create one-time virtual cards to provide a stipend for your employees to set up their home office, or you can use this integration to create virtual cards for a WFH stipend where the card limit resets every month.\n\n[Pipedream](https://pipedream.com/) is a low-code integration platform that [Brex integrates with](https://pipedream.com/@brex) to enable various use cases including bulk creating users, setting monthly limits for users, and issuing virtual cards.\n\nIn this tutorial, we will walk through the steps to enable bulk issuing virtual cards in Brex through Pipedream. We will accomplish that by setting up a Pipedream account, connecting Pipedream to your Brex account, creating a CSV with the cards you need to bulk create, and then emailing tha CSV to Pipedream to automatically bulk create the cards.\n\n## [steps to install the brex pipedream integration permalink](https://developer.brex.com/docs/pipedream_examples/\\#steps-to-install-the-brex-pipedream-integration)     Steps to Install the Brex Pipedream Integration\n\n1. If you don’t already have a Pipedream account,\n[sign up here](https://pipedream.com/auth/signup)\n.\n\n2. Navigate to the\n[Brex integration page](https://pipedream.com/@brex)\n    on Pipedream, and click on the Issue Virtual Cards workflow\n\n\n![Brex Pipedream 1](https://developer.brex.com/static/7b9fd5321ce89c50bb8f1a0a39dbf9e1/a5262/brex-pipedream-1.png)\n\n3. On the top right of the page, click Copy. This will copy the Issue Virtual Cards template into your Pipedream account.\n\n\n![Brex Pipedream 2](https://developer.brex.com/static/a5f9ce5e3506635717c1586b504230fc/12c06/brex-pipedream-2.png)\n\n4. On the top left of the next page, give your Pipedream workflow a name to help you identify it in your account. Then click Save.\n\n\n![Brex Pipedream 3](https://developer.brex.com/static/e4fdb4d355e8de181370277dd3534484/22284/brex-pipedream-3.png)\n\n5. If you haven’t connected Pipedream to Brex before, scroll down until you see the Connect Brex button. Click this button and then you will be prompted to login to your Brex account.\n**This will give Pipedream read and write access to your Brex account to take actions on your behalf. Please review your organization’s security policy before proceeding.**\n\n![Brex Pipedream 4](https://developer.brex.com/static/4e1d0de93a080f911ef05a0170e87851/c50e3/brex-pipedream-4.png)\n\n6. Click the Allow Access button.\n\n\n![Brex Pipedream 5](https://developer.brex.com/static/52b607f6cce1771b89aaadf99a2273e1/0940f/brex-pipedream-5.png)\n\n7. Navigate back to your Pipedream account to the template you created. Scroll down and choose the Brex account that shows your email. Then click the Deploy button at the top.\n\n\n![Brex Pipedream 6](https://developer.brex.com/static/469ebdb2ac42a4903796e90f12667523/fc477/brex-pipedream-6.png)\n\n8. Pipedream will now show you an email address at the top of the page. Treat this email address securely like a password. By sending a CSV to this address, anybody who uses it will be able to create cards in your Brex account. Save this email address to use in Step 10.\n\n\n![Brex Pipedream 7](https://developer.brex.com/static/5d7003216a68cf78419f353dfa50f1ee/80521/brex-pipedream-7.png)\n\n9. In a spreadsheet tool like Excel or Google Sheets, create a CSV with the format shown in the screenshot below. The columns needed are: email, card\n\\_\nname, limit, duration, reason, lock\n\\_\nafter\n\\_\ndate.\n\n\na. The `email` field is the email for the Brex user you want to assign the card to.\n\nb. The `card name` field helps you identify the card in the Brex dashboard.\n\nc. The `limit` field is the card limit and set in dollars. For example, 400 in the screenshot below represents $400.\n\nd. The `duration` field has to use one of the following in the all caps format: ONE\\_TIME, MONTHLY, QUARTERLY, YEARLY. This lets you set either a one-time use limit for the card or set a limit for the card that renews at monthly, quarterly, or yearly cadence.\n\ne. The `reason` field auto-populates the memo field for transactions. You can set this to any value you need.\n\nf. The `lock_after_date` field is when the card will be automatically locked. You have to use the YYYY-MM-DD format as shown in the screenshot below.\n\ng. You can use [this CSV file](https://app.box.com/s/8z9qs355gq3bsfowb5qlqq9jck2l48w5) as a starting template.\n\n![Brex Pipedream 9](https://developer.brex.com/static/f4470f71f9c863dfc93f0a7aac0ab3ba/51800/brex-pipedream-9.png)\n\n10. Export this spreadsheet as a CSV. Email it to the Pipedream address from Step 8. You will not get a response from the email, but you can verify it worked by navigating to the Brex dashboard. Go to the All Cards section and search for one of the cards you expected would have been created using this workflow.\n\n\n![Brex Pipedream 8](https://developer.brex.com/static/44dd73a1def2d9787f88385d352bffa1/29114/brex-pipedream-8.png)\n\n11. Optionally, if you don’t need to import any more cards, toggle the workflow. This will make the Pipedream email address you created for this workflow no longer active.\n\n\n![Brex Pipedream 10](https://developer.brex.com/static/57a0d37e6fe09b8dbea1b9c75ec5359f/6e29b/brex-pipedream-10.png)\n\n## [next steps permalink](https://developer.brex.com/docs/pipedream_examples/\\#next-steps)     Next Steps\n\nIf you don’t already have a Brex account, you can [sign up for a Brex account here](https://www.brex.com/signup/) (subject to financial approvals). After you have a Brex account with the ability to create cards, you can set up the workflow described in this tutorial.\n\nIf you are interested in learning more about the Brex API, you can learn more in the [Overview section](https://developer.brex.com/) of our API docs. If you want to get started, our [Quickstart guide](https://developer.brex.com/docs/quickstart/) allows you to generate your API token and make your first API call in a few minutes.\n\nIf you have any questions about this tutorial, the Brex API, or our partner integration ecosystem, we are happy to help so please feel free to [contact us](https://developer.brex.com/docs/support/).\n\n[Next to **Community Supported Libraries**](https://developer.brex.com/docs/community_supported_libraries/)",
    "metadata": {
      "url": "https://developer.brex.com/docs/pipedream_examples/",
      "title": "Pipedream examples",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Pipedream examples",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Pipedream examples",
      "scrapeId": "e48d1d80-08dc-4a55-805e-0d8769d7a734",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/docs/pipedream_examples/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "Tutorial showing how to use Pipedream to bulk issue Brex virtual cards",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "Tutorial showing how to use Pipedream to bulk issue Brex virtual cards",
      "twitter:title": "Pipedream examples",
      "og:description": "Tutorial showing how to use Pipedream to bulk issue Brex virtual cards",
      "twitter:description": "Tutorial showing how to use Pipedream to bulk issue Brex virtual cards"
    }
  },
  {
    "markdown": "# Team API(1.0)\n\nDownload OpenAPI specification: [Download](blob:https://developer.brex.com/3348aff1-2408-4e2e-b0a5-56003c71175e)\n\nAdmin: [developer-access@brex.com](mailto:developer-access@brex.com)URL: [https://brex.com](https://brex.com/)\n\nThe team API lets you manage users, departments, locations, and cards.\n\n# [tag/Users](https://developer.brex.com/openapi/team_api/\\#tag/Users) Users\n\nEndpoints for user management.\n\n## [operation/listUsers](https://developer.brex.com/openapi/team_api/\\#operation/listUsers) List users\n\nThis endpoint lists all users. To find a user id by email, you can filter using the `email` query parameter.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| email | string or null<br>Currently only support filtering by a single email or a single remote\\_display\\_id. |\n| remote\\_display\\_id | string or null<br>Currently only support filtering by a single email or a single remote\\_display\\_id. |\n| expand\\[\\] | Array of strings or null<br>Expandable fields that can be included in the response by passing in a query parameter e.g. ?expand\\[\\]=limit |\n\nResponses\n\n200\nlistUsers 200 response\n\nget/v2/users\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/users \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"first_name\": \"string\",\\\n\"last_name\": \"string\",\\\n\"email\": \"string\",\\\n\"status\": \"INVITED\",\\\n\"manager_id\": \"string\",\\\n\"department_id\": \"string\",\\\n\"location_id\": \"string\",\\\n\"title_id\": \"string\",\\\n\"metadata\": {\\\n\"property1\": \"string\",\\\n\"property2\": \"string\"},\\\n\"remote_display_id\": \"string\"}]}`\n\n## [operation/createUser](https://developer.brex.com/openapi/team_api/\\#operation/createUser) Invite user\n\nThis endpoint invites a new user as an employee.\nTo update user's role, check out [this article](https://support.brex.com/how-do-i-change-another-user-s-role/).\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| first\\_name<br>required | stringnon-empty |\n| last\\_name<br>required | stringnon-empty |\n| email<br>required | string<email> |\n| manager\\_id | string or null |\n| department\\_id | string or null |\n| location\\_id | string or null |\n| title\\_id | string or null |\n| metadata | object or null<br>The metadata or customized attributes of the user. Maximum number of entries: 100 |\n\nResponses\n\n200\ncreateUser 200 response\n\npost/v2/users\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"email\": \"user@example.com\",\n\"manager_id\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\",\n\"title_id\": \"string\",\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"}}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"email\": \"string\",\n\"status\": \"INVITED\",\n\"manager_id\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\",\n\"title_id\": \"string\",\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"remote_display_id\": \"string\"}`\n\n## [operation/getMe](https://developer.brex.com/openapi/team_api/\\#operation/getMe) Get current user\n\nThis endpoint returns the user associated with the OAuth2 access token.\n\nSecurity**OAuth2**\n\nResponses\n\n200\ngetMe 200 response\n\nget/v2/users/me\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/users/me \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"email\": \"string\",\n\"status\": \"INVITED\",\n\"manager_id\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\",\n\"title_id\": \"string\",\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"remote_display_id\": \"string\"}`\n\n## [operation/getUserById](https://developer.brex.com/openapi/team_api/\\#operation/getUserById) Get user\n\nThis endpoint gets a user by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetUserById 200 response\n\nget/v2/users/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/users/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"email\": \"string\",\n\"status\": \"INVITED\",\n\"manager_id\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\",\n\"title_id\": \"string\",\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"remote_display_id\": \"string\"}`\n\n## [operation/updateUser](https://developer.brex.com/openapi/team_api/\\#operation/updateUser) Update user\n\nThis endpoint updates a user. Any parameters not provided will be left unchanged.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| status | string or null<br>Acceptable user status for update. To suspend a user, set status to 'disabled'. To unsuspend a user, set status to 'active'.<br>Enum:\"ACTIVE\"\"DISABLED\" |\n| manager\\_id | string or null<br>The user id of the manager of this user |\n| department\\_id | string or null |\n| location\\_id | string or null |\n| title\\_id | string or null |\n| metadata | object or null<br>The metadata or customized attributes of the user. Maximum number of entries: 100 |\n\nResponses\n\n200\nupdateUser 200 response\n\nput/v2/users/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"status\": \"ACTIVE\",\n\"manager_id\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\",\n\"title_id\": \"string\",\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"}}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"first_name\": \"string\",\n\"last_name\": \"string\",\n\"email\": \"string\",\n\"status\": \"INVITED\",\n\"manager_id\": \"string\",\n\"department_id\": \"string\",\n\"location_id\": \"string\",\n\"title_id\": \"string\",\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"remote_display_id\": \"string\"}`\n\n## [operation/getUserLimit](https://developer.brex.com/openapi/team_api/\\#operation/getUserLimit) Get limit for the user\n\nThis endpoint gets the monthly limit for the user including the monthly available limit.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetUserLimit 200 response\n\nget/v2/users/{id}/limit\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/users/{id}/limit' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"monthly_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"monthly_available\": {\n\"amount\": 0,\n\"currency\": \"string\"}}`\n\n## [operation/setUserLimit](https://developer.brex.com/openapi/team_api/\\#operation/setUserLimit) Set limit for the user\n\nThis endpoint sets the monthly limit for a user.\nThe limit amount must be non-negative.\nTo unset the monthly limit of the user, just set `monthly_limit` to null.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| monthly\\_limit | object or null<br>Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination<br>of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700. |\n\nResponses\n\n200\nsetUserLimit 200 response\n\npost/v2/users/{id}/limit\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"monthly_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"}}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"monthly_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"monthly_available\": {\n\"amount\": 0,\n\"currency\": \"string\"}}`\n\n# [tag/Locations](https://developer.brex.com/openapi/team_api/\\#tag/Locations) Locations\n\nEndpoints for location management.\n\n## [operation/listLocations](https://developer.brex.com/openapi/team_api/\\#operation/listLocations) List locations\n\nThis endpoint lists all locations.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| name | string or null |\n\nResponses\n\n200\nlistLocations 200 response\n\nget/v2/locations\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/locations \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\"}]}`\n\n## [operation/createLocation](https://developer.brex.com/openapi/team_api/\\#operation/createLocation) Create location\n\nThis endpoint creates a new location.\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name<br>required | stringnon-empty<br>Name of the location |\n| description | string or null<br>Description of the location |\n\nResponses\n\n200\ncreateLocation 200 response\n\npost/v2/locations\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"name\": \"string\",\n\"description\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\"}`\n\n## [operation/getLocationById](https://developer.brex.com/openapi/team_api/\\#operation/getLocationById) Get location\n\nThis endpoint gets a location by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetLocationById 200 response\n\nget/v2/locations/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/locations/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\"}`\n\n# [tag/Departments](https://developer.brex.com/openapi/team_api/\\#tag/Departments) Departments\n\nEndpoints for department management.\n\n## [operation/listDepartments](https://developer.brex.com/openapi/team_api/\\#operation/listDepartments) List departments\n\nThis endpoint lists all departments.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| name | string or null |\n\nResponses\n\n200\nlistDepartments 200 response\n\nget/v2/departments\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/departments \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\",\\\n\"description\": \"string\"}]}`\n\n## [operation/createDepartment](https://developer.brex.com/openapi/team_api/\\#operation/createDepartment) Create department\n\nThis endpoint creates a new department\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name<br>required | stringnon-empty<br>Name of the department |\n| description | string or null<br>Description of the department |\n\nResponses\n\n200\ncreateDepartment 200 response\n\npost/v2/departments\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"name\": \"string\",\n\"description\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\"}`\n\n## [operation/getDepartmentById](https://developer.brex.com/openapi/team_api/\\#operation/getDepartmentById) Get department\n\nThis endpoint gets a department by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetDepartmentById 200 response\n\nget/v2/departments/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/departments/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"name\": \"string\",\n\"description\": \"string\"}`\n\n# [tag/Titles](https://developer.brex.com/openapi/team_api/\\#tag/Titles) Titles\n\nEndpoints for title management.\n\n## [operation/listTitles](https://developer.brex.com/openapi/team_api/\\#operation/listTitles) List titles\n\nThis endpoint lists all titles.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n| name | string or null |\n\nResponses\n\n200\nlistTitles 200 response\n\nget/v2/titles\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/titles \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"name\": \"string\"}]}`\n\n## [operation/createTitle](https://developer.brex.com/openapi/team_api/\\#operation/createTitle) Create title\n\nThis endpoint creates a new title\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| name<br>required | stringnon-empty<br>Name of the title |\n\nResponses\n\n200\ncreateTitle 200 response\n\npost/v2/titles\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"name\": \"string\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"name\": \"string\"}`\n\n## [operation/getTitleById](https://developer.brex.com/openapi/team_api/\\#operation/getTitleById) Get title\n\nThis endpoint gets a title by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetTitleById 200 response\n\nget/v2/titles/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/titles/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\n`{\n\"id\": \"string\",\n\"name\": \"string\"}`\n\n# [tag/Cards](https://developer.brex.com/openapi/team_api/\\#tag/Cards) Cards\n\nEndpoints for card management.\n\n## [operation/listCardsByUserId](https://developer.brex.com/openapi/team_api/\\#operation/listCardsByUserId) List cards\n\nLists all cards by a `user_id`.\nOnly cards with `limit_type = CARD` have `spend_controls`\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| user\\_id | string or null |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nlistCardsByUserId 200 response\n\nget/v2/cards\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/cards \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"owner\": {\\\n\"type\": \"USER\",\\\n\"user_id\": \"string\"},\\\n\"status\": \"ACTIVE\",\\\n\"last_four\": \"string\",\\\n\"card_name\": \"string\",\\\n\"card_type\": \"VIRTUAL\",\\\n\"limit_type\": \"CARD\",\\\n\"spend_controls\": {\\\n\"spend_limit\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"spend_available\": {\\\n\"amount\": 0,\\\n\"currency\": \"string\"},\\\n\"spend_duration\": \"MONTHLY\",\\\n\"reason\": \"string\",\\\n\"lock_after_date\": \"2019-08-24\"},\\\n\"billing_address\": {\\\n\"line1\": \"string\",\\\n\"line2\": \"string\",\\\n\"city\": \"string\",\\\n\"state\": \"string\",\\\n\"country\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"phone_number\": \"string\"},\\\n\"mailing_address\": {\\\n\"line1\": \"string\",\\\n\"line2\": \"string\",\\\n\"city\": \"string\",\\\n\"state\": \"string\",\\\n\"country\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"phone_number\": \"string\"},\\\n\"expiration_date\": {\\\n\"month\": 0,\\\n\"year\": 0},\\\n\"has_been_transferred\": true,\\\n\"metadata\": {\\\n\"property1\": \"string\",\\\n\"property2\": \"string\"},\\\n\"budget_id\": \"string\"}]}`\n\n## [operation/createCard](https://developer.brex.com/openapi/team_api/\\#operation/createCard) Create card\n\nCreates a new card.\nThe `spend_controls` field is required when `limit_type` = `CARD`.\nThe `mailing_address` field is required for physical cards and is the shipping address used to send the card; it is not the same as the billing and mailing address used for online purchases.\nThe first 2 lines of this address must be under 60 characters long. Each user can only have up to 10 active physical cards.\nFor Empower accounts, this endpoint requires budget management. If your account does not have access to budget management features, a 403 response status will be returned.\nIf this is the case and you want to gain access to this endpoint, please contact Brex support.\n\nSecurity**OAuth2**\n\nRequest\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| owner<br>required | object (CardOwner) |\n| card\\_name<br>required | stringnon-empty |\n| card\\_type<br>required | string (CardType) <br>Enum:\"VIRTUAL\"\"PHYSICAL\" |\n| limit\\_type<br>required | string (LimitType) <br>`limit_type = CARD` for vendor cards. Vendor cards must have a `card_type` of `VIRTUAL` <br>and do not rely on the user specific limit. <br>For corporate cards, `limit_type = USER`.<br>Learn more about different card types [here](https://support.brex.com/what-are-the-different-types-of-cards-i-can-get/).<br>Enum:\"CARD\"\"USER\" |\n| spend\\_controls | object or null<br>When `limit_type = CARD`, `spend_controls` must be set. When `limit type = USER`, `spend_controls` must be `null`. |\n| mailing\\_address | object or null<br>Company business address (must be in the US; no PO box or virtual/forwarding addresses allowed). |\n| metadata | object or null<br>Set of key value pairs associated with this object. Please do not store any personally identifiable or sensitive information here.<br>Limitations: maximum of 50 keys, keys cannot exceed 40 characters, values cannot exceed 500 characters. |\n| card\\_attribute\\_preferences | object or null |\n\nResponses\n\n200\ncreateCard 200 response\n\npost/v2/cards\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"owner\": {\n\"type\": \"USER\",\n\"user_id\": \"string\"},\n\"card_name\": \"string\",\n\"card_type\": \"VIRTUAL\",\n\"limit_type\": \"CARD\",\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\",\n\"parent_budget_id\": \"string\",\n\"policy_id\": \"string\"},\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"card_attribute_preferences\": {\n\"three_domain_secure_enabled_preference\": \"THREE_DOMAIN_SECURE_ENABLED\"}}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"owner\": {\n\"type\": \"USER\",\n\"user_id\": \"string\"},\n\"status\": \"ACTIVE\",\n\"last_four\": \"string\",\n\"card_name\": \"string\",\n\"card_type\": \"VIRTUAL\",\n\"limit_type\": \"CARD\",\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_available\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\"},\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"expiration_date\": {\n\"month\": 0,\n\"year\": 0},\n\"has_been_transferred\": true,\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"budget_id\": \"string\"}`\n\n## [operation/getCardById](https://developer.brex.com/openapi/team_api/\\#operation/getCardById) Get card\n\nRetrieves a card by ID. Only cards with `limit_type = CARD` have `spend_controls`\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetCardById 200 response\n\nget/v2/cards/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/cards/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"owner\": {\n\"type\": \"USER\",\n\"user_id\": \"string\"},\n\"status\": \"ACTIVE\",\n\"last_four\": \"string\",\n\"card_name\": \"string\",\n\"card_type\": \"VIRTUAL\",\n\"limit_type\": \"CARD\",\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_available\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\"},\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"expiration_date\": {\n\"month\": 0,\n\"year\": 0},\n\"has_been_transferred\": true,\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"budget_id\": \"string\"}`\n\n## [operation/updateCard](https://developer.brex.com/openapi/team_api/\\#operation/updateCard) Update card\n\nUpdate an existing vendor card\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| spend\\_controls | object or null |\n| metadata | object or null<br>Set of key value pairs associated with this object. Please do not store any personally identifiable or sensitive information here.<br>Limitations: maximum of 50 keys, keys cannot exceed 40 characters, values cannot exceed 500 characters. |\n\nResponses\n\n200\nupdateCard 200 response\n\nput/v2/cards/{id}\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\"},\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"}}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"owner\": {\n\"type\": \"USER\",\n\"user_id\": \"string\"},\n\"status\": \"ACTIVE\",\n\"last_four\": \"string\",\n\"card_name\": \"string\",\n\"card_type\": \"VIRTUAL\",\n\"limit_type\": \"CARD\",\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_available\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\"},\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"expiration_date\": {\n\"month\": 0,\n\"year\": 0},\n\"has_been_transferred\": true,\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"budget_id\": \"string\"}`\n\n## [operation/lockCard](https://developer.brex.com/openapi/team_api/\\#operation/lockCard) Lock card\n\nLocks an existing, unlocked card. And the card owner will receive a notification about it.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| description | string or null<br>Description for locking a card |\n| reason<br>required | string (ChangeCardReason) <br>Reason for card termination.<br>Enum:\"CARD\\_DAMAGED\"\"CARD\\_LOST\"\"CARD\\_NOT\\_RECEIVED\"\"DO\\_NOT\\_NEED\\_PHYSICAL\\_CARD\"\"DO\\_NOT\\_NEED\\_VIRTUAL\\_CARD\"\"FRAUD\"\"OTHER\" |\n\nResponses\n\n200\nlockCard 200 response\n\npost/v2/cards/{id}/lock\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"description\": \"string\",\n\"reason\": \"CARD_DAMAGED\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"owner\": {\n\"type\": \"USER\",\n\"user_id\": \"string\"},\n\"status\": \"ACTIVE\",\n\"last_four\": \"string\",\n\"card_name\": \"string\",\n\"card_type\": \"VIRTUAL\",\n\"limit_type\": \"CARD\",\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_available\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\"},\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"expiration_date\": {\n\"month\": 0,\n\"year\": 0},\n\"has_been_transferred\": true,\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"budget_id\": \"string\"}`\n\n## [operation/getCardNumber](https://developer.brex.com/openapi/team_api/\\#operation/getCardNumber) Get card number\n\nRetrieves card number, CVV, and expiration date of a card by ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetCardNumber 200 response\n\nget/v2/cards/{id}/pan\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://secure-platform.brexapis.com/v2/cards/{id}/pan' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"number\": \"string\",\n\"cvv\": \"string\",\n\"expiration_date\": {\n\"month\": 0,\n\"year\": 0},\n\"holder_name\": \"string\"}`\n\n## [operation/emailCardNumber](https://developer.brex.com/openapi/team_api/\\#operation/emailCardNumber) Create secure email to send card number\n\nCreates a secure email to send card number, CVV, and expiration date of a card by ID to the specified email.\n\nThis endpoint is currently gated. If you would like to request access, please reach out to\n[developer-access@brex.com](mailto:developer-access@brex.com)\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key<br>required | string |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| recipient\\_email | string<br>Email address to send card details to |\n| sender\\_name | string<br>Sender name. Shows up in the subject of the email |\n| message | string or null<br>Message to send with the card details |\n| expiry\\_days | integer or null<int32><= 30<br>Link expiry in number of days. Defaults to 30 |\n\nResponses\n\n200\nemailCardNumber 200 response\n\npost/v2/cards/{id}/secure\\_email\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"recipient_email\": \"string\",\n\"sender_name\": \"string\",\n\"message\": \"string\",\n\"expiry_days\": 30}`\n\n## [operation/terminateCard](https://developer.brex.com/openapi/team_api/\\#operation/terminateCard) Terminate card\n\nTerminates an existing card. The card owner will receive a notification about it.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\n##### Request Body schema: application/json\n\n|     |     |\n| --- | --- |\n| description | string or null<br>Description for terminating a card |\n| reason<br>required | string (ChangeCardReason) <br>Reason for card termination.<br>Enum:\"CARD\\_DAMAGED\"\"CARD\\_LOST\"\"CARD\\_NOT\\_RECEIVED\"\"DO\\_NOT\\_NEED\\_PHYSICAL\\_CARD\"\"DO\\_NOT\\_NEED\\_VIRTUAL\\_CARD\"\"FRAUD\"\"OTHER\" |\n\nResponses\n\n200\nterminateCard 200 response\n\npost/v2/cards/{id}/terminate\n\nTry it\n\nRequest samples\n\n- Payload\n- curl\n- JavaScript\n- Node.js\n- Python\n\napplication/json\n\nCopy\n\n`{\n\"description\": \"string\",\n\"reason\": \"CARD_DAMAGED\"}`\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"owner\": {\n\"type\": \"USER\",\n\"user_id\": \"string\"},\n\"status\": \"ACTIVE\",\n\"last_four\": \"string\",\n\"card_name\": \"string\",\n\"card_type\": \"VIRTUAL\",\n\"limit_type\": \"CARD\",\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_available\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\"},\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"expiration_date\": {\n\"month\": 0,\n\"year\": 0},\n\"has_been_transferred\": true,\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"budget_id\": \"string\"}`\n\n## [operation/unlockCard](https://developer.brex.com/openapi/team_api/\\#operation/unlockCard) Unlock card\n\nUnlocks an existing card.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\n##### header Parameters\n\n|     |     |\n| --- | --- |\n| Idempotency-Key | string or null |\n\nResponses\n\n200\nunlockCard 200 response\n\npost/v2/cards/{id}/unlock\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X POST \\\n  'https://platform.brexapis.com/v2/cards/{id}/unlock' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"owner\": {\n\"type\": \"USER\",\n\"user_id\": \"string\"},\n\"status\": \"ACTIVE\",\n\"last_four\": \"string\",\n\"card_name\": \"string\",\n\"card_type\": \"VIRTUAL\",\n\"limit_type\": \"CARD\",\n\"spend_controls\": {\n\"spend_limit\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_available\": {\n\"amount\": 0,\n\"currency\": \"string\"},\n\"spend_duration\": \"MONTHLY\",\n\"reason\": \"string\",\n\"lock_after_date\": \"2019-08-24\"},\n\"billing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"expiration_date\": {\n\"month\": 0,\n\"year\": 0},\n\"has_been_transferred\": true,\n\"metadata\": {\n\"property1\": \"string\",\n\"property2\": \"string\"},\n\"budget_id\": \"string\"}`\n\n# [tag/Legal-Entities](https://developer.brex.com/openapi/team_api/\\#tag/Legal-Entities) Legal Entities\n\nEndpoints for legal entities.\n\n## [operation/listLegalEntities](https://developer.brex.com/openapi/team_api/\\#operation/listLegalEntities) List legal entities\n\nList legal entities for the account.\n\nSecurity**OAuth2**\n\nRequest\n\n##### query Parameters\n\n|     |     |\n| --- | --- |\n| cursor | string or null |\n| limit | integer or null<int32> |\n\nResponses\n\n200\nlistLegalEntities 200 response\n\nget/v2/legal\\_entities\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/legal_entities \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"next_cursor\": \"string\",\n\"items\": [\\\n{\\\n\"id\": \"string\",\\\n\"displayName\": \"string\",\\\n\"billingAddress\": {\\\n\"line1\": \"string\",\\\n\"line2\": \"string\",\\\n\"city\": \"string\",\\\n\"state\": \"string\",\\\n\"country\": \"string\",\\\n\"postal_code\": \"string\",\\\n\"phone_number\": \"string\"},\\\n\"createdAt\": \"2019-08-24T14:15:22Z\",\\\n\"status\": \"UNSUBMITTED\",\\\n\"isDefault\": true}]}`\n\n## [operation/getLegalEntity](https://developer.brex.com/openapi/team_api/\\#operation/getLegalEntity) Get legal entity\n\nGet a legal entity by its ID.\n\nSecurity**OAuth2**\n\nRequest\n\n##### path Parameters\n\n|     |     |\n| --- | --- |\n| id<br>required | string |\n\nResponses\n\n200\ngetLegalEntity 200 response\n\nget/v2/legal\\_entities/{id}\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  'https://platform.brexapis.com/v2/legal_entities/{id}' \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"displayName\": \"string\",\n\"billingAddress\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"createdAt\": \"2019-08-24T14:15:22Z\",\n\"status\": \"UNSUBMITTED\",\n\"isDefault\": true}`\n\n# [tag/Companies](https://developer.brex.com/openapi/team_api/\\#tag/Companies) Companies\n\n## [operation/getCompany](https://developer.brex.com/openapi/team_api/\\#operation/getCompany) Get company\n\nThis endpoint returns the company associated with the OAuth2 access token.\n\nSecurity**OAuth2**\n\nResponses\n\n200\ngetCompany 200 response\n\nget/v2/company\n\nTry it\n\nRequest samples\n\n- curl\n- JavaScript\n- Node.js\n- Python\n\nCopy\n\n```\ncurl -i -X GET \\\n  https://platform.brexapis.com/v2/company \\\n  -H 'Authorization: Bearer <YOUR_TOKEN_HERE>'\n```\n\nResponse samples\n\n- 200\n\napplication/json\n\nCopy\n\nExpand allCollapse all\n\n`{\n\"id\": \"string\",\n\"legal_name\": \"string\",\n\"mailing_address\": {\n\"line1\": \"string\",\n\"line2\": \"string\",\n\"city\": \"string\",\n\"state\": \"string\",\n\"country\": \"string\",\n\"postal_code\": \"string\",\n\"phone_number\": \"string\"},\n\"accountType\": \"BREX_CLASSIC\"}`\n\n[Next to **Payments API**](https://developer.brex.com/openapi/payments_api/)",
    "metadata": {
      "url": "https://developer.brex.com/openapi/team_api/",
      "title": "Team API",
      "favicon": {},
      "og:type": "website",
      "ogTitle": "Team API",
      "keywords": "brex, documentation, api, portal, integration, automation",
      "language": "",
      "og:title": "Team API",
      "scrapeId": "ebbdd717-c01a-42f3-a8a8-55684edc1de3",
      "viewport": "width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover",
      "generator": "Gatsby 3.10.2",
      "sourceURL": "https://developer.brex.com/openapi/team_api/",
      "ogSiteName": "Brex Developer API",
      "statusCode": 200,
      "description": "APIs to build on top of the Brex financial OS.",
      "og:site_name": "Brex Developer API",
      "twitter:card": "summary",
      "ogDescription": "APIs to build on top of the Brex financial OS.",
      "twitter:title": "Team API",
      "og:description": "APIs to build on top of the Brex financial OS.",
      "twitter:description": "APIs to build on top of the Brex financial OS."
    }
  }
]